
CustomProject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000d2  00800100  00000f54  00000fe8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000f54  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000069  008001d2  008001d2  000010ba  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000010ba  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000010ec  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000140  00000000  00000000  0000112c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001b96  00000000  00000000  0000126c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b1b  00000000  00000000  00002e02  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000edf  00000000  00000000  0000391d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000374  00000000  00000000  000047fc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000afe  00000000  00000000  00004b70  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001470  00000000  00000000  0000566e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001d8  00000000  00000000  00006ade  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	64 c1       	rjmp	.+712    	; 0x2fe <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e4 e5       	ldi	r30, 0x54	; 84
  a0:	ff e0       	ldi	r31, 0x0F	; 15
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a2 3d       	cpi	r26, 0xD2	; 210
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	22 e0       	ldi	r18, 0x02	; 2
  b4:	a2 ed       	ldi	r26, 0xD2	; 210
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	ab 33       	cpi	r26, 0x3B	; 59
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	d1 d4       	rcall	.+2466   	; 0xa66 <main>
  c4:	45 c7       	rjmp	.+3722   	; 0xf50 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <time>:
  c8:	fc 01       	movw	r30, r24
  ca:	0f b6       	in	r0, 0x3f	; 63
  cc:	f8 94       	cli
  ce:	60 91 37 02 	lds	r22, 0x0237	; 0x800237 <__system_time>
  d2:	70 91 38 02 	lds	r23, 0x0238	; 0x800238 <__system_time+0x1>
  d6:	80 91 39 02 	lds	r24, 0x0239	; 0x800239 <__system_time+0x2>
  da:	90 91 3a 02 	lds	r25, 0x023A	; 0x80023a <__system_time+0x3>
  de:	0f be       	out	0x3f, r0	; 63
  e0:	30 97       	sbiw	r30, 0x00	; 0
  e2:	21 f0       	breq	.+8      	; 0xec <time+0x24>
  e4:	60 83       	st	Z, r22
  e6:	71 83       	std	Z+1, r23	; 0x01
  e8:	82 83       	std	Z+2, r24	; 0x02
  ea:	93 83       	std	Z+3, r25	; 0x03
  ec:	08 95       	ret

000000ee <game_start_tick>:
		if(c==0){return b;}
		a = b;
		b = c;
	}
	return 0;
}
  ee:	20 91 30 02 	lds	r18, 0x0230	; 0x800230 <gameOverFlag>
  f2:	21 30       	cpi	r18, 0x01	; 1
  f4:	91 f0       	breq	.+36     	; 0x11a <game_start_tick+0x2c>
  f6:	81 30       	cpi	r24, 0x01	; 1
  f8:	91 05       	cpc	r25, r1
  fa:	51 f0       	breq	.+20     	; 0x110 <game_start_tick+0x22>
  fc:	82 30       	cpi	r24, 0x02	; 2
  fe:	91 05       	cpc	r25, r1
 100:	61 f0       	breq	.+24     	; 0x11a <game_start_tick+0x2c>
 102:	00 97       	sbiw	r24, 0x00	; 0
 104:	89 f4       	brne	.+34     	; 0x128 <game_start_tick+0x3a>
 106:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <key>
 10a:	81 34       	cpi	r24, 0x41	; 65
 10c:	a9 f4       	brne	.+42     	; 0x138 <game_start_tick+0x4a>
 10e:	19 c0       	rjmp	.+50     	; 0x142 <game_start_tick+0x54>
 110:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <key>
 114:	84 34       	cpi	r24, 0x44	; 68
 116:	a9 f4       	brne	.+42     	; 0x142 <game_start_tick+0x54>
 118:	0f c0       	rjmp	.+30     	; 0x138 <game_start_tick+0x4a>
 11a:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <key>
 11e:	83 34       	cpi	r24, 0x43	; 67
 120:	b1 f4       	brne	.+44     	; 0x14e <game_start_tick+0x60>
 122:	10 92 30 02 	sts	0x0230, r1	; 0x800230 <gameOverFlag>
 126:	08 c0       	rjmp	.+16     	; 0x138 <game_start_tick+0x4a>
 128:	81 30       	cpi	r24, 0x01	; 1
 12a:	91 05       	cpc	r25, r1
 12c:	51 f0       	breq	.+20     	; 0x142 <game_start_tick+0x54>
 12e:	82 30       	cpi	r24, 0x02	; 2
 130:	91 05       	cpc	r25, r1
 132:	69 f0       	breq	.+26     	; 0x14e <game_start_tick+0x60>
 134:	00 97       	sbiw	r24, 0x00	; 0
 136:	79 f4       	brne	.+30     	; 0x156 <game_start_tick+0x68>
 138:	10 92 31 02 	sts	0x0231, r1	; 0x800231 <playFlag>
 13c:	80 e0       	ldi	r24, 0x00	; 0
 13e:	90 e0       	ldi	r25, 0x00	; 0
 140:	08 95       	ret
 142:	81 e0       	ldi	r24, 0x01	; 1
 144:	80 93 31 02 	sts	0x0231, r24	; 0x800231 <playFlag>
 148:	81 e0       	ldi	r24, 0x01	; 1
 14a:	90 e0       	ldi	r25, 0x00	; 0
 14c:	08 95       	ret
 14e:	10 92 31 02 	sts	0x0231, r1	; 0x800231 <playFlag>
 152:	82 e0       	ldi	r24, 0x02	; 2
 154:	90 e0       	ldi	r25, 0x00	; 0
 156:	08 95       	ret

00000158 <terrain_tick>:
 158:	00 97       	sbiw	r24, 0x00	; 0
 15a:	21 f0       	breq	.+8      	; 0x164 <terrain_tick+0xc>
 15c:	81 30       	cpi	r24, 0x01	; 1
 15e:	91 05       	cpc	r25, r1
 160:	31 f0       	breq	.+12     	; 0x16e <terrain_tick+0x16>
 162:	0a c0       	rjmp	.+20     	; 0x178 <terrain_tick+0x20>
 164:	80 91 31 02 	lds	r24, 0x0231	; 0x800231 <playFlag>
 168:	81 30       	cpi	r24, 0x01	; 1
 16a:	61 f4       	brne	.+24     	; 0x184 <terrain_tick+0x2c>
 16c:	10 c0       	rjmp	.+32     	; 0x18e <terrain_tick+0x36>
 16e:	80 91 31 02 	lds	r24, 0x0231	; 0x800231 <playFlag>
 172:	88 23       	and	r24, r24
 174:	39 f0       	breq	.+14     	; 0x184 <terrain_tick+0x2c>
 176:	0b c0       	rjmp	.+22     	; 0x18e <terrain_tick+0x36>
 178:	00 97       	sbiw	r24, 0x00	; 0
 17a:	21 f0       	breq	.+8      	; 0x184 <terrain_tick+0x2c>
 17c:	81 30       	cpi	r24, 0x01	; 1
 17e:	91 05       	cpc	r25, r1
 180:	69 f4       	brne	.+26     	; 0x19c <terrain_tick+0x44>
 182:	05 c0       	rjmp	.+10     	; 0x18e <terrain_tick+0x36>
 184:	10 92 2e 02 	sts	0x022E, r1	; 0x80022e <terrainShift>
 188:	80 e0       	ldi	r24, 0x00	; 0
 18a:	90 e0       	ldi	r25, 0x00	; 0
 18c:	08 95       	ret
 18e:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <terrainShift>
 192:	8f 5f       	subi	r24, 0xFF	; 255
 194:	80 93 2e 02 	sts	0x022E, r24	; 0x80022e <terrainShift>
 198:	81 e0       	ldi	r24, 0x01	; 1
 19a:	90 e0       	ldi	r25, 0x00	; 0
 19c:	08 95       	ret

0000019e <collision_tick>:
 19e:	ef 92       	push	r14
 1a0:	ff 92       	push	r15
 1a2:	0f 93       	push	r16
 1a4:	1f 93       	push	r17
 1a6:	cf 93       	push	r28
 1a8:	df 93       	push	r29
 1aa:	00 97       	sbiw	r24, 0x00	; 0
 1ac:	21 f0       	breq	.+8      	; 0x1b6 <collision_tick+0x18>
 1ae:	81 30       	cpi	r24, 0x01	; 1
 1b0:	91 05       	cpc	r25, r1
 1b2:	49 f0       	breq	.+18     	; 0x1c6 <collision_tick+0x28>
 1b4:	0e c0       	rjmp	.+28     	; 0x1d2 <collision_tick+0x34>
 1b6:	20 91 31 02 	lds	r18, 0x0231	; 0x800231 <playFlag>
 1ba:	21 30       	cpi	r18, 0x01	; 1
 1bc:	09 f0       	breq	.+2      	; 0x1c0 <collision_tick+0x22>
 1be:	63 c0       	rjmp	.+198    	; 0x286 <collision_tick+0xe8>
 1c0:	10 92 2f 02 	sts	0x022F, r1	; 0x80022f <score>
 1c4:	0a c0       	rjmp	.+20     	; 0x1da <collision_tick+0x3c>
 1c6:	80 91 31 02 	lds	r24, 0x0231	; 0x800231 <playFlag>
 1ca:	88 23       	and	r24, r24
 1cc:	09 f4       	brne	.+2      	; 0x1d0 <collision_tick+0x32>
 1ce:	59 c0       	rjmp	.+178    	; 0x282 <collision_tick+0xe4>
 1d0:	04 c0       	rjmp	.+8      	; 0x1da <collision_tick+0x3c>
 1d2:	81 30       	cpi	r24, 0x01	; 1
 1d4:	91 05       	cpc	r25, r1
 1d6:	09 f0       	breq	.+2      	; 0x1da <collision_tick+0x3c>
 1d8:	56 c0       	rjmp	.+172    	; 0x286 <collision_tick+0xe8>
 1da:	60 91 2f 02 	lds	r22, 0x022F	; 0x80022f <score>
 1de:	af e3       	ldi	r26, 0x3F	; 63
 1e0:	b1 e0       	ldi	r27, 0x01	; 1
 1e2:	04 e4       	ldi	r16, 0x44	; 68
 1e4:	11 e0       	ldi	r17, 0x01	; 1
 1e6:	4f e3       	ldi	r20, 0x3F	; 63
 1e8:	51 e0       	ldi	r21, 0x01	; 1
 1ea:	7f ef       	ldi	r23, 0xFF	; 255
 1ec:	7d 01       	movw	r14, r26
 1ee:	8c 91       	ld	r24, X
 1f0:	8f 3f       	cpi	r24, 0xFF	; 255
 1f2:	81 f0       	breq	.+32     	; 0x214 <collision_tick+0x76>
 1f4:	ec e3       	ldi	r30, 0x3C	; 60
 1f6:	f1 e0       	ldi	r31, 0x01	; 1
 1f8:	80 81       	ld	r24, Z
 1fa:	8f 3f       	cpi	r24, 0xFF	; 255
 1fc:	39 f0       	breq	.+14     	; 0x20c <collision_tick+0x6e>
 1fe:	e7 01       	movw	r28, r14
 200:	98 81       	ld	r25, Y
 202:	89 13       	cpse	r24, r25
 204:	03 c0       	rjmp	.+6      	; 0x20c <collision_tick+0x6e>
 206:	6f 5f       	subi	r22, 0xFF	; 255
 208:	78 83       	st	Y, r23
 20a:	70 83       	st	Z, r23
 20c:	31 96       	adiw	r30, 0x01	; 1
 20e:	4e 17       	cp	r20, r30
 210:	5f 07       	cpc	r21, r31
 212:	91 f7       	brne	.-28     	; 0x1f8 <collision_tick+0x5a>
 214:	11 96       	adiw	r26, 0x01	; 1
 216:	0a 17       	cp	r16, r26
 218:	1b 07       	cpc	r17, r27
 21a:	41 f7       	brne	.-48     	; 0x1ec <collision_tick+0x4e>
 21c:	60 93 2f 02 	sts	0x022F, r22	; 0x80022f <score>
 220:	40 91 2e 02 	lds	r20, 0x022E	; 0x80022e <terrainShift>
 224:	60 91 2d 02 	lds	r22, 0x022D	; 0x80022d <player_one_location>
 228:	70 91 30 02 	lds	r23, 0x0230	; 0x800230 <gameOverFlag>
 22c:	80 e1       	ldi	r24, 0x10	; 16
 22e:	20 e0       	ldi	r18, 0x00	; 0
 230:	30 e0       	ldi	r19, 0x00	; 0
 232:	50 e0       	ldi	r21, 0x00	; 0
 234:	a1 e0       	ldi	r26, 0x01	; 1
 236:	fa 01       	movw	r30, r20
 238:	e2 0f       	add	r30, r18
 23a:	f3 1f       	adc	r31, r19
 23c:	ef 71       	andi	r30, 0x1F	; 31
 23e:	ff 27       	eor	r31, r31
 240:	ef 54       	subi	r30, 0x4F	; 79
 242:	fe 4f       	sbci	r31, 0xFE	; 254
 244:	90 81       	ld	r25, Z
 246:	90 32       	cpi	r25, 0x20	; 32
 248:	19 f0       	breq	.+6      	; 0x250 <collision_tick+0xb2>
 24a:	68 13       	cpse	r22, r24
 24c:	01 c0       	rjmp	.+2      	; 0x250 <collision_tick+0xb2>
 24e:	7a 2f       	mov	r23, r26
 250:	2f 5f       	subi	r18, 0xFF	; 255
 252:	3f 4f       	sbci	r19, 0xFF	; 255
 254:	8f 5f       	subi	r24, 0xFF	; 255
 256:	80 32       	cpi	r24, 0x20	; 32
 258:	71 f7       	brne	.-36     	; 0x236 <collision_tick+0x98>
 25a:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <enemy_location>
 25e:	68 13       	cpse	r22, r24
 260:	01 c0       	rjmp	.+2      	; 0x264 <collision_tick+0xc6>
 262:	71 e0       	ldi	r23, 0x01	; 1
 264:	80 91 3d 01 	lds	r24, 0x013D	; 0x80013d <enemy_location+0x1>
 268:	68 13       	cpse	r22, r24
 26a:	01 c0       	rjmp	.+2      	; 0x26e <collision_tick+0xd0>
 26c:	71 e0       	ldi	r23, 0x01	; 1
 26e:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <enemy_location+0x2>
 272:	68 13       	cpse	r22, r24
 274:	01 c0       	rjmp	.+2      	; 0x278 <collision_tick+0xda>
 276:	71 e0       	ldi	r23, 0x01	; 1
 278:	70 93 30 02 	sts	0x0230, r23	; 0x800230 <gameOverFlag>
 27c:	81 e0       	ldi	r24, 0x01	; 1
 27e:	90 e0       	ldi	r25, 0x00	; 0
 280:	02 c0       	rjmp	.+4      	; 0x286 <collision_tick+0xe8>
 282:	80 e0       	ldi	r24, 0x00	; 0
 284:	90 e0       	ldi	r25, 0x00	; 0
 286:	df 91       	pop	r29
 288:	cf 91       	pop	r28
 28a:	1f 91       	pop	r17
 28c:	0f 91       	pop	r16
 28e:	ff 90       	pop	r15
 290:	ef 90       	pop	r14
 292:	08 95       	ret

00000294 <TimerSet>:
 294:	60 93 45 01 	sts	0x0145, r22	; 0x800145 <_avr_timer_M>
 298:	70 93 46 01 	sts	0x0146, r23	; 0x800146 <_avr_timer_M+0x1>
 29c:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <_avr_timer_M+0x2>
 2a0:	90 93 48 01 	sts	0x0148, r25	; 0x800148 <_avr_timer_M+0x3>
 2a4:	60 93 32 02 	sts	0x0232, r22	; 0x800232 <_avr_timer_cntcurr>
 2a8:	70 93 33 02 	sts	0x0233, r23	; 0x800233 <_avr_timer_cntcurr+0x1>
 2ac:	80 93 34 02 	sts	0x0234, r24	; 0x800234 <_avr_timer_cntcurr+0x2>
 2b0:	90 93 35 02 	sts	0x0235, r25	; 0x800235 <_avr_timer_cntcurr+0x3>
 2b4:	08 95       	ret

000002b6 <TimerOn>:
 2b6:	8b e0       	ldi	r24, 0x0B	; 11
 2b8:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 2bc:	8d e7       	ldi	r24, 0x7D	; 125
 2be:	90 e0       	ldi	r25, 0x00	; 0
 2c0:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 2c4:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 2c8:	82 e0       	ldi	r24, 0x02	; 2
 2ca:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 2ce:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 2d2:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 2d6:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <_avr_timer_M>
 2da:	90 91 46 01 	lds	r25, 0x0146	; 0x800146 <_avr_timer_M+0x1>
 2de:	a0 91 47 01 	lds	r26, 0x0147	; 0x800147 <_avr_timer_M+0x2>
 2e2:	b0 91 48 01 	lds	r27, 0x0148	; 0x800148 <_avr_timer_M+0x3>
 2e6:	80 93 32 02 	sts	0x0232, r24	; 0x800232 <_avr_timer_cntcurr>
 2ea:	90 93 33 02 	sts	0x0233, r25	; 0x800233 <_avr_timer_cntcurr+0x1>
 2ee:	a0 93 34 02 	sts	0x0234, r26	; 0x800234 <_avr_timer_cntcurr+0x2>
 2f2:	b0 93 35 02 	sts	0x0235, r27	; 0x800235 <_avr_timer_cntcurr+0x3>
 2f6:	8f b7       	in	r24, 0x3f	; 63
 2f8:	80 68       	ori	r24, 0x80	; 128
 2fa:	8f bf       	out	0x3f, r24	; 63
 2fc:	08 95       	ret

000002fe <__vector_13>:
 2fe:	1f 92       	push	r1
 300:	0f 92       	push	r0
 302:	0f b6       	in	r0, 0x3f	; 63
 304:	0f 92       	push	r0
 306:	11 24       	eor	r1, r1
 308:	8f 93       	push	r24
 30a:	9f 93       	push	r25
 30c:	af 93       	push	r26
 30e:	bf 93       	push	r27
 310:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <_avr_timer_cntcurr>
 314:	90 91 33 02 	lds	r25, 0x0233	; 0x800233 <_avr_timer_cntcurr+0x1>
 318:	a0 91 34 02 	lds	r26, 0x0234	; 0x800234 <_avr_timer_cntcurr+0x2>
 31c:	b0 91 35 02 	lds	r27, 0x0235	; 0x800235 <_avr_timer_cntcurr+0x3>
 320:	01 97       	sbiw	r24, 0x01	; 1
 322:	a1 09       	sbc	r26, r1
 324:	b1 09       	sbc	r27, r1
 326:	80 93 32 02 	sts	0x0232, r24	; 0x800232 <_avr_timer_cntcurr>
 32a:	90 93 33 02 	sts	0x0233, r25	; 0x800233 <_avr_timer_cntcurr+0x1>
 32e:	a0 93 34 02 	sts	0x0234, r26	; 0x800234 <_avr_timer_cntcurr+0x2>
 332:	b0 93 35 02 	sts	0x0235, r27	; 0x800235 <_avr_timer_cntcurr+0x3>
 336:	89 2b       	or	r24, r25
 338:	8a 2b       	or	r24, r26
 33a:	8b 2b       	or	r24, r27
 33c:	99 f4       	brne	.+38     	; 0x364 <__vector_13+0x66>
 33e:	81 e0       	ldi	r24, 0x01	; 1
 340:	80 93 36 02 	sts	0x0236, r24	; 0x800236 <TimerFlag>
 344:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <_avr_timer_M>
 348:	90 91 46 01 	lds	r25, 0x0146	; 0x800146 <_avr_timer_M+0x1>
 34c:	a0 91 47 01 	lds	r26, 0x0147	; 0x800147 <_avr_timer_M+0x2>
 350:	b0 91 48 01 	lds	r27, 0x0148	; 0x800148 <_avr_timer_M+0x3>
 354:	80 93 32 02 	sts	0x0232, r24	; 0x800232 <_avr_timer_cntcurr>
 358:	90 93 33 02 	sts	0x0233, r25	; 0x800233 <_avr_timer_cntcurr+0x1>
 35c:	a0 93 34 02 	sts	0x0234, r26	; 0x800234 <_avr_timer_cntcurr+0x2>
 360:	b0 93 35 02 	sts	0x0235, r27	; 0x800235 <_avr_timer_cntcurr+0x3>
 364:	bf 91       	pop	r27
 366:	af 91       	pop	r26
 368:	9f 91       	pop	r25
 36a:	8f 91       	pop	r24
 36c:	0f 90       	pop	r0
 36e:	0f be       	out	0x3f, r0	; 63
 370:	0f 90       	pop	r0
 372:	1f 90       	pop	r1
 374:	18 95       	reti

00000376 <delay_ms>:
 376:	18 16       	cp	r1, r24
 378:	19 06       	cpc	r1, r25
 37a:	5c f0       	brlt	.+22     	; 0x392 <delay_ms+0x1c>
 37c:	08 95       	ret
 37e:	00 00       	nop
 380:	21 50       	subi	r18, 0x01	; 1
 382:	31 09       	sbc	r19, r1
 384:	e1 f7       	brne	.-8      	; 0x37e <delay_ms+0x8>
 386:	4f 5f       	subi	r20, 0xFF	; 255
 388:	5f 4f       	sbci	r21, 0xFF	; 255
 38a:	84 17       	cp	r24, r20
 38c:	95 07       	cpc	r25, r21
 38e:	19 f4       	brne	.+6      	; 0x396 <delay_ms+0x20>
 390:	08 95       	ret
 392:	40 e0       	ldi	r20, 0x00	; 0
 394:	50 e0       	ldi	r21, 0x00	; 0
 396:	27 e0       	ldi	r18, 0x07	; 7
 398:	33 e0       	ldi	r19, 0x03	; 3
 39a:	f1 cf       	rjmp	.-30     	; 0x37e <delay_ms+0x8>

0000039c <LCD_WriteCommand>:
 39c:	10 98       	cbi	0x02, 0	; 2
 39e:	8b b9       	out	0x0b, r24	; 11
 3a0:	11 9a       	sbi	0x02, 1	; 2
 3a2:	00 00       	nop
 3a4:	11 98       	cbi	0x02, 1	; 2
 3a6:	82 e0       	ldi	r24, 0x02	; 2
 3a8:	90 e0       	ldi	r25, 0x00	; 0
 3aa:	e5 cf       	rjmp	.-54     	; 0x376 <delay_ms>
 3ac:	08 95       	ret

000003ae <LCD_ClearScreen>:
 3ae:	81 e0       	ldi	r24, 0x01	; 1
 3b0:	f5 cf       	rjmp	.-22     	; 0x39c <LCD_WriteCommand>
 3b2:	08 95       	ret

000003b4 <LCD_Cursor>:
 3b4:	81 31       	cpi	r24, 0x11	; 17
 3b6:	18 f4       	brcc	.+6      	; 0x3be <LCD_Cursor+0xa>
 3b8:	81 58       	subi	r24, 0x81	; 129
 3ba:	f0 cf       	rjmp	.-32     	; 0x39c <LCD_WriteCommand>
 3bc:	08 95       	ret
 3be:	81 55       	subi	r24, 0x51	; 81
 3c0:	ed cf       	rjmp	.-38     	; 0x39c <LCD_WriteCommand>
 3c2:	08 95       	ret

000003c4 <LCD_init>:
 3c4:	84 e6       	ldi	r24, 0x64	; 100
 3c6:	90 e0       	ldi	r25, 0x00	; 0
 3c8:	d6 df       	rcall	.-84     	; 0x376 <delay_ms>
 3ca:	88 e3       	ldi	r24, 0x38	; 56
 3cc:	e7 df       	rcall	.-50     	; 0x39c <LCD_WriteCommand>
 3ce:	86 e0       	ldi	r24, 0x06	; 6
 3d0:	e5 df       	rcall	.-54     	; 0x39c <LCD_WriteCommand>
 3d2:	8f e0       	ldi	r24, 0x0F	; 15
 3d4:	e3 df       	rcall	.-58     	; 0x39c <LCD_WriteCommand>
 3d6:	81 e0       	ldi	r24, 0x01	; 1
 3d8:	e1 df       	rcall	.-62     	; 0x39c <LCD_WriteCommand>
 3da:	8a e0       	ldi	r24, 0x0A	; 10
 3dc:	90 e0       	ldi	r25, 0x00	; 0
 3de:	cb cf       	rjmp	.-106    	; 0x376 <delay_ms>
 3e0:	08 95       	ret

000003e2 <LCD_WriteData>:
 3e2:	10 9a       	sbi	0x02, 0	; 2
 3e4:	8b b9       	out	0x0b, r24	; 11
 3e6:	11 9a       	sbi	0x02, 1	; 2
 3e8:	00 00       	nop
 3ea:	11 98       	cbi	0x02, 1	; 2
 3ec:	81 e0       	ldi	r24, 0x01	; 1
 3ee:	90 e0       	ldi	r25, 0x00	; 0
 3f0:	c2 cf       	rjmp	.-124    	; 0x376 <delay_ms>
 3f2:	08 95       	ret

000003f4 <LCD_DisplayString>:
 3f4:	0f 93       	push	r16
 3f6:	1f 93       	push	r17
 3f8:	cf 93       	push	r28
 3fa:	df 93       	push	r29
 3fc:	18 2f       	mov	r17, r24
 3fe:	eb 01       	movw	r28, r22
 400:	d6 df       	rcall	.-84     	; 0x3ae <LCD_ClearScreen>
 402:	88 81       	ld	r24, Y
 404:	88 23       	and	r24, r24
 406:	51 f0       	breq	.+20     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 408:	01 e0       	ldi	r16, 0x01	; 1
 40a:	01 0f       	add	r16, r17
 40c:	81 2f       	mov	r24, r17
 40e:	d2 df       	rcall	.-92     	; 0x3b4 <LCD_Cursor>
 410:	89 91       	ld	r24, Y+
 412:	e7 df       	rcall	.-50     	; 0x3e2 <LCD_WriteData>
 414:	10 2f       	mov	r17, r16
 416:	88 81       	ld	r24, Y
 418:	81 11       	cpse	r24, r1
 41a:	f6 cf       	rjmp	.-20     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 41c:	df 91       	pop	r29
 41e:	cf 91       	pop	r28
 420:	1f 91       	pop	r17
 422:	0f 91       	pop	r16
 424:	08 95       	ret

00000426 <GetKeypadKey>:
 426:	8f ee       	ldi	r24, 0xEF	; 239
 428:	88 b9       	out	0x08, r24	; 8
 42a:	00 00       	nop
 42c:	30 9b       	sbis	0x06, 0	; 6
 42e:	29 c0       	rjmp	.+82     	; 0x482 <GetKeypadKey+0x5c>
 430:	31 9b       	sbis	0x06, 1	; 6
 432:	29 c0       	rjmp	.+82     	; 0x486 <GetKeypadKey+0x60>
 434:	32 9b       	sbis	0x06, 2	; 6
 436:	29 c0       	rjmp	.+82     	; 0x48a <GetKeypadKey+0x64>
 438:	33 9b       	sbis	0x06, 3	; 6
 43a:	29 c0       	rjmp	.+82     	; 0x48e <GetKeypadKey+0x68>
 43c:	8f ed       	ldi	r24, 0xDF	; 223
 43e:	88 b9       	out	0x08, r24	; 8
 440:	00 00       	nop
 442:	30 9b       	sbis	0x06, 0	; 6
 444:	26 c0       	rjmp	.+76     	; 0x492 <GetKeypadKey+0x6c>
 446:	31 9b       	sbis	0x06, 1	; 6
 448:	26 c0       	rjmp	.+76     	; 0x496 <GetKeypadKey+0x70>
 44a:	32 9b       	sbis	0x06, 2	; 6
 44c:	26 c0       	rjmp	.+76     	; 0x49a <GetKeypadKey+0x74>
 44e:	33 9b       	sbis	0x06, 3	; 6
 450:	26 c0       	rjmp	.+76     	; 0x49e <GetKeypadKey+0x78>
 452:	8f eb       	ldi	r24, 0xBF	; 191
 454:	88 b9       	out	0x08, r24	; 8
 456:	00 00       	nop
 458:	30 9b       	sbis	0x06, 0	; 6
 45a:	23 c0       	rjmp	.+70     	; 0x4a2 <GetKeypadKey+0x7c>
 45c:	31 9b       	sbis	0x06, 1	; 6
 45e:	23 c0       	rjmp	.+70     	; 0x4a6 <GetKeypadKey+0x80>
 460:	32 9b       	sbis	0x06, 2	; 6
 462:	23 c0       	rjmp	.+70     	; 0x4aa <GetKeypadKey+0x84>
 464:	33 9b       	sbis	0x06, 3	; 6
 466:	23 c0       	rjmp	.+70     	; 0x4ae <GetKeypadKey+0x88>
 468:	8f e7       	ldi	r24, 0x7F	; 127
 46a:	88 b9       	out	0x08, r24	; 8
 46c:	00 00       	nop
 46e:	30 9b       	sbis	0x06, 0	; 6
 470:	20 c0       	rjmp	.+64     	; 0x4b2 <GetKeypadKey+0x8c>
 472:	31 9b       	sbis	0x06, 1	; 6
 474:	20 c0       	rjmp	.+64     	; 0x4b6 <GetKeypadKey+0x90>
 476:	32 9b       	sbis	0x06, 2	; 6
 478:	20 c0       	rjmp	.+64     	; 0x4ba <GetKeypadKey+0x94>
 47a:	33 9b       	sbis	0x06, 3	; 6
 47c:	20 c0       	rjmp	.+64     	; 0x4be <GetKeypadKey+0x98>
 47e:	80 e0       	ldi	r24, 0x00	; 0
 480:	08 95       	ret
 482:	80 e2       	ldi	r24, 0x20	; 32
 484:	08 95       	ret
 486:	84 e3       	ldi	r24, 0x34	; 52
 488:	08 95       	ret
 48a:	87 e3       	ldi	r24, 0x37	; 55
 48c:	08 95       	ret
 48e:	8a e2       	ldi	r24, 0x2A	; 42
 490:	08 95       	ret
 492:	82 e3       	ldi	r24, 0x32	; 50
 494:	08 95       	ret
 496:	85 e3       	ldi	r24, 0x35	; 53
 498:	08 95       	ret
 49a:	88 e3       	ldi	r24, 0x38	; 56
 49c:	08 95       	ret
 49e:	80 e3       	ldi	r24, 0x30	; 48
 4a0:	08 95       	ret
 4a2:	83 e3       	ldi	r24, 0x33	; 51
 4a4:	08 95       	ret
 4a6:	86 e3       	ldi	r24, 0x36	; 54
 4a8:	08 95       	ret
 4aa:	89 e3       	ldi	r24, 0x39	; 57
 4ac:	08 95       	ret
 4ae:	83 e2       	ldi	r24, 0x23	; 35
 4b0:	08 95       	ret
 4b2:	81 e4       	ldi	r24, 0x41	; 65
 4b4:	08 95       	ret
 4b6:	82 e4       	ldi	r24, 0x42	; 66
 4b8:	08 95       	ret
 4ba:	83 e4       	ldi	r24, 0x43	; 67
 4bc:	08 95       	ret
 4be:	84 e4       	ldi	r24, 0x44	; 68
 4c0:	08 95       	ret

000004c2 <key_tick>:
 4c2:	cf 93       	push	r28
 4c4:	df 93       	push	r29
 4c6:	ec 01       	movw	r28, r24
 4c8:	ae df       	rcall	.-164    	; 0x426 <GetKeypadKey>
 4ca:	80 93 44 01 	sts	0x0144, r24	; 0x800144 <key>
 4ce:	ce 01       	movw	r24, r28
 4d0:	df 91       	pop	r29
 4d2:	cf 91       	pop	r28
 4d4:	08 95       	ret

000004d6 <moveLeft>:
 4d6:	98 2f       	mov	r25, r24
 4d8:	9f 7e       	andi	r25, 0xEF	; 239
 4da:	91 50       	subi	r25, 0x01	; 1
 4dc:	9f 30       	cpi	r25, 0x0F	; 15
 4de:	08 f4       	brcc	.+2      	; 0x4e2 <moveLeft+0xc>
 4e0:	81 50       	subi	r24, 0x01	; 1
 4e2:	08 95       	ret

000004e4 <moveRight>:
 4e4:	8f 30       	cpi	r24, 0x0F	; 15
 4e6:	10 f4       	brcc	.+4      	; 0x4ec <moveRight+0x8>
 4e8:	8f 5f       	subi	r24, 0xFF	; 255
 4ea:	08 95       	ret
 4ec:	90 ef       	ldi	r25, 0xF0	; 240
 4ee:	98 0f       	add	r25, r24
 4f0:	9f 30       	cpi	r25, 0x0F	; 15
 4f2:	08 f4       	brcc	.+2      	; 0x4f6 <moveRight+0x12>
 4f4:	8f 5f       	subi	r24, 0xFF	; 255
 4f6:	08 95       	ret

000004f8 <player_one_tick>:
 4f8:	00 97       	sbiw	r24, 0x00	; 0
 4fa:	21 f0       	breq	.+8      	; 0x504 <player_one_tick+0xc>
 4fc:	81 30       	cpi	r24, 0x01	; 1
 4fe:	91 05       	cpc	r25, r1
 500:	31 f0       	breq	.+12     	; 0x50e <player_one_tick+0x16>
 502:	0a c0       	rjmp	.+20     	; 0x518 <player_one_tick+0x20>
 504:	80 91 31 02 	lds	r24, 0x0231	; 0x800231 <playFlag>
 508:	81 30       	cpi	r24, 0x01	; 1
 50a:	61 f4       	brne	.+24     	; 0x524 <player_one_tick+0x2c>
 50c:	10 c0       	rjmp	.+32     	; 0x52e <player_one_tick+0x36>
 50e:	80 91 31 02 	lds	r24, 0x0231	; 0x800231 <playFlag>
 512:	88 23       	and	r24, r24
 514:	39 f0       	breq	.+14     	; 0x524 <player_one_tick+0x2c>
 516:	0b c0       	rjmp	.+22     	; 0x52e <player_one_tick+0x36>
 518:	00 97       	sbiw	r24, 0x00	; 0
 51a:	21 f0       	breq	.+8      	; 0x524 <player_one_tick+0x2c>
 51c:	81 30       	cpi	r24, 0x01	; 1
 51e:	91 05       	cpc	r25, r1
 520:	c1 f5       	brne	.+112    	; 0x592 <player_one_tick+0x9a>
 522:	05 c0       	rjmp	.+10     	; 0x52e <player_one_tick+0x36>
 524:	10 92 2d 02 	sts	0x022D, r1	; 0x80022d <player_one_location>
 528:	80 e0       	ldi	r24, 0x00	; 0
 52a:	90 e0       	ldi	r25, 0x00	; 0
 52c:	08 95       	ret
 52e:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <key>
 532:	82 33       	cpi	r24, 0x32	; 50
 534:	61 f4       	brne	.+24     	; 0x54e <player_one_tick+0x56>
 536:	90 91 2d 02 	lds	r25, 0x022D	; 0x80022d <player_one_location>
 53a:	80 ef       	ldi	r24, 0xF0	; 240
 53c:	89 0f       	add	r24, r25
 53e:	80 31       	cpi	r24, 0x10	; 16
 540:	08 f0       	brcs	.+2      	; 0x544 <player_one_tick+0x4c>
 542:	89 2f       	mov	r24, r25
 544:	80 93 2d 02 	sts	0x022D, r24	; 0x80022d <player_one_location>
 548:	81 e0       	ldi	r24, 0x01	; 1
 54a:	90 e0       	ldi	r25, 0x00	; 0
 54c:	08 95       	ret
 54e:	88 33       	cpi	r24, 0x38	; 56
 550:	51 f4       	brne	.+20     	; 0x566 <player_one_tick+0x6e>
 552:	80 91 2d 02 	lds	r24, 0x022D	; 0x80022d <player_one_location>
 556:	80 31       	cpi	r24, 0x10	; 16
 558:	08 f4       	brcc	.+2      	; 0x55c <player_one_tick+0x64>
 55a:	80 5f       	subi	r24, 0xF0	; 240
 55c:	80 93 2d 02 	sts	0x022D, r24	; 0x80022d <player_one_location>
 560:	81 e0       	ldi	r24, 0x01	; 1
 562:	90 e0       	ldi	r25, 0x00	; 0
 564:	08 95       	ret
 566:	84 33       	cpi	r24, 0x34	; 52
 568:	41 f4       	brne	.+16     	; 0x57a <player_one_tick+0x82>
 56a:	80 91 2d 02 	lds	r24, 0x022D	; 0x80022d <player_one_location>
 56e:	b3 df       	rcall	.-154    	; 0x4d6 <moveLeft>
 570:	80 93 2d 02 	sts	0x022D, r24	; 0x80022d <player_one_location>
 574:	81 e0       	ldi	r24, 0x01	; 1
 576:	90 e0       	ldi	r25, 0x00	; 0
 578:	08 95       	ret
 57a:	86 33       	cpi	r24, 0x36	; 54
 57c:	41 f4       	brne	.+16     	; 0x58e <player_one_tick+0x96>
 57e:	80 91 2d 02 	lds	r24, 0x022D	; 0x80022d <player_one_location>
 582:	b0 df       	rcall	.-160    	; 0x4e4 <moveRight>
 584:	80 93 2d 02 	sts	0x022D, r24	; 0x80022d <player_one_location>
 588:	81 e0       	ldi	r24, 0x01	; 1
 58a:	90 e0       	ldi	r25, 0x00	; 0
 58c:	08 95       	ret
 58e:	81 e0       	ldi	r24, 0x01	; 1
 590:	90 e0       	ldi	r25, 0x00	; 0
 592:	08 95       	ret

00000594 <player_one_projectile_tick>:
 594:	bf 92       	push	r11
 596:	cf 92       	push	r12
 598:	df 92       	push	r13
 59a:	ef 92       	push	r14
 59c:	ff 92       	push	r15
 59e:	0f 93       	push	r16
 5a0:	1f 93       	push	r17
 5a2:	cf 93       	push	r28
 5a4:	df 93       	push	r29
 5a6:	00 97       	sbiw	r24, 0x00	; 0
 5a8:	21 f0       	breq	.+8      	; 0x5b2 <player_one_projectile_tick+0x1e>
 5aa:	81 30       	cpi	r24, 0x01	; 1
 5ac:	91 05       	cpc	r25, r1
 5ae:	31 f0       	breq	.+12     	; 0x5bc <player_one_projectile_tick+0x28>
 5b0:	0a c0       	rjmp	.+20     	; 0x5c6 <player_one_projectile_tick+0x32>
 5b2:	80 91 31 02 	lds	r24, 0x0231	; 0x800231 <playFlag>
 5b6:	81 30       	cpi	r24, 0x01	; 1
 5b8:	69 f4       	brne	.+26     	; 0x5d4 <player_one_projectile_tick+0x40>
 5ba:	18 c0       	rjmp	.+48     	; 0x5ec <player_one_projectile_tick+0x58>
 5bc:	80 91 31 02 	lds	r24, 0x0231	; 0x800231 <playFlag>
 5c0:	88 23       	and	r24, r24
 5c2:	41 f0       	breq	.+16     	; 0x5d4 <player_one_projectile_tick+0x40>
 5c4:	13 c0       	rjmp	.+38     	; 0x5ec <player_one_projectile_tick+0x58>
 5c6:	00 97       	sbiw	r24, 0x00	; 0
 5c8:	29 f0       	breq	.+10     	; 0x5d4 <player_one_projectile_tick+0x40>
 5ca:	81 30       	cpi	r24, 0x01	; 1
 5cc:	91 05       	cpc	r25, r1
 5ce:	09 f0       	breq	.+2      	; 0x5d2 <player_one_projectile_tick+0x3e>
 5d0:	56 c0       	rjmp	.+172    	; 0x67e <player_one_projectile_tick+0xea>
 5d2:	0c c0       	rjmp	.+24     	; 0x5ec <player_one_projectile_tick+0x58>
 5d4:	ef e3       	ldi	r30, 0x3F	; 63
 5d6:	f1 e0       	ldi	r31, 0x01	; 1
 5d8:	8f ef       	ldi	r24, 0xFF	; 255
 5da:	80 83       	st	Z, r24
 5dc:	81 83       	std	Z+1, r24	; 0x01
 5de:	82 83       	std	Z+2, r24	; 0x02
 5e0:	83 83       	std	Z+3, r24	; 0x03
 5e2:	84 83       	std	Z+4, r24	; 0x04
 5e4:	15 b8       	out	0x05, r1	; 5
 5e6:	80 e0       	ldi	r24, 0x00	; 0
 5e8:	90 e0       	ldi	r25, 0x00	; 0
 5ea:	49 c0       	rjmp	.+146    	; 0x67e <player_one_projectile_tick+0xea>
 5ec:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <key>
 5f0:	85 33       	cpi	r24, 0x35	; 53
 5f2:	c9 f5       	brne	.+114    	; 0x666 <player_one_projectile_tick+0xd2>
 5f4:	80 91 3f 01 	lds	r24, 0x013F	; 0x80013f <player_one_projectile_location>
 5f8:	8f 3f       	cpi	r24, 0xFF	; 255
 5fa:	49 f0       	breq	.+18     	; 0x60e <player_one_projectile_tick+0x7a>
 5fc:	e0 e4       	ldi	r30, 0x40	; 64
 5fe:	f1 e0       	ldi	r31, 0x01	; 1
 600:	81 e0       	ldi	r24, 0x01	; 1
 602:	90 e0       	ldi	r25, 0x00	; 0
 604:	ac 01       	movw	r20, r24
 606:	21 91       	ld	r18, Z+
 608:	2f 3f       	cpi	r18, 0xFF	; 255
 60a:	51 f4       	brne	.+20     	; 0x620 <player_one_projectile_tick+0x8c>
 60c:	02 c0       	rjmp	.+4      	; 0x612 <player_one_projectile_tick+0x7e>
 60e:	40 e0       	ldi	r20, 0x00	; 0
 610:	50 e0       	ldi	r21, 0x00	; 0
 612:	fa 01       	movw	r30, r20
 614:	e1 5c       	subi	r30, 0xC1	; 193
 616:	fe 4f       	sbci	r31, 0xFE	; 254
 618:	80 91 2d 02 	lds	r24, 0x022D	; 0x80022d <player_one_location>
 61c:	80 83       	st	Z, r24
 61e:	23 c0       	rjmp	.+70     	; 0x666 <player_one_projectile_tick+0xd2>
 620:	01 96       	adiw	r24, 0x01	; 1
 622:	85 30       	cpi	r24, 0x05	; 5
 624:	91 05       	cpc	r25, r1
 626:	71 f7       	brne	.-36     	; 0x604 <player_one_projectile_tick+0x70>
 628:	1e c0       	rjmp	.+60     	; 0x666 <player_one_projectile_tick+0xd2>
 62a:	88 81       	ld	r24, Y
 62c:	8f 3f       	cpi	r24, 0xFF	; 255
 62e:	41 f0       	breq	.+16     	; 0x640 <player_one_projectile_tick+0xac>
 630:	98 2f       	mov	r25, r24
 632:	9f 7e       	andi	r25, 0xEF	; 239
 634:	9f 30       	cpi	r25, 0x0F	; 15
 636:	11 f4       	brne	.+4      	; 0x63c <player_one_projectile_tick+0xa8>
 638:	b8 82       	st	Y, r11
 63a:	02 c0       	rjmp	.+4      	; 0x640 <player_one_projectile_tick+0xac>
 63c:	53 df       	rcall	.-346    	; 0x4e4 <moveRight>
 63e:	88 83       	st	Y, r24
 640:	21 96       	adiw	r28, 0x01	; 1
 642:	ce 15       	cp	r28, r14
 644:	df 05       	cpc	r29, r15
 646:	89 f7       	brne	.-30     	; 0x62a <player_one_projectile_tick+0x96>
 648:	90 e0       	ldi	r25, 0x00	; 0
 64a:	f8 01       	movw	r30, r16
 64c:	81 91       	ld	r24, Z+
 64e:	8f 01       	movw	r16, r30
 650:	8f 3f       	cpi	r24, 0xFF	; 255
 652:	11 f4       	brne	.+4      	; 0x658 <player_one_projectile_tick+0xc4>
 654:	99 0f       	add	r25, r25
 656:	9f 5f       	subi	r25, 0xFF	; 255
 658:	0e 15       	cp	r16, r14
 65a:	1f 05       	cpc	r17, r15
 65c:	b1 f7       	brne	.-20     	; 0x64a <player_one_projectile_tick+0xb6>
 65e:	95 b9       	out	0x05, r25	; 5
 660:	81 e0       	ldi	r24, 0x01	; 1
 662:	90 e0       	ldi	r25, 0x00	; 0
 664:	0c c0       	rjmp	.+24     	; 0x67e <player_one_projectile_tick+0xea>
 666:	0f e3       	ldi	r16, 0x3F	; 63
 668:	11 e0       	ldi	r17, 0x01	; 1
 66a:	0f 2e       	mov	r0, r31
 66c:	f4 e4       	ldi	r31, 0x44	; 68
 66e:	ef 2e       	mov	r14, r31
 670:	f1 e0       	ldi	r31, 0x01	; 1
 672:	ff 2e       	mov	r15, r31
 674:	f0 2d       	mov	r31, r0
 676:	e8 01       	movw	r28, r16
 678:	bb 24       	eor	r11, r11
 67a:	ba 94       	dec	r11
 67c:	d6 cf       	rjmp	.-84     	; 0x62a <player_one_projectile_tick+0x96>
 67e:	df 91       	pop	r29
 680:	cf 91       	pop	r28
 682:	1f 91       	pop	r17
 684:	0f 91       	pop	r16
 686:	ff 90       	pop	r15
 688:	ef 90       	pop	r14
 68a:	df 90       	pop	r13
 68c:	cf 90       	pop	r12
 68e:	bf 90       	pop	r11
 690:	08 95       	ret

00000692 <enemyMoveLeft>:
 692:	98 2f       	mov	r25, r24
 694:	9f 7e       	andi	r25, 0xEF	; 239
 696:	29 f0       	breq	.+10     	; 0x6a2 <enemyMoveLeft+0x10>
 698:	91 50       	subi	r25, 0x01	; 1
 69a:	9f 30       	cpi	r25, 0x0F	; 15
 69c:	18 f4       	brcc	.+6      	; 0x6a4 <enemyMoveLeft+0x12>
 69e:	81 50       	subi	r24, 0x01	; 1
 6a0:	08 95       	ret
 6a2:	8f ef       	ldi	r24, 0xFF	; 255
 6a4:	08 95       	ret

000006a6 <enemy_tick>:
 6a6:	cf 92       	push	r12
 6a8:	df 92       	push	r13
 6aa:	ef 92       	push	r14
 6ac:	ff 92       	push	r15
 6ae:	0f 93       	push	r16
 6b0:	1f 93       	push	r17
 6b2:	cf 93       	push	r28
 6b4:	df 93       	push	r29
 6b6:	ec 01       	movw	r28, r24
 6b8:	02 d4       	rcall	.+2052   	; 0xebe <rand>
 6ba:	20 97       	sbiw	r28, 0x00	; 0
 6bc:	21 f0       	breq	.+8      	; 0x6c6 <enemy_tick+0x20>
 6be:	c1 30       	cpi	r28, 0x01	; 1
 6c0:	d1 05       	cpc	r29, r1
 6c2:	31 f0       	breq	.+12     	; 0x6d0 <enemy_tick+0x2a>
 6c4:	0a c0       	rjmp	.+20     	; 0x6da <enemy_tick+0x34>
 6c6:	20 91 31 02 	lds	r18, 0x0231	; 0x800231 <playFlag>
 6ca:	21 30       	cpi	r18, 0x01	; 1
 6cc:	69 f4       	brne	.+26     	; 0x6e8 <enemy_tick+0x42>
 6ce:	15 c0       	rjmp	.+42     	; 0x6fa <enemy_tick+0x54>
 6d0:	20 91 31 02 	lds	r18, 0x0231	; 0x800231 <playFlag>
 6d4:	22 23       	and	r18, r18
 6d6:	41 f0       	breq	.+16     	; 0x6e8 <enemy_tick+0x42>
 6d8:	10 c0       	rjmp	.+32     	; 0x6fa <enemy_tick+0x54>
 6da:	20 97       	sbiw	r28, 0x00	; 0
 6dc:	29 f0       	breq	.+10     	; 0x6e8 <enemy_tick+0x42>
 6de:	c1 30       	cpi	r28, 0x01	; 1
 6e0:	d1 05       	cpc	r29, r1
 6e2:	09 f0       	breq	.+2      	; 0x6e6 <enemy_tick+0x40>
 6e4:	77 c0       	rjmp	.+238    	; 0x7d4 <enemy_tick+0x12e>
 6e6:	09 c0       	rjmp	.+18     	; 0x6fa <enemy_tick+0x54>
 6e8:	ec e3       	ldi	r30, 0x3C	; 60
 6ea:	f1 e0       	ldi	r31, 0x01	; 1
 6ec:	8f ef       	ldi	r24, 0xFF	; 255
 6ee:	80 83       	st	Z, r24
 6f0:	81 83       	std	Z+1, r24	; 0x01
 6f2:	82 83       	std	Z+2, r24	; 0x02
 6f4:	c0 e0       	ldi	r28, 0x00	; 0
 6f6:	d0 e0       	ldi	r29, 0x00	; 0
 6f8:	6d c0       	rjmp	.+218    	; 0x7d4 <enemy_tick+0x12e>
 6fa:	81 70       	andi	r24, 0x01	; 1
 6fc:	90 78       	andi	r25, 0x80	; 128
 6fe:	99 23       	and	r25, r25
 700:	24 f4       	brge	.+8      	; 0x70a <enemy_tick+0x64>
 702:	01 97       	sbiw	r24, 0x01	; 1
 704:	8e 6f       	ori	r24, 0xFE	; 254
 706:	9f 6f       	ori	r25, 0xFF	; 255
 708:	01 96       	adiw	r24, 0x01	; 1
 70a:	81 30       	cpi	r24, 0x01	; 1
 70c:	09 f0       	breq	.+2      	; 0x710 <enemy_tick+0x6a>
 70e:	54 c0       	rjmp	.+168    	; 0x7b8 <enemy_tick+0x112>
 710:	cc e3       	ldi	r28, 0x3C	; 60
 712:	d1 e0       	ldi	r29, 0x01	; 1
 714:	0f e3       	ldi	r16, 0x3F	; 63
 716:	11 e0       	ldi	r17, 0x01	; 1
 718:	0f 2e       	mov	r0, r31
 71a:	ff e0       	ldi	r31, 0x0F	; 15
 71c:	cf 2e       	mov	r12, r31
 71e:	f0 2d       	mov	r31, r0
 720:	0f 2e       	mov	r0, r31
 722:	ff e1       	ldi	r31, 0x1F	; 31
 724:	df 2e       	mov	r13, r31
 726:	f0 2d       	mov	r31, r0
 728:	7e 01       	movw	r14, r28
 72a:	88 81       	ld	r24, Y
 72c:	8f 3f       	cpi	r24, 0xFF	; 255
 72e:	a9 f4       	brne	.+42     	; 0x75a <enemy_tick+0xb4>
 730:	c6 d3       	rcall	.+1932   	; 0xebe <rand>
 732:	81 70       	andi	r24, 0x01	; 1
 734:	90 78       	andi	r25, 0x80	; 128
 736:	99 23       	and	r25, r25
 738:	24 f4       	brge	.+8      	; 0x742 <enemy_tick+0x9c>
 73a:	01 97       	sbiw	r24, 0x01	; 1
 73c:	8e 6f       	ori	r24, 0xFE	; 254
 73e:	9f 6f       	ori	r25, 0xFF	; 255
 740:	01 96       	adiw	r24, 0x01	; 1
 742:	99 27       	eor	r25, r25
 744:	81 30       	cpi	r24, 0x01	; 1
 746:	91 05       	cpc	r25, r1
 748:	19 f0       	breq	.+6      	; 0x750 <enemy_tick+0xaa>
 74a:	02 97       	sbiw	r24, 0x02	; 2
 74c:	21 f0       	breq	.+8      	; 0x756 <enemy_tick+0xb0>
 74e:	05 c0       	rjmp	.+10     	; 0x75a <enemy_tick+0xb4>
 750:	f7 01       	movw	r30, r14
 752:	c0 82       	st	Z, r12
 754:	02 c0       	rjmp	.+4      	; 0x75a <enemy_tick+0xb4>
 756:	f7 01       	movw	r30, r14
 758:	d0 82       	st	Z, r13
 75a:	21 96       	adiw	r28, 0x01	; 1
 75c:	c0 17       	cp	r28, r16
 75e:	d1 07       	cpc	r29, r17
 760:	19 f7       	brne	.-58     	; 0x728 <enemy_tick+0x82>
 762:	2a c0       	rjmp	.+84     	; 0x7b8 <enemy_tick+0x112>
 764:	8e 01       	movw	r16, r28
 766:	88 81       	ld	r24, Y
 768:	8f 3f       	cpi	r24, 0xFF	; 255
 76a:	f9 f0       	breq	.+62     	; 0x7aa <enemy_tick+0x104>
 76c:	a8 d3       	rcall	.+1872   	; 0xebe <rand>
 76e:	b6 01       	movw	r22, r12
 770:	16 d3       	rcall	.+1580   	; 0xd9e <__divmodhi4>
 772:	99 27       	eor	r25, r25
 774:	81 30       	cpi	r24, 0x01	; 1
 776:	91 05       	cpc	r25, r1
 778:	71 f0       	breq	.+28     	; 0x796 <enemy_tick+0xf0>
 77a:	82 30       	cpi	r24, 0x02	; 2
 77c:	91 05       	cpc	r25, r1
 77e:	91 f0       	breq	.+36     	; 0x7a4 <enemy_tick+0xfe>
 780:	89 2b       	or	r24, r25
 782:	99 f4       	brne	.+38     	; 0x7aa <enemy_tick+0x104>
 784:	98 81       	ld	r25, Y
 786:	80 ef       	ldi	r24, 0xF0	; 240
 788:	89 0f       	add	r24, r25
 78a:	80 31       	cpi	r24, 0x10	; 16
 78c:	08 f0       	brcs	.+2      	; 0x790 <enemy_tick+0xea>
 78e:	89 2f       	mov	r24, r25
 790:	f8 01       	movw	r30, r16
 792:	80 83       	st	Z, r24
 794:	0a c0       	rjmp	.+20     	; 0x7aa <enemy_tick+0x104>
 796:	88 81       	ld	r24, Y
 798:	80 31       	cpi	r24, 0x10	; 16
 79a:	08 f4       	brcc	.+2      	; 0x79e <enemy_tick+0xf8>
 79c:	80 5f       	subi	r24, 0xF0	; 240
 79e:	f8 01       	movw	r30, r16
 7a0:	80 83       	st	Z, r24
 7a2:	03 c0       	rjmp	.+6      	; 0x7aa <enemy_tick+0x104>
 7a4:	88 81       	ld	r24, Y
 7a6:	75 df       	rcall	.-278    	; 0x692 <enemyMoveLeft>
 7a8:	88 83       	st	Y, r24
 7aa:	21 96       	adiw	r28, 0x01	; 1
 7ac:	ec 16       	cp	r14, r28
 7ae:	fd 06       	cpc	r15, r29
 7b0:	c9 f6       	brne	.-78     	; 0x764 <enemy_tick+0xbe>
 7b2:	c1 e0       	ldi	r28, 0x01	; 1
 7b4:	d0 e0       	ldi	r29, 0x00	; 0
 7b6:	0e c0       	rjmp	.+28     	; 0x7d4 <enemy_tick+0x12e>
 7b8:	cc e3       	ldi	r28, 0x3C	; 60
 7ba:	d1 e0       	ldi	r29, 0x01	; 1
 7bc:	0f 2e       	mov	r0, r31
 7be:	ff e3       	ldi	r31, 0x3F	; 63
 7c0:	ef 2e       	mov	r14, r31
 7c2:	f1 e0       	ldi	r31, 0x01	; 1
 7c4:	ff 2e       	mov	r15, r31
 7c6:	f0 2d       	mov	r31, r0
 7c8:	0f 2e       	mov	r0, r31
 7ca:	f3 e0       	ldi	r31, 0x03	; 3
 7cc:	cf 2e       	mov	r12, r31
 7ce:	d1 2c       	mov	r13, r1
 7d0:	f0 2d       	mov	r31, r0
 7d2:	c8 cf       	rjmp	.-112    	; 0x764 <enemy_tick+0xbe>
 7d4:	ce 01       	movw	r24, r28
 7d6:	df 91       	pop	r29
 7d8:	cf 91       	pop	r28
 7da:	1f 91       	pop	r17
 7dc:	0f 91       	pop	r16
 7de:	ff 90       	pop	r15
 7e0:	ef 90       	pop	r14
 7e2:	df 90       	pop	r13
 7e4:	cf 90       	pop	r12
 7e6:	08 95       	ret

000007e8 <LCD_build>:
 7e8:	0f 93       	push	r16
 7ea:	1f 93       	push	r17
 7ec:	cf 93       	push	r28
 7ee:	df 93       	push	r29
 7f0:	88 30       	cpi	r24, 0x08	; 8
 7f2:	70 f4       	brcc	.+28     	; 0x810 <LCD_build+0x28>
 7f4:	8b 01       	movw	r16, r22
 7f6:	88 0f       	add	r24, r24
 7f8:	88 0f       	add	r24, r24
 7fa:	88 0f       	add	r24, r24
 7fc:	80 5c       	subi	r24, 0xC0	; 192
 7fe:	ce dd       	rcall	.-1124   	; 0x39c <LCD_WriteCommand>
 800:	e8 01       	movw	r28, r16
 802:	08 5f       	subi	r16, 0xF8	; 248
 804:	1f 4f       	sbci	r17, 0xFF	; 255
 806:	89 91       	ld	r24, Y+
 808:	ec dd       	rcall	.-1064   	; 0x3e2 <LCD_WriteData>
 80a:	c0 17       	cp	r28, r16
 80c:	d1 07       	cpc	r29, r17
 80e:	d9 f7       	brne	.-10     	; 0x806 <LCD_build+0x1e>
 810:	df 91       	pop	r29
 812:	cf 91       	pop	r28
 814:	1f 91       	pop	r17
 816:	0f 91       	pop	r16
 818:	08 95       	ret

0000081a <loadPlayerOneSprite>:
 81a:	64 e1       	ldi	r22, 0x14	; 20
 81c:	71 e0       	ldi	r23, 0x01	; 1
 81e:	80 e0       	ldi	r24, 0x00	; 0
 820:	e3 cf       	rjmp	.-58     	; 0x7e8 <LCD_build>
 822:	08 95       	ret

00000824 <loadTerrainSprite>:
 824:	6c e0       	ldi	r22, 0x0C	; 12
 826:	71 e0       	ldi	r23, 0x01	; 1
 828:	81 e0       	ldi	r24, 0x01	; 1
 82a:	de cf       	rjmp	.-68     	; 0x7e8 <LCD_build>
 82c:	08 95       	ret

0000082e <loadEnemySprite>:
 82e:	64 e0       	ldi	r22, 0x04	; 4
 830:	71 e0       	ldi	r23, 0x01	; 1
 832:	82 e0       	ldi	r24, 0x02	; 2
 834:	d9 cf       	rjmp	.-78     	; 0x7e8 <LCD_build>
 836:	08 95       	ret

00000838 <displayPlayerOneSprite>:
 838:	80 e0       	ldi	r24, 0x00	; 0
 83a:	d3 cd       	rjmp	.-1114   	; 0x3e2 <LCD_WriteData>
 83c:	08 95       	ret

0000083e <displayTerrainSprite>:
 83e:	81 e0       	ldi	r24, 0x01	; 1
 840:	d0 cd       	rjmp	.-1120   	; 0x3e2 <LCD_WriteData>
 842:	08 95       	ret

00000844 <displayEnemySprite>:
 844:	82 e0       	ldi	r24, 0x02	; 2
 846:	cd cd       	rjmp	.-1126   	; 0x3e2 <LCD_WriteData>
 848:	08 95       	ret

0000084a <lcd_display_tick>:
 84a:	ef 92       	push	r14
 84c:	ff 92       	push	r15
 84e:	0f 93       	push	r16
 850:	1f 93       	push	r17
 852:	cf 93       	push	r28
 854:	df 93       	push	r29
 856:	81 30       	cpi	r24, 0x01	; 1
 858:	91 05       	cpc	r25, r1
 85a:	51 f0       	breq	.+20     	; 0x870 <lcd_display_tick+0x26>
 85c:	82 30       	cpi	r24, 0x02	; 2
 85e:	91 05       	cpc	r25, r1
 860:	a9 f0       	breq	.+42     	; 0x88c <lcd_display_tick+0x42>
 862:	00 97       	sbiw	r24, 0x00	; 0
 864:	e1 f4       	brne	.+56     	; 0x89e <lcd_display_tick+0x54>
 866:	80 91 31 02 	lds	r24, 0x0231	; 0x800231 <playFlag>
 86a:	81 30       	cpi	r24, 0x01	; 1
 86c:	11 f5       	brne	.+68     	; 0x8b2 <lcd_display_tick+0x68>
 86e:	90 c0       	rjmp	.+288    	; 0x990 <lcd_display_tick+0x146>
 870:	80 91 30 02 	lds	r24, 0x0230	; 0x800230 <gameOverFlag>
 874:	81 11       	cpse	r24, r1
 876:	04 c0       	rjmp	.+8      	; 0x880 <lcd_display_tick+0x36>
 878:	80 91 31 02 	lds	r24, 0x0231	; 0x800231 <playFlag>
 87c:	88 23       	and	r24, r24
 87e:	c9 f0       	breq	.+50     	; 0x8b2 <lcd_display_tick+0x68>
 880:	80 91 31 02 	lds	r24, 0x0231	; 0x800231 <playFlag>
 884:	81 30       	cpi	r24, 0x01	; 1
 886:	09 f4       	brne	.+2      	; 0x88a <lcd_display_tick+0x40>
 888:	83 c0       	rjmp	.+262    	; 0x990 <lcd_display_tick+0x146>
 88a:	24 c0       	rjmp	.+72     	; 0x8d4 <lcd_display_tick+0x8a>
 88c:	80 91 30 02 	lds	r24, 0x0230	; 0x800230 <gameOverFlag>
 890:	81 30       	cpi	r24, 0x01	; 1
 892:	01 f1       	breq	.+64     	; 0x8d4 <lcd_display_tick+0x8a>
 894:	80 91 31 02 	lds	r24, 0x0231	; 0x800231 <playFlag>
 898:	88 23       	and	r24, r24
 89a:	59 f0       	breq	.+22     	; 0x8b2 <lcd_display_tick+0x68>
 89c:	79 c0       	rjmp	.+242    	; 0x990 <lcd_display_tick+0x146>
 89e:	81 30       	cpi	r24, 0x01	; 1
 8a0:	91 05       	cpc	r25, r1
 8a2:	c1 f0       	breq	.+48     	; 0x8d4 <lcd_display_tick+0x8a>
 8a4:	82 30       	cpi	r24, 0x02	; 2
 8a6:	91 05       	cpc	r25, r1
 8a8:	09 f4       	brne	.+2      	; 0x8ac <lcd_display_tick+0x62>
 8aa:	72 c0       	rjmp	.+228    	; 0x990 <lcd_display_tick+0x146>
 8ac:	00 97       	sbiw	r24, 0x00	; 0
 8ae:	09 f0       	breq	.+2      	; 0x8b2 <lcd_display_tick+0x68>
 8b0:	d3 c0       	rjmp	.+422    	; 0xa58 <lcd_display_tick+0x20e>
 8b2:	01 e9       	ldi	r16, 0x91	; 145
 8b4:	11 e0       	ldi	r17, 0x01	; 1
 8b6:	c0 e0       	ldi	r28, 0x00	; 0
 8b8:	cf 5f       	subi	r28, 0xFF	; 255
 8ba:	8c 2f       	mov	r24, r28
 8bc:	7b dd       	rcall	.-1290   	; 0x3b4 <LCD_Cursor>
 8be:	f8 01       	movw	r30, r16
 8c0:	81 91       	ld	r24, Z+
 8c2:	8f 01       	movw	r16, r30
 8c4:	8e dd       	rcall	.-1252   	; 0x3e2 <LCD_WriteData>
 8c6:	80 e0       	ldi	r24, 0x00	; 0
 8c8:	75 dd       	rcall	.-1302   	; 0x3b4 <LCD_Cursor>
 8ca:	c0 32       	cpi	r28, 0x20	; 32
 8cc:	a9 f7       	brne	.-22     	; 0x8b8 <lcd_display_tick+0x6e>
 8ce:	80 e0       	ldi	r24, 0x00	; 0
 8d0:	90 e0       	ldi	r25, 0x00	; 0
 8d2:	c2 c0       	rjmp	.+388    	; 0xa58 <lcd_display_tick+0x20e>
 8d4:	6c dd       	rcall	.-1320   	; 0x3ae <LCD_ClearScreen>
 8d6:	69 e5       	ldi	r22, 0x59	; 89
 8d8:	71 e0       	ldi	r23, 0x01	; 1
 8da:	81 e0       	ldi	r24, 0x01	; 1
 8dc:	8b dd       	rcall	.-1258   	; 0x3f4 <LCD_DisplayString>
 8de:	80 91 2f 02 	lds	r24, 0x022F	; 0x80022f <score>
 8e2:	dd ec       	ldi	r29, 0xCD	; 205
 8e4:	8d 9f       	mul	r24, r29
 8e6:	c1 2d       	mov	r28, r1
 8e8:	11 24       	eor	r1, r1
 8ea:	c6 95       	lsr	r28
 8ec:	c6 95       	lsr	r28
 8ee:	c6 95       	lsr	r28
 8f0:	cc 0f       	add	r28, r28
 8f2:	9c 2f       	mov	r25, r28
 8f4:	99 0f       	add	r25, r25
 8f6:	99 0f       	add	r25, r25
 8f8:	c9 0f       	add	r28, r25
 8fa:	f8 2f       	mov	r31, r24
 8fc:	fc 1b       	sub	r31, r28
 8fe:	cf 2f       	mov	r28, r31
 900:	f0 93 2c 02 	sts	0x022C, r31	; 0x80022c <ones.2374>
 904:	8f 1b       	sub	r24, r31
 906:	99 e2       	ldi	r25, 0x29	; 41
 908:	89 9f       	mul	r24, r25
 90a:	91 2d       	mov	r25, r1
 90c:	11 24       	eor	r1, r1
 90e:	92 95       	swap	r25
 910:	9f 70       	andi	r25, 0x0F	; 15
 912:	38 2f       	mov	r19, r24
 914:	24 e6       	ldi	r18, 0x64	; 100
 916:	92 9f       	mul	r25, r18
 918:	30 19       	sub	r19, r0
 91a:	11 24       	eor	r1, r1
 91c:	3d 9f       	mul	r19, r29
 91e:	d1 2d       	mov	r29, r1
 920:	11 24       	eor	r1, r1
 922:	d6 95       	lsr	r29
 924:	d6 95       	lsr	r29
 926:	d6 95       	lsr	r29
 928:	d0 93 2b 02 	sts	0x022B, r29	; 0x80022b <tens.2373>
 92c:	8d 1b       	sub	r24, r29
 92e:	90 e0       	ldi	r25, 0x00	; 0
 930:	68 ee       	ldi	r22, 0xE8	; 232
 932:	73 e0       	ldi	r23, 0x03	; 3
 934:	34 d2       	rcall	.+1128   	; 0xd9e <__divmodhi4>
 936:	64 e6       	ldi	r22, 0x64	; 100
 938:	70 e0       	ldi	r23, 0x00	; 0
 93a:	31 d2       	rcall	.+1122   	; 0xd9e <__divmodhi4>
 93c:	16 2f       	mov	r17, r22
 93e:	60 93 2a 02 	sts	0x022A, r22	; 0x80022a <hundreds.2372>
 942:	88 e0       	ldi	r24, 0x08	; 8
 944:	37 dd       	rcall	.-1426   	; 0x3b4 <LCD_Cursor>
 946:	80 e3       	ldi	r24, 0x30	; 48
 948:	81 0f       	add	r24, r17
 94a:	4b dd       	rcall	.-1386   	; 0x3e2 <LCD_WriteData>
 94c:	89 e0       	ldi	r24, 0x09	; 9
 94e:	32 dd       	rcall	.-1436   	; 0x3b4 <LCD_Cursor>
 950:	80 e3       	ldi	r24, 0x30	; 48
 952:	8d 0f       	add	r24, r29
 954:	46 dd       	rcall	.-1396   	; 0x3e2 <LCD_WriteData>
 956:	8a e0       	ldi	r24, 0x0A	; 10
 958:	2d dd       	rcall	.-1446   	; 0x3b4 <LCD_Cursor>
 95a:	80 e3       	ldi	r24, 0x30	; 48
 95c:	8c 0f       	add	r24, r28
 95e:	41 dd       	rcall	.-1406   	; 0x3e2 <LCD_WriteData>
 960:	01 e8       	ldi	r16, 0x81	; 129
 962:	11 e0       	ldi	r17, 0x01	; 1
 964:	0f 2e       	mov	r0, r31
 966:	f1 e9       	ldi	r31, 0x91	; 145
 968:	ef 2e       	mov	r14, r31
 96a:	f1 e0       	ldi	r31, 0x01	; 1
 96c:	ff 2e       	mov	r15, r31
 96e:	f0 2d       	mov	r31, r0
 970:	c1 e1       	ldi	r28, 0x11	; 17
 972:	8c 2f       	mov	r24, r28
 974:	1f dd       	rcall	.-1474   	; 0x3b4 <LCD_Cursor>
 976:	f8 01       	movw	r30, r16
 978:	81 91       	ld	r24, Z+
 97a:	8f 01       	movw	r16, r30
 97c:	32 dd       	rcall	.-1436   	; 0x3e2 <LCD_WriteData>
 97e:	80 e0       	ldi	r24, 0x00	; 0
 980:	19 dd       	rcall	.-1486   	; 0x3b4 <LCD_Cursor>
 982:	cf 5f       	subi	r28, 0xFF	; 255
 984:	0e 15       	cp	r16, r14
 986:	1f 05       	cpc	r17, r15
 988:	a1 f7       	brne	.-24     	; 0x972 <lcd_display_tick+0x128>
 98a:	81 e0       	ldi	r24, 0x01	; 1
 98c:	90 e0       	ldi	r25, 0x00	; 0
 98e:	64 c0       	rjmp	.+200    	; 0xa58 <lcd_display_tick+0x20e>
 990:	80 e2       	ldi	r24, 0x20	; 32
 992:	e1 e6       	ldi	r30, 0x61	; 97
 994:	f1 e0       	ldi	r31, 0x01	; 1
 996:	ac e1       	ldi	r26, 0x1C	; 28
 998:	b1 e0       	ldi	r27, 0x01	; 1
 99a:	01 90       	ld	r0, Z+
 99c:	0d 92       	st	X+, r0
 99e:	8a 95       	dec	r24
 9a0:	e1 f7       	brne	.-8      	; 0x99a <lcd_display_tick+0x150>
 9a2:	20 91 2e 02 	lds	r18, 0x022E	; 0x80022e <terrainShift>
 9a6:	ac e2       	ldi	r26, 0x2C	; 44
 9a8:	b1 e0       	ldi	r27, 0x01	; 1
 9aa:	4c e3       	ldi	r20, 0x3C	; 60
 9ac:	51 e0       	ldi	r21, 0x01	; 1
 9ae:	30 e0       	ldi	r19, 0x00	; 0
 9b0:	2c 52       	subi	r18, 0x2C	; 44
 9b2:	31 40       	sbci	r19, 0x01	; 1
 9b4:	cc e1       	ldi	r28, 0x1C	; 28
 9b6:	d1 e0       	ldi	r29, 0x01	; 1
 9b8:	f9 01       	movw	r30, r18
 9ba:	ea 0f       	add	r30, r26
 9bc:	fb 1f       	adc	r31, r27
 9be:	ef 71       	andi	r30, 0x1F	; 31
 9c0:	ff 27       	eor	r31, r31
 9c2:	ef 54       	subi	r30, 0x4F	; 79
 9c4:	fe 4f       	sbci	r31, 0xFE	; 254
 9c6:	80 81       	ld	r24, Z
 9c8:	8d 93       	st	X+, r24
 9ca:	a4 17       	cp	r26, r20
 9cc:	b5 07       	cpc	r27, r21
 9ce:	91 f7       	brne	.-28     	; 0x9b4 <lcd_display_tick+0x16a>
 9d0:	ac e3       	ldi	r26, 0x3C	; 60
 9d2:	b1 e0       	ldi	r27, 0x01	; 1
 9d4:	ec 91       	ld	r30, X
 9d6:	f0 e0       	ldi	r31, 0x00	; 0
 9d8:	e4 5e       	subi	r30, 0xE4	; 228
 9da:	fe 4f       	sbci	r31, 0xFE	; 254
 9dc:	80 e4       	ldi	r24, 0x40	; 64
 9de:	80 83       	st	Z, r24
 9e0:	11 96       	adiw	r26, 0x01	; 1
 9e2:	ec 91       	ld	r30, X
 9e4:	11 97       	sbiw	r26, 0x01	; 1
 9e6:	f0 e0       	ldi	r31, 0x00	; 0
 9e8:	e4 5e       	subi	r30, 0xE4	; 228
 9ea:	fe 4f       	sbci	r31, 0xFE	; 254
 9ec:	80 83       	st	Z, r24
 9ee:	12 96       	adiw	r26, 0x02	; 2
 9f0:	ec 91       	ld	r30, X
 9f2:	f0 e0       	ldi	r31, 0x00	; 0
 9f4:	e4 5e       	subi	r30, 0xE4	; 228
 9f6:	fe 4f       	sbci	r31, 0xFE	; 254
 9f8:	80 83       	st	Z, r24
 9fa:	af e3       	ldi	r26, 0x3F	; 63
 9fc:	b1 e0       	ldi	r27, 0x01	; 1
 9fe:	24 e4       	ldi	r18, 0x44	; 68
 a00:	31 e0       	ldi	r19, 0x01	; 1
 a02:	8d e2       	ldi	r24, 0x2D	; 45
 a04:	ed 91       	ld	r30, X+
 a06:	f0 e0       	ldi	r31, 0x00	; 0
 a08:	e4 5e       	subi	r30, 0xE4	; 228
 a0a:	fe 4f       	sbci	r31, 0xFE	; 254
 a0c:	80 83       	st	Z, r24
 a0e:	a2 17       	cp	r26, r18
 a10:	b3 07       	cpc	r27, r19
 a12:	c1 f7       	brne	.-16     	; 0xa04 <lcd_display_tick+0x1ba>
 a14:	e0 91 2d 02 	lds	r30, 0x022D	; 0x80022d <player_one_location>
 a18:	f0 e0       	ldi	r31, 0x00	; 0
 a1a:	e4 5e       	subi	r30, 0xE4	; 228
 a1c:	fe 4f       	sbci	r31, 0xFE	; 254
 a1e:	8e e3       	ldi	r24, 0x3E	; 62
 a20:	80 83       	st	Z, r24
 a22:	10 e0       	ldi	r17, 0x00	; 0
 a24:	1f 5f       	subi	r17, 0xFF	; 255
 a26:	81 2f       	mov	r24, r17
 a28:	c5 dc       	rcall	.-1654   	; 0x3b4 <LCD_Cursor>
 a2a:	7e 01       	movw	r14, r28
 a2c:	88 81       	ld	r24, Y
 a2e:	8e 33       	cpi	r24, 0x3E	; 62
 a30:	11 f4       	brne	.+4      	; 0xa36 <lcd_display_tick+0x1ec>
 a32:	02 df       	rcall	.-508    	; 0x838 <displayPlayerOneSprite>
 a34:	07 c0       	rjmp	.+14     	; 0xa44 <lcd_display_tick+0x1fa>
 a36:	8f 3f       	cpi	r24, 0xFF	; 255
 a38:	11 f4       	brne	.+4      	; 0xa3e <lcd_display_tick+0x1f4>
 a3a:	01 df       	rcall	.-510    	; 0x83e <displayTerrainSprite>
 a3c:	03 c0       	rjmp	.+6      	; 0xa44 <lcd_display_tick+0x1fa>
 a3e:	80 34       	cpi	r24, 0x40	; 64
 a40:	09 f4       	brne	.+2      	; 0xa44 <lcd_display_tick+0x1fa>
 a42:	00 df       	rcall	.-512    	; 0x844 <displayEnemySprite>
 a44:	21 96       	adiw	r28, 0x01	; 1
 a46:	f7 01       	movw	r30, r14
 a48:	80 81       	ld	r24, Z
 a4a:	cb dc       	rcall	.-1642   	; 0x3e2 <LCD_WriteData>
 a4c:	80 e0       	ldi	r24, 0x00	; 0
 a4e:	b2 dc       	rcall	.-1692   	; 0x3b4 <LCD_Cursor>
 a50:	10 32       	cpi	r17, 0x20	; 32
 a52:	41 f7       	brne	.-48     	; 0xa24 <lcd_display_tick+0x1da>
 a54:	82 e0       	ldi	r24, 0x02	; 2
 a56:	90 e0       	ldi	r25, 0x00	; 0
 a58:	df 91       	pop	r29
 a5a:	cf 91       	pop	r28
 a5c:	1f 91       	pop	r17
 a5e:	0f 91       	pop	r16
 a60:	ff 90       	pop	r15
 a62:	ef 90       	pop	r14
 a64:	08 95       	ret

00000a66 <main>:
			break;
 	}
	return state;
}

int main() {
 a66:	cf 93       	push	r28
 a68:	df 93       	push	r29
 a6a:	cd b7       	in	r28, 0x3d	; 61
 a6c:	de b7       	in	r29, 0x3e	; 62
 a6e:	60 97       	sbiw	r28, 0x10	; 16
 a70:	0f b6       	in	r0, 0x3f	; 63
 a72:	f8 94       	cli
 a74:	de bf       	out	0x3e, r29	; 62
 a76:	0f be       	out	0x3f, r0	; 63
 a78:	cd bf       	out	0x3d, r28	; 61
	// Set Data Direction Registers
	DDRA = 0xFF; PORTA = 0x00; //output
 a7a:	8f ef       	ldi	r24, 0xFF	; 255
 a7c:	81 b9       	out	0x01, r24	; 1
 a7e:	12 b8       	out	0x02, r1	; 2
	DDRB = 0xFF; PORTB = 0x00; //output
 a80:	84 b9       	out	0x04, r24	; 4
 a82:	15 b8       	out	0x05, r1	; 5
	DDRC = 0xF0; PORTC = 0x0F; // PC7..4 outputs init 0s, PC3..0 inputs init 1
 a84:	90 ef       	ldi	r25, 0xF0	; 240
 a86:	97 b9       	out	0x07, r25	; 7
 a88:	9f e0       	ldi	r25, 0x0F	; 15
 a8a:	98 b9       	out	0x08, r25	; 8
	DDRD = 0xFF; PORTD = 0x00; //output
 a8c:	8a b9       	out	0x0a, r24	; 10
 a8e:	1b b8       	out	0x0b, r1	; 11
 a90:	18 ec       	ldi	r17, 0xC8	; 200
 a92:	00 e0       	ldi	r16, 0x00	; 0
 a94:	f1 2c       	mov	r15, r1
 a96:	e1 2c       	mov	r14, r1
 a98:	54 e6       	ldi	r21, 0x64	; 100
 a9a:	40 e0       	ldi	r20, 0x00	; 0
 a9c:	30 e0       	ldi	r19, 0x00	; 0
 a9e:	20 e0       	ldi	r18, 0x00	; 0
 aa0:	04 c0       	rjmp	.+8      	; 0xaaa <main+0x44>
	unsigned long int c;
	while(1){
		c = a%b;
		if(c==0){return b;}
		a = b;
		b = c;
 aa2:	16 2f       	mov	r17, r22
 aa4:	07 2f       	mov	r16, r23
 aa6:	f8 2e       	mov	r15, r24
 aa8:	e9 2e       	mov	r14, r25
//--------Find GCD function --------------------------------------------------
unsigned long int findGCD(unsigned long int a, unsigned long int b)
{
	unsigned long int c;
	while(1){
		c = a%b;
 aaa:	65 2f       	mov	r22, r21
 aac:	74 2f       	mov	r23, r20
 aae:	83 2f       	mov	r24, r19
 ab0:	92 2f       	mov	r25, r18
 ab2:	21 2f       	mov	r18, r17
 ab4:	30 2f       	mov	r19, r16
 ab6:	4f 2d       	mov	r20, r15
 ab8:	5e 2d       	mov	r21, r14
 aba:	84 d1       	rcall	.+776    	; 0xdc4 <__udivmodsi4>
 abc:	51 2f       	mov	r21, r17
 abe:	40 2f       	mov	r20, r16
 ac0:	3f 2d       	mov	r19, r15
 ac2:	2e 2d       	mov	r18, r14
		if(c==0){return b;}
 ac4:	61 15       	cp	r22, r1
 ac6:	71 05       	cpc	r23, r1
 ac8:	81 05       	cpc	r24, r1
 aca:	91 05       	cpc	r25, r1
 acc:	51 f7       	brne	.-44     	; 0xaa2 <main+0x3c>
 ace:	0f 2e       	mov	r0, r31
 ad0:	f8 ec       	ldi	r31, 0xC8	; 200
 ad2:	bf 2e       	mov	r11, r31
 ad4:	f0 2d       	mov	r31, r0
 ad6:	a1 2c       	mov	r10, r1
 ad8:	91 2c       	mov	r9, r1
 ada:	81 2c       	mov	r8, r1
 adc:	04 c0       	rjmp	.+8      	; 0xae6 <main+0x80>
		a = b;
		b = c;
 ade:	b6 2e       	mov	r11, r22
 ae0:	a7 2e       	mov	r10, r23
 ae2:	98 2e       	mov	r9, r24
 ae4:	89 2e       	mov	r8, r25
//--------Find GCD function --------------------------------------------------
unsigned long int findGCD(unsigned long int a, unsigned long int b)
{
	unsigned long int c;
	while(1){
		c = a%b;
 ae6:	61 2f       	mov	r22, r17
 ae8:	70 2f       	mov	r23, r16
 aea:	8f 2d       	mov	r24, r15
 aec:	9e 2d       	mov	r25, r14
 aee:	2b 2d       	mov	r18, r11
 af0:	3a 2d       	mov	r19, r10
 af2:	49 2d       	mov	r20, r9
 af4:	58 2d       	mov	r21, r8
 af6:	66 d1       	rcall	.+716    	; 0xdc4 <__udivmodsi4>
 af8:	1b 2d       	mov	r17, r11
 afa:	0a 2d       	mov	r16, r10
 afc:	f9 2c       	mov	r15, r9
 afe:	e8 2c       	mov	r14, r8
		if(c==0){return b;}
 b00:	61 15       	cp	r22, r1
 b02:	71 05       	cpc	r23, r1
 b04:	81 05       	cpc	r24, r1
 b06:	91 05       	cpc	r25, r1
 b08:	51 f7       	brne	.-44     	; 0xade <main+0x78>
 b0a:	10 e9       	ldi	r17, 0x90	; 144
 b0c:	01 e0       	ldi	r16, 0x01	; 1
 b0e:	f1 2c       	mov	r15, r1
 b10:	e1 2c       	mov	r14, r1
 b12:	04 c0       	rjmp	.+8      	; 0xb1c <main+0xb6>
		a = b;
		b = c;
 b14:	16 2f       	mov	r17, r22
 b16:	07 2f       	mov	r16, r23
 b18:	f8 2e       	mov	r15, r24
 b1a:	e9 2e       	mov	r14, r25
//--------Find GCD function --------------------------------------------------
unsigned long int findGCD(unsigned long int a, unsigned long int b)
{
	unsigned long int c;
	while(1){
		c = a%b;
 b1c:	6b 2d       	mov	r22, r11
 b1e:	7a 2d       	mov	r23, r10
 b20:	89 2d       	mov	r24, r9
 b22:	98 2d       	mov	r25, r8
 b24:	21 2f       	mov	r18, r17
 b26:	30 2f       	mov	r19, r16
 b28:	4f 2d       	mov	r20, r15
 b2a:	5e 2d       	mov	r21, r14
 b2c:	4b d1       	rcall	.+662    	; 0xdc4 <__udivmodsi4>
 b2e:	b1 2e       	mov	r11, r17
 b30:	a0 2e       	mov	r10, r16
 b32:	9f 2c       	mov	r9, r15
 b34:	8e 2c       	mov	r8, r14
		if(c==0){return b;}
 b36:	61 15       	cp	r22, r1
 b38:	71 05       	cpc	r23, r1
 b3a:	81 05       	cpc	r24, r1
 b3c:	91 05       	cpc	r25, r1
 b3e:	51 f7       	brne	.-44     	; 0xb14 <main+0xae>
 b40:	0f 2e       	mov	r0, r31
 b42:	f0 e9       	ldi	r31, 0x90	; 144
 b44:	bf 2e       	mov	r11, r31
 b46:	f0 2d       	mov	r31, r0
 b48:	aa 24       	eor	r10, r10
 b4a:	a3 94       	inc	r10
 b4c:	91 2c       	mov	r9, r1
 b4e:	81 2c       	mov	r8, r1
 b50:	04 c0       	rjmp	.+8      	; 0xb5a <main+0xf4>
		a = b;
		b = c;
 b52:	b6 2e       	mov	r11, r22
 b54:	a7 2e       	mov	r10, r23
 b56:	98 2e       	mov	r9, r24
 b58:	89 2e       	mov	r8, r25
//--------Find GCD function --------------------------------------------------
unsigned long int findGCD(unsigned long int a, unsigned long int b)
{
	unsigned long int c;
	while(1){
		c = a%b;
 b5a:	61 2f       	mov	r22, r17
 b5c:	70 2f       	mov	r23, r16
 b5e:	8f 2d       	mov	r24, r15
 b60:	9e 2d       	mov	r25, r14
 b62:	2b 2d       	mov	r18, r11
 b64:	3a 2d       	mov	r19, r10
 b66:	49 2d       	mov	r20, r9
 b68:	58 2d       	mov	r21, r8
 b6a:	2c d1       	rcall	.+600    	; 0xdc4 <__udivmodsi4>
 b6c:	1b 2d       	mov	r17, r11
 b6e:	0a 2d       	mov	r16, r10
 b70:	f9 2c       	mov	r15, r9
 b72:	e8 2c       	mov	r14, r8
		if(c==0){return b;}
 b74:	61 15       	cp	r22, r1
 b76:	71 05       	cpc	r23, r1
 b78:	81 05       	cpc	r24, r1
 b7a:	91 05       	cpc	r25, r1
 b7c:	51 f7       	brne	.-44     	; 0xb52 <main+0xec>
 b7e:	0f 2e       	mov	r0, r31
 b80:	f8 ec       	ldi	r31, 0xC8	; 200
 b82:	ef 2e       	mov	r14, r31
 b84:	f0 2d       	mov	r31, r0
 b86:	f1 2c       	mov	r15, r1
 b88:	00 e0       	ldi	r16, 0x00	; 0
 b8a:	10 e0       	ldi	r17, 0x00	; 0
 b8c:	04 c0       	rjmp	.+8      	; 0xb96 <main+0x130>
		a = b;
		b = c;
 b8e:	e6 2e       	mov	r14, r22
 b90:	f7 2e       	mov	r15, r23
 b92:	08 2f       	mov	r16, r24
 b94:	19 2f       	mov	r17, r25
//--------Find GCD function --------------------------------------------------
unsigned long int findGCD(unsigned long int a, unsigned long int b)
{
	unsigned long int c;
	while(1){
		c = a%b;
 b96:	6b 2d       	mov	r22, r11
 b98:	7a 2d       	mov	r23, r10
 b9a:	89 2d       	mov	r24, r9
 b9c:	98 2d       	mov	r25, r8
 b9e:	2e 2d       	mov	r18, r14
 ba0:	3f 2d       	mov	r19, r15
 ba2:	40 2f       	mov	r20, r16
 ba4:	51 2f       	mov	r21, r17
 ba6:	0e d1       	rcall	.+540    	; 0xdc4 <__udivmodsi4>
 ba8:	be 2c       	mov	r11, r14
 baa:	af 2c       	mov	r10, r15
 bac:	90 2e       	mov	r9, r16
 bae:	81 2e       	mov	r8, r17
		if(c==0){return b;}
 bb0:	61 15       	cp	r22, r1
 bb2:	71 05       	cpc	r23, r1
 bb4:	81 05       	cpc	r24, r1
 bb6:	91 05       	cpc	r25, r1
 bb8:	51 f7       	brne	.-44     	; 0xb8e <main+0x128>

	//Greatest common divisor for all tasks or smallest time unit for tasks.
	unsigned long int GCD = tmpGCD;

	//Recalculate GCD periods for scheduler
	unsigned long int key_tick_period = key_tick_calc/GCD;
 bba:	68 ec       	ldi	r22, 0xC8	; 200
 bbc:	70 e0       	ldi	r23, 0x00	; 0
 bbe:	80 e0       	ldi	r24, 0x00	; 0
 bc0:	90 e0       	ldi	r25, 0x00	; 0
 bc2:	2e 2d       	mov	r18, r14
 bc4:	3f 2d       	mov	r19, r15
 bc6:	40 2f       	mov	r20, r16
 bc8:	51 2f       	mov	r21, r17
 bca:	fc d0       	rcall	.+504    	; 0xdc4 <__udivmodsi4>
 bcc:	49 01       	movw	r8, r18
 bce:	5a 01       	movw	r10, r20
	unsigned long int display_tick_period = display_tick_calc/GCD;
 bd0:	64 e6       	ldi	r22, 0x64	; 100
 bd2:	70 e0       	ldi	r23, 0x00	; 0
 bd4:	80 e0       	ldi	r24, 0x00	; 0
 bd6:	90 e0       	ldi	r25, 0x00	; 0
 bd8:	2e 2d       	mov	r18, r14
 bda:	3f 2d       	mov	r19, r15
 bdc:	40 2f       	mov	r20, r16
 bde:	51 2f       	mov	r21, r17
 be0:	f1 d0       	rcall	.+482    	; 0xdc4 <__udivmodsi4>
 be2:	29 01       	movw	r4, r18
 be4:	3a 01       	movw	r6, r20
	unsigned long int game_start_tick_period = game_start_tick_calc/GCD;
	unsigned long int player_one_tick_period = player_one_tick_calc/GCD;
	unsigned long int player_one_projectile_tick_period = player_one_projectile_tick_calc/GCD;
	unsigned long int terrain_tick_period = terrain_tick_calc/GCD;
 be6:	60 e9       	ldi	r22, 0x90	; 144
 be8:	71 e0       	ldi	r23, 0x01	; 1
 bea:	80 e0       	ldi	r24, 0x00	; 0
 bec:	90 e0       	ldi	r25, 0x00	; 0
 bee:	2e 2d       	mov	r18, r14
 bf0:	3f 2d       	mov	r19, r15
 bf2:	40 2f       	mov	r20, r16
 bf4:	51 2f       	mov	r21, r17
 bf6:	e6 d0       	rcall	.+460    	; 0xdc4 <__udivmodsi4>
	unsigned long int enemy_tick_period = enemy_tick_calc/GCD;
	unsigned long int collision_tick_period = collision_tick_calc/GCD;

	//Declare an array of tasks 
	static task task1, task2, task3, task4, task5, task6, task7, task8;
	task *tasks[] = { &task1, &task2, &task3, &task4, &task5, &task6, &task7, &task8};
 bf8:	80 e1       	ldi	r24, 0x10	; 16
 bfa:	e9 e4       	ldi	r30, 0x49	; 73
 bfc:	f1 e0       	ldi	r31, 0x01	; 1
 bfe:	de 01       	movw	r26, r28
 c00:	11 96       	adiw	r26, 0x01	; 1
 c02:	01 90       	ld	r0, Z+
 c04:	0d 92       	st	X+, r0
 c06:	8a 95       	dec	r24
 c08:	e1 f7       	brne	.-8      	; 0xc02 <main+0x19c>
	const unsigned short numTasks = sizeof(tasks)/sizeof(task*);

	// Task 1
	task1.state = FETCHKEY;//Task initial state.
 c0a:	ef e1       	ldi	r30, 0x1F	; 31
 c0c:	f2 e0       	ldi	r31, 0x02	; 2
 c0e:	10 82       	st	Z, r1
	task1.period = key_tick_period;//Task Period.
 c10:	81 82       	std	Z+1, r8	; 0x01
 c12:	92 82       	std	Z+2, r9	; 0x02
 c14:	a3 82       	std	Z+3, r10	; 0x03
 c16:	b4 82       	std	Z+4, r11	; 0x04
	task1.elapsedTime = 0;//Task current elapsed time.
 c18:	15 82       	std	Z+5, r1	; 0x05
 c1a:	16 82       	std	Z+6, r1	; 0x06
 c1c:	17 82       	std	Z+7, r1	; 0x07
 c1e:	10 86       	std	Z+8, r1	; 0x08
	task1.TickFct = &key_tick;//Function pointer for the tick.
 c20:	81 e6       	ldi	r24, 0x61	; 97
 c22:	92 e0       	ldi	r25, 0x02	; 2
 c24:	92 87       	std	Z+10, r25	; 0x0a
 c26:	81 87       	std	Z+9, r24	; 0x09

	// Task 2
	task2.state = DISPLAY_START_MESSAGE;//Task initial state.
 c28:	e4 e1       	ldi	r30, 0x14	; 20
 c2a:	f2 e0       	ldi	r31, 0x02	; 2
 c2c:	10 82       	st	Z, r1
	task2.period = display_tick_period;//Task Period.
 c2e:	41 82       	std	Z+1, r4	; 0x01
 c30:	52 82       	std	Z+2, r5	; 0x02
 c32:	63 82       	std	Z+3, r6	; 0x03
 c34:	74 82       	std	Z+4, r7	; 0x04
	task2.elapsedTime = 0;//Task current elapsed time.
 c36:	15 82       	std	Z+5, r1	; 0x05
 c38:	16 82       	std	Z+6, r1	; 0x06
 c3a:	17 82       	std	Z+7, r1	; 0x07
 c3c:	10 86       	std	Z+8, r1	; 0x08
	task2.TickFct = &lcd_display_tick;//Function pointer for the tick.
 c3e:	85 e2       	ldi	r24, 0x25	; 37
 c40:	94 e0       	ldi	r25, 0x04	; 4
 c42:	92 87       	std	Z+10, r25	; 0x0a
 c44:	81 87       	std	Z+9, r24	; 0x09

	// Task 3
	task3.state = GAME_INIT;//Task initial state.
 c46:	e9 e0       	ldi	r30, 0x09	; 9
 c48:	f2 e0       	ldi	r31, 0x02	; 2
 c4a:	10 82       	st	Z, r1
	task3.period = game_start_tick_period;//Task Period.
 c4c:	41 82       	std	Z+1, r4	; 0x01
 c4e:	52 82       	std	Z+2, r5	; 0x02
 c50:	63 82       	std	Z+3, r6	; 0x03
 c52:	74 82       	std	Z+4, r7	; 0x04
	task3.elapsedTime = 0;//Task current elapsed time.
 c54:	15 82       	std	Z+5, r1	; 0x05
 c56:	16 82       	std	Z+6, r1	; 0x06
 c58:	17 82       	std	Z+7, r1	; 0x07
 c5a:	10 86       	std	Z+8, r1	; 0x08
	task3.TickFct = &game_start_tick;//Function pointer for the tick.
 c5c:	87 e7       	ldi	r24, 0x77	; 119
 c5e:	90 e0       	ldi	r25, 0x00	; 0
 c60:	92 87       	std	Z+10, r25	; 0x0a
 c62:	81 87       	std	Z+9, r24	; 0x09

	// Task 4
	task4.state = TERRAIN_INIT;//Task initial state.
 c64:	ee ef       	ldi	r30, 0xFE	; 254
 c66:	f1 e0       	ldi	r31, 0x01	; 1
 c68:	10 82       	st	Z, r1
	task4.period = terrain_tick_period;//Task Period.
 c6a:	21 83       	std	Z+1, r18	; 0x01
 c6c:	32 83       	std	Z+2, r19	; 0x02
 c6e:	43 83       	std	Z+3, r20	; 0x03
 c70:	54 83       	std	Z+4, r21	; 0x04
	task4.elapsedTime = 0;//Task current elapsed time.
 c72:	15 82       	std	Z+5, r1	; 0x05
 c74:	16 82       	std	Z+6, r1	; 0x06
 c76:	17 82       	std	Z+7, r1	; 0x07
 c78:	10 86       	std	Z+8, r1	; 0x08
	task4.TickFct = &terrain_tick;//Function pointer for the tick.
 c7a:	8c ea       	ldi	r24, 0xAC	; 172
 c7c:	90 e0       	ldi	r25, 0x00	; 0
 c7e:	92 87       	std	Z+10, r25	; 0x0a
 c80:	81 87       	std	Z+9, r24	; 0x09

	// Task 5
	task5.state = PLAYER_ONE_INIT;//Task initial state.
 c82:	e3 ef       	ldi	r30, 0xF3	; 243
 c84:	f1 e0       	ldi	r31, 0x01	; 1
 c86:	10 82       	st	Z, r1
	task5.period = player_one_tick_period;//Task Period.
 c88:	81 82       	std	Z+1, r8	; 0x01
 c8a:	92 82       	std	Z+2, r9	; 0x02
 c8c:	a3 82       	std	Z+3, r10	; 0x03
 c8e:	b4 82       	std	Z+4, r11	; 0x04
	task5.elapsedTime = 0;//Task current elapsed time.
 c90:	15 82       	std	Z+5, r1	; 0x05
 c92:	16 82       	std	Z+6, r1	; 0x06
 c94:	17 82       	std	Z+7, r1	; 0x07
 c96:	10 86       	std	Z+8, r1	; 0x08
	task5.TickFct = &player_one_tick;//Function pointer for the tick.
 c98:	8c e7       	ldi	r24, 0x7C	; 124
 c9a:	92 e0       	ldi	r25, 0x02	; 2
 c9c:	92 87       	std	Z+10, r25	; 0x0a
 c9e:	81 87       	std	Z+9, r24	; 0x09

	// Task 6
	task6.state = PLAYER_ONE_PROJECTILE_INIT;//Task initial state.
 ca0:	e8 ee       	ldi	r30, 0xE8	; 232
 ca2:	f1 e0       	ldi	r31, 0x01	; 1
 ca4:	10 82       	st	Z, r1
	task6.period = player_one_projectile_tick_period;//Task Period.
 ca6:	81 82       	std	Z+1, r8	; 0x01
 ca8:	92 82       	std	Z+2, r9	; 0x02
 caa:	a3 82       	std	Z+3, r10	; 0x03
 cac:	b4 82       	std	Z+4, r11	; 0x04
	task6.elapsedTime = 0;//Task current elapsed time.
 cae:	15 82       	std	Z+5, r1	; 0x05
 cb0:	16 82       	std	Z+6, r1	; 0x06
 cb2:	17 82       	std	Z+7, r1	; 0x07
 cb4:	10 86       	std	Z+8, r1	; 0x08
	task6.TickFct = &player_one_projectile_tick;//Function pointer for the tick.
 cb6:	8a ec       	ldi	r24, 0xCA	; 202
 cb8:	92 e0       	ldi	r25, 0x02	; 2
 cba:	92 87       	std	Z+10, r25	; 0x0a
 cbc:	81 87       	std	Z+9, r24	; 0x09
	
	// Task 7
	task7.state = ENEMY_INIT;//Task initial state.
 cbe:	ed ed       	ldi	r30, 0xDD	; 221
 cc0:	f1 e0       	ldi	r31, 0x01	; 1
 cc2:	10 82       	st	Z, r1
	task7.period = enemy_tick_period;//Task Period.
 cc4:	21 83       	std	Z+1, r18	; 0x01
 cc6:	32 83       	std	Z+2, r19	; 0x02
 cc8:	43 83       	std	Z+3, r20	; 0x03
 cca:	54 83       	std	Z+4, r21	; 0x04
	task7.elapsedTime = 0;//Task current elapsed time.
 ccc:	15 82       	std	Z+5, r1	; 0x05
 cce:	16 82       	std	Z+6, r1	; 0x06
 cd0:	17 82       	std	Z+7, r1	; 0x07
 cd2:	10 86       	std	Z+8, r1	; 0x08
	task7.TickFct = &enemy_tick;//Function pointer for the tick.
 cd4:	83 e5       	ldi	r24, 0x53	; 83
 cd6:	93 e0       	ldi	r25, 0x03	; 3
 cd8:	92 87       	std	Z+10, r25	; 0x0a
 cda:	81 87       	std	Z+9, r24	; 0x09
		
	// Task 8
	task8.state = COLLISION_INIT;//Task initial state.
 cdc:	e2 ed       	ldi	r30, 0xD2	; 210
 cde:	f1 e0       	ldi	r31, 0x01	; 1
 ce0:	10 82       	st	Z, r1
	task8.period = collision_tick_period;//Task Period.
 ce2:	81 82       	std	Z+1, r8	; 0x01
 ce4:	92 82       	std	Z+2, r9	; 0x02
 ce6:	a3 82       	std	Z+3, r10	; 0x03
 ce8:	b4 82       	std	Z+4, r11	; 0x04
	task8.elapsedTime = 0;//Task current elapsed time.
 cea:	15 82       	std	Z+5, r1	; 0x05
 cec:	16 82       	std	Z+6, r1	; 0x06
 cee:	17 82       	std	Z+7, r1	; 0x07
 cf0:	10 86       	std	Z+8, r1	; 0x08
	task8.TickFct = &collision_tick;//Function pointer for the tick.
 cf2:	8f ec       	ldi	r24, 0xCF	; 207
 cf4:	90 e0       	ldi	r25, 0x00	; 0

	// Set the timer and turn it on
	TimerSet(GCD);
 cf6:	92 87       	std	Z+10, r25	; 0x0a
 cf8:	81 87       	std	Z+9, r24	; 0x09
 cfa:	6e 2d       	mov	r22, r14
 cfc:	7f 2d       	mov	r23, r15
	TimerOn();
 cfe:	80 2f       	mov	r24, r16

	// initialize LCD and sprites
	LCD_init();
 d00:	91 2f       	mov	r25, r17
 d02:	c8 da       	rcall	.-2672   	; 0x294 <TimerSet>
 	loadPlayerOneSprite();
 d04:	d8 da       	rcall	.-2640   	; 0x2b6 <TimerOn>
 d06:	5e db       	rcall	.-2372   	; 0x3c4 <LCD_init>
	loadTerrainSprite();
 d08:	88 dd       	rcall	.-1264   	; 0x81a <loadPlayerOneSprite>
 d0a:	8c dd       	rcall	.-1256   	; 0x824 <loadTerrainSprite>
	loadEnemySprite();
 d0c:	90 dd       	rcall	.-1248   	; 0x82e <loadEnemySprite>
 d0e:	80 e0       	ldi	r24, 0x00	; 0

	// initialize RNG
	srand(time(NULL));
 d10:	90 e0       	ldi	r25, 0x00	; 0
 d12:	da d9       	rcall	.-3148   	; 0xc8 <time>
 d14:	cb 01       	movw	r24, r22
 d16:	d6 d0       	rcall	.+428    	; 0xec4 <srand>
 d18:	5e 01       	movw	r10, r28
 d1a:	81 e1       	ldi	r24, 0x11	; 17
 d1c:	a8 0e       	add	r10, r24
 d1e:	b1 1c       	adc	r11, r1
 d20:	de 01       	movw	r26, r28
 d22:	11 96       	adiw	r26, 0x01	; 1
 d24:	7d 01       	movw	r14, r26
 d26:	f7 01       	movw	r30, r14
 d28:	01 91       	ld	r16, Z+
 d2a:	11 91       	ld	r17, Z+
	unsigned short i; // Scheduler for-loop iterator
	while(1) {
		// Scheduler code
		for ( i = 0; i < numTasks; i++ ) {
			// Task is ready to tick
			if ( tasks[i]->elapsedTime == tasks[i]->period ) {
 d2c:	7f 01       	movw	r14, r30
 d2e:	d8 01       	movw	r26, r16
 d30:	15 96       	adiw	r26, 0x05	; 5
 d32:	4d 91       	ld	r20, X+
 d34:	5d 91       	ld	r21, X+
 d36:	6d 91       	ld	r22, X+
 d38:	7c 91       	ld	r23, X
 d3a:	18 97       	sbiw	r26, 0x08	; 8
 d3c:	11 96       	adiw	r26, 0x01	; 1
 d3e:	8d 91       	ld	r24, X+
 d40:	9d 91       	ld	r25, X+
 d42:	0d 90       	ld	r0, X+
 d44:	bc 91       	ld	r27, X
 d46:	a0 2d       	mov	r26, r0
 d48:	48 17       	cp	r20, r24
 d4a:	59 07       	cpc	r21, r25
 d4c:	6a 07       	cpc	r22, r26
 d4e:	7b 07       	cpc	r23, r27
 d50:	81 f4       	brne	.+32     	; 0xd72 <main+0x30c>
 d52:	f8 01       	movw	r30, r16
 d54:	80 81       	ld	r24, Z
 d56:	01 84       	ldd	r0, Z+9	; 0x09
				// Setting next state for task
				tasks[i]->state = tasks[i]->TickFct(tasks[i]->state);
 d58:	f2 85       	ldd	r31, Z+10	; 0x0a
 d5a:	e0 2d       	mov	r30, r0
 d5c:	08 2e       	mov	r0, r24
 d5e:	00 0c       	add	r0, r0
 d60:	99 0b       	sbc	r25, r25
 d62:	09 95       	icall
 d64:	d8 01       	movw	r26, r16
 d66:	8c 93       	st	X, r24
 d68:	f8 01       	movw	r30, r16
 d6a:	15 82       	std	Z+5, r1	; 0x05
 d6c:	16 82       	std	Z+6, r1	; 0x06
				// Reset the elapsed time for next tick.
				tasks[i]->elapsedTime = 0;
 d6e:	17 82       	std	Z+7, r1	; 0x07
 d70:	10 86       	std	Z+8, r1	; 0x08
 d72:	f8 01       	movw	r30, r16
 d74:	85 81       	ldd	r24, Z+5	; 0x05
 d76:	96 81       	ldd	r25, Z+6	; 0x06
			}
			tasks[i]->elapsedTime += 1;
 d78:	a7 81       	ldd	r26, Z+7	; 0x07
 d7a:	b0 85       	ldd	r27, Z+8	; 0x08
 d7c:	01 96       	adiw	r24, 0x01	; 1
 d7e:	a1 1d       	adc	r26, r1
 d80:	b1 1d       	adc	r27, r1
 d82:	85 83       	std	Z+5, r24	; 0x05
 d84:	96 83       	std	Z+6, r25	; 0x06
 d86:	a7 83       	std	Z+7, r26	; 0x07
 d88:	b0 87       	std	Z+8, r27	; 0x08
 d8a:	ae 14       	cp	r10, r14
 d8c:	bf 04       	cpc	r11, r15
 d8e:	59 f6       	brne	.-106    	; 0xd26 <main+0x2c0>
	srand(time(NULL));

	unsigned short i; // Scheduler for-loop iterator
	while(1) {
		// Scheduler code
		for ( i = 0; i < numTasks; i++ ) {
 d90:	80 91 36 02 	lds	r24, 0x0236	; 0x800236 <TimerFlag>
 d94:	88 23       	and	r24, r24
				// Reset the elapsed time for next tick.
				tasks[i]->elapsedTime = 0;
			}
			tasks[i]->elapsedTime += 1;
		}
		while(!TimerFlag);
 d96:	e1 f3       	breq	.-8      	; 0xd90 <main+0x32a>
 d98:	10 92 36 02 	sts	0x0236, r1	; 0x800236 <TimerFlag>
 d9c:	c1 cf       	rjmp	.-126    	; 0xd20 <main+0x2ba>

00000d9e <__divmodhi4>:
		TimerFlag = 0;
 d9e:	97 fb       	bst	r25, 7
 da0:	07 2e       	mov	r0, r23
	}
 da2:	16 f4       	brtc	.+4      	; 0xda8 <__divmodhi4+0xa>
 da4:	00 94       	com	r0
 da6:	06 d0       	rcall	.+12     	; 0xdb4 <__divmodhi4_neg1>
 da8:	77 fd       	sbrc	r23, 7
 daa:	08 d0       	rcall	.+16     	; 0xdbc <__divmodhi4_neg2>
 dac:	2d d0       	rcall	.+90     	; 0xe08 <__udivmodhi4>
 dae:	07 fc       	sbrc	r0, 7
 db0:	05 d0       	rcall	.+10     	; 0xdbc <__divmodhi4_neg2>
 db2:	3e f4       	brtc	.+14     	; 0xdc2 <__divmodhi4_exit>

00000db4 <__divmodhi4_neg1>:
 db4:	90 95       	com	r25
 db6:	81 95       	neg	r24
 db8:	9f 4f       	sbci	r25, 0xFF	; 255
 dba:	08 95       	ret

00000dbc <__divmodhi4_neg2>:
 dbc:	70 95       	com	r23
 dbe:	61 95       	neg	r22
 dc0:	7f 4f       	sbci	r23, 0xFF	; 255

00000dc2 <__divmodhi4_exit>:
 dc2:	08 95       	ret

00000dc4 <__udivmodsi4>:
 dc4:	a1 e2       	ldi	r26, 0x21	; 33
 dc6:	1a 2e       	mov	r1, r26
 dc8:	aa 1b       	sub	r26, r26
 dca:	bb 1b       	sub	r27, r27
 dcc:	fd 01       	movw	r30, r26
 dce:	0d c0       	rjmp	.+26     	; 0xdea <__udivmodsi4_ep>

00000dd0 <__udivmodsi4_loop>:
 dd0:	aa 1f       	adc	r26, r26
 dd2:	bb 1f       	adc	r27, r27
 dd4:	ee 1f       	adc	r30, r30
 dd6:	ff 1f       	adc	r31, r31
 dd8:	a2 17       	cp	r26, r18
 dda:	b3 07       	cpc	r27, r19
 ddc:	e4 07       	cpc	r30, r20
 dde:	f5 07       	cpc	r31, r21
 de0:	20 f0       	brcs	.+8      	; 0xdea <__udivmodsi4_ep>
 de2:	a2 1b       	sub	r26, r18
 de4:	b3 0b       	sbc	r27, r19
 de6:	e4 0b       	sbc	r30, r20
 de8:	f5 0b       	sbc	r31, r21

00000dea <__udivmodsi4_ep>:
 dea:	66 1f       	adc	r22, r22
 dec:	77 1f       	adc	r23, r23
 dee:	88 1f       	adc	r24, r24
 df0:	99 1f       	adc	r25, r25
 df2:	1a 94       	dec	r1
 df4:	69 f7       	brne	.-38     	; 0xdd0 <__udivmodsi4_loop>
 df6:	60 95       	com	r22
 df8:	70 95       	com	r23
 dfa:	80 95       	com	r24
 dfc:	90 95       	com	r25
 dfe:	9b 01       	movw	r18, r22
 e00:	ac 01       	movw	r20, r24
 e02:	bd 01       	movw	r22, r26
 e04:	cf 01       	movw	r24, r30
 e06:	08 95       	ret

00000e08 <__udivmodhi4>:
 e08:	aa 1b       	sub	r26, r26
 e0a:	bb 1b       	sub	r27, r27
 e0c:	51 e1       	ldi	r21, 0x11	; 17
 e0e:	07 c0       	rjmp	.+14     	; 0xe1e <__udivmodhi4_ep>

00000e10 <__udivmodhi4_loop>:
 e10:	aa 1f       	adc	r26, r26
 e12:	bb 1f       	adc	r27, r27
 e14:	a6 17       	cp	r26, r22
 e16:	b7 07       	cpc	r27, r23
 e18:	10 f0       	brcs	.+4      	; 0xe1e <__udivmodhi4_ep>
 e1a:	a6 1b       	sub	r26, r22
 e1c:	b7 0b       	sbc	r27, r23

00000e1e <__udivmodhi4_ep>:
 e1e:	88 1f       	adc	r24, r24
 e20:	99 1f       	adc	r25, r25
 e22:	5a 95       	dec	r21
 e24:	a9 f7       	brne	.-22     	; 0xe10 <__udivmodhi4_loop>
 e26:	80 95       	com	r24
 e28:	90 95       	com	r25
 e2a:	bc 01       	movw	r22, r24
 e2c:	cd 01       	movw	r24, r26
 e2e:	08 95       	ret

00000e30 <do_rand>:
 e30:	8f 92       	push	r8
 e32:	9f 92       	push	r9
 e34:	af 92       	push	r10
 e36:	bf 92       	push	r11
 e38:	cf 92       	push	r12
 e3a:	df 92       	push	r13
 e3c:	ef 92       	push	r14
 e3e:	ff 92       	push	r15
 e40:	cf 93       	push	r28
 e42:	df 93       	push	r29
 e44:	ec 01       	movw	r28, r24
 e46:	68 81       	ld	r22, Y
 e48:	79 81       	ldd	r23, Y+1	; 0x01
 e4a:	8a 81       	ldd	r24, Y+2	; 0x02
 e4c:	9b 81       	ldd	r25, Y+3	; 0x03
 e4e:	61 15       	cp	r22, r1
 e50:	71 05       	cpc	r23, r1
 e52:	81 05       	cpc	r24, r1
 e54:	91 05       	cpc	r25, r1
 e56:	21 f4       	brne	.+8      	; 0xe60 <do_rand+0x30>
 e58:	64 e2       	ldi	r22, 0x24	; 36
 e5a:	79 ed       	ldi	r23, 0xD9	; 217
 e5c:	8b e5       	ldi	r24, 0x5B	; 91
 e5e:	97 e0       	ldi	r25, 0x07	; 7
 e60:	2d e1       	ldi	r18, 0x1D	; 29
 e62:	33 ef       	ldi	r19, 0xF3	; 243
 e64:	41 e0       	ldi	r20, 0x01	; 1
 e66:	50 e0       	ldi	r21, 0x00	; 0
 e68:	38 d0       	rcall	.+112    	; 0xeda <__divmodsi4>
 e6a:	49 01       	movw	r8, r18
 e6c:	5a 01       	movw	r10, r20
 e6e:	9b 01       	movw	r18, r22
 e70:	ac 01       	movw	r20, r24
 e72:	a7 ea       	ldi	r26, 0xA7	; 167
 e74:	b1 e4       	ldi	r27, 0x41	; 65
 e76:	4d d0       	rcall	.+154    	; 0xf12 <__muluhisi3>
 e78:	6b 01       	movw	r12, r22
 e7a:	7c 01       	movw	r14, r24
 e7c:	ac ee       	ldi	r26, 0xEC	; 236
 e7e:	b4 ef       	ldi	r27, 0xF4	; 244
 e80:	a5 01       	movw	r20, r10
 e82:	94 01       	movw	r18, r8
 e84:	52 d0       	rcall	.+164    	; 0xf2a <__mulohisi3>
 e86:	dc 01       	movw	r26, r24
 e88:	cb 01       	movw	r24, r22
 e8a:	8c 0d       	add	r24, r12
 e8c:	9d 1d       	adc	r25, r13
 e8e:	ae 1d       	adc	r26, r14
 e90:	bf 1d       	adc	r27, r15
 e92:	b7 ff       	sbrs	r27, 7
 e94:	03 c0       	rjmp	.+6      	; 0xe9c <do_rand+0x6c>
 e96:	01 97       	sbiw	r24, 0x01	; 1
 e98:	a1 09       	sbc	r26, r1
 e9a:	b0 48       	sbci	r27, 0x80	; 128
 e9c:	88 83       	st	Y, r24
 e9e:	99 83       	std	Y+1, r25	; 0x01
 ea0:	aa 83       	std	Y+2, r26	; 0x02
 ea2:	bb 83       	std	Y+3, r27	; 0x03
 ea4:	9f 77       	andi	r25, 0x7F	; 127
 ea6:	df 91       	pop	r29
 ea8:	cf 91       	pop	r28
 eaa:	ff 90       	pop	r15
 eac:	ef 90       	pop	r14
 eae:	df 90       	pop	r13
 eb0:	cf 90       	pop	r12
 eb2:	bf 90       	pop	r11
 eb4:	af 90       	pop	r10
 eb6:	9f 90       	pop	r9
 eb8:	8f 90       	pop	r8
 eba:	08 95       	ret

00000ebc <rand_r>:
 ebc:	b9 cf       	rjmp	.-142    	; 0xe30 <do_rand>

00000ebe <rand>:
 ebe:	80 e0       	ldi	r24, 0x00	; 0
 ec0:	91 e0       	ldi	r25, 0x01	; 1
 ec2:	b6 cf       	rjmp	.-148    	; 0xe30 <do_rand>

00000ec4 <srand>:
 ec4:	a0 e0       	ldi	r26, 0x00	; 0
 ec6:	b0 e0       	ldi	r27, 0x00	; 0
 ec8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 ecc:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 ed0:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
 ed4:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
 ed8:	08 95       	ret

00000eda <__divmodsi4>:
 eda:	05 2e       	mov	r0, r21
 edc:	97 fb       	bst	r25, 7
 ede:	16 f4       	brtc	.+4      	; 0xee4 <__divmodsi4+0xa>
 ee0:	00 94       	com	r0
 ee2:	0f d0       	rcall	.+30     	; 0xf02 <__negsi2>
 ee4:	57 fd       	sbrc	r21, 7
 ee6:	05 d0       	rcall	.+10     	; 0xef2 <__divmodsi4_neg2>
 ee8:	6d df       	rcall	.-294    	; 0xdc4 <__udivmodsi4>
 eea:	07 fc       	sbrc	r0, 7
 eec:	02 d0       	rcall	.+4      	; 0xef2 <__divmodsi4_neg2>
 eee:	46 f4       	brtc	.+16     	; 0xf00 <__divmodsi4_exit>
 ef0:	08 c0       	rjmp	.+16     	; 0xf02 <__negsi2>

00000ef2 <__divmodsi4_neg2>:
 ef2:	50 95       	com	r21
 ef4:	40 95       	com	r20
 ef6:	30 95       	com	r19
 ef8:	21 95       	neg	r18
 efa:	3f 4f       	sbci	r19, 0xFF	; 255
 efc:	4f 4f       	sbci	r20, 0xFF	; 255
 efe:	5f 4f       	sbci	r21, 0xFF	; 255

00000f00 <__divmodsi4_exit>:
 f00:	08 95       	ret

00000f02 <__negsi2>:
 f02:	90 95       	com	r25
 f04:	80 95       	com	r24
 f06:	70 95       	com	r23
 f08:	61 95       	neg	r22
 f0a:	7f 4f       	sbci	r23, 0xFF	; 255
 f0c:	8f 4f       	sbci	r24, 0xFF	; 255
 f0e:	9f 4f       	sbci	r25, 0xFF	; 255
 f10:	08 95       	ret

00000f12 <__muluhisi3>:
 f12:	0f d0       	rcall	.+30     	; 0xf32 <__umulhisi3>
 f14:	a5 9f       	mul	r26, r21
 f16:	90 0d       	add	r25, r0
 f18:	b4 9f       	mul	r27, r20
 f1a:	90 0d       	add	r25, r0
 f1c:	a4 9f       	mul	r26, r20
 f1e:	80 0d       	add	r24, r0
 f20:	91 1d       	adc	r25, r1
 f22:	11 24       	eor	r1, r1
 f24:	08 95       	ret

00000f26 <__mulshisi3>:
 f26:	b7 ff       	sbrs	r27, 7
 f28:	f4 cf       	rjmp	.-24     	; 0xf12 <__muluhisi3>

00000f2a <__mulohisi3>:
 f2a:	f3 df       	rcall	.-26     	; 0xf12 <__muluhisi3>
 f2c:	82 1b       	sub	r24, r18
 f2e:	93 0b       	sbc	r25, r19
 f30:	08 95       	ret

00000f32 <__umulhisi3>:
 f32:	a2 9f       	mul	r26, r18
 f34:	b0 01       	movw	r22, r0
 f36:	b3 9f       	mul	r27, r19
 f38:	c0 01       	movw	r24, r0
 f3a:	a3 9f       	mul	r26, r19
 f3c:	70 0d       	add	r23, r0
 f3e:	81 1d       	adc	r24, r1
 f40:	11 24       	eor	r1, r1
 f42:	91 1d       	adc	r25, r1
 f44:	b2 9f       	mul	r27, r18
 f46:	70 0d       	add	r23, r0
 f48:	81 1d       	adc	r24, r1
 f4a:	11 24       	eor	r1, r1
 f4c:	91 1d       	adc	r25, r1
 f4e:	08 95       	ret

00000f50 <_exit>:
 f50:	f8 94       	cli

00000f52 <__stop_program>:
 f52:	ff cf       	rjmp	.-2      	; 0xf52 <__stop_program>
