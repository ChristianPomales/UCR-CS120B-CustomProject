
CustomProject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000096  00800100  00000836  000008ca  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000836  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000004a  00800196  00800196  00000960  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000960  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000990  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f0  00000000  00000000  000009d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001376  00000000  00000000  00000ac0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ad2  00000000  00000000  00001e36  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a39  00000000  00000000  00002908  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000274  00000000  00000000  00003344  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000898  00000000  00000000  000035b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000b7f  00000000  00000000  00003e50  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000140  00000000  00000000  000049cf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	03 c1       	rjmp	.+518    	; 0x23c <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e6 e3       	ldi	r30, 0x36	; 54
  a0:	f8 e0       	ldi	r31, 0x08	; 8
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a6 39       	cpi	r26, 0x96	; 150
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a6 e9       	ldi	r26, 0x96	; 150
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a0 3e       	cpi	r26, 0xE0	; 224
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	9b d2       	rcall	.+1334   	; 0x5fa <main>
  c4:	b6 c3       	rjmp	.+1900   	; 0x832 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <game_start_tick>:
		if(c==0){return b;}
		a = b;
		b = c;
	}
	return 0;
}
  c8:	cf 93       	push	r28
  ca:	df 93       	push	r29
  cc:	cd b7       	in	r28, 0x3d	; 61
  ce:	de b7       	in	r29, 0x3e	; 62
  d0:	a0 97       	sbiw	r28, 0x20	; 32
  d2:	0f b6       	in	r0, 0x3f	; 63
  d4:	f8 94       	cli
  d6:	de bf       	out	0x3e, r29	; 62
  d8:	0f be       	out	0x3f, r0	; 63
  da:	cd bf       	out	0x3d, r28	; 61
  dc:	00 97       	sbiw	r24, 0x00	; 0
  de:	21 f0       	breq	.+8      	; 0xe8 <game_start_tick+0x20>
  e0:	81 30       	cpi	r24, 0x01	; 1
  e2:	91 05       	cpc	r25, r1
  e4:	31 f0       	breq	.+12     	; 0xf2 <game_start_tick+0x2a>
  e6:	0a c0       	rjmp	.+20     	; 0xfc <game_start_tick+0x34>
  e8:	80 91 25 01 	lds	r24, 0x0125	; 0x800125 <key>
  ec:	81 34       	cpi	r24, 0x41	; 65
  ee:	61 f4       	brne	.+24     	; 0x108 <game_start_tick+0x40>
  f0:	22 c0       	rjmp	.+68     	; 0x136 <game_start_tick+0x6e>
  f2:	80 91 25 01 	lds	r24, 0x0125	; 0x800125 <key>
  f6:	84 34       	cpi	r24, 0x44	; 68
  f8:	f1 f4       	brne	.+60     	; 0x136 <game_start_tick+0x6e>
  fa:	06 c0       	rjmp	.+12     	; 0x108 <game_start_tick+0x40>
  fc:	00 97       	sbiw	r24, 0x00	; 0
  fe:	21 f0       	breq	.+8      	; 0x108 <game_start_tick+0x40>
 100:	81 30       	cpi	r24, 0x01	; 1
 102:	91 05       	cpc	r25, r1
 104:	31 f5       	brne	.+76     	; 0x152 <game_start_tick+0x8a>
 106:	17 c0       	rjmp	.+46     	; 0x136 <game_start_tick+0x6e>
 108:	10 92 da 01 	sts	0x01DA, r1	; 0x8001da <playFlag>
 10c:	80 e2       	ldi	r24, 0x20	; 32
 10e:	ea e2       	ldi	r30, 0x2A	; 42
 110:	f1 e0       	ldi	r31, 0x01	; 1
 112:	de 01       	movw	r26, r28
 114:	11 96       	adiw	r26, 0x01	; 1
 116:	01 90       	ld	r0, Z+
 118:	0d 92       	st	X+, r0
 11a:	8a 95       	dec	r24
 11c:	e1 f7       	brne	.-8      	; 0x116 <game_start_tick+0x4e>
 11e:	80 e2       	ldi	r24, 0x20	; 32
 120:	fe 01       	movw	r30, r28
 122:	31 96       	adiw	r30, 0x01	; 1
 124:	a0 e0       	ldi	r26, 0x00	; 0
 126:	b1 e0       	ldi	r27, 0x01	; 1
 128:	01 90       	ld	r0, Z+
 12a:	0d 92       	st	X+, r0
 12c:	8a 95       	dec	r24
 12e:	e1 f7       	brne	.-8      	; 0x128 <game_start_tick+0x60>
 130:	80 e0       	ldi	r24, 0x00	; 0
 132:	90 e0       	ldi	r25, 0x00	; 0
 134:	0e c0       	rjmp	.+28     	; 0x152 <game_start_tick+0x8a>
 136:	81 e0       	ldi	r24, 0x01	; 1
 138:	80 93 da 01 	sts	0x01DA, r24	; 0x8001da <playFlag>
 13c:	80 e2       	ldi	r24, 0x20	; 32
 13e:	e6 e7       	ldi	r30, 0x76	; 118
 140:	f1 e0       	ldi	r31, 0x01	; 1
 142:	a0 e0       	ldi	r26, 0x00	; 0
 144:	b1 e0       	ldi	r27, 0x01	; 1
 146:	01 90       	ld	r0, Z+
 148:	0d 92       	st	X+, r0
 14a:	8a 95       	dec	r24
 14c:	e1 f7       	brne	.-8      	; 0x146 <game_start_tick+0x7e>
 14e:	81 e0       	ldi	r24, 0x01	; 1
 150:	90 e0       	ldi	r25, 0x00	; 0
 152:	a0 96       	adiw	r28, 0x20	; 32
 154:	0f b6       	in	r0, 0x3f	; 63
 156:	f8 94       	cli
 158:	de bf       	out	0x3e, r29	; 62
 15a:	0f be       	out	0x3f, r0	; 63
 15c:	cd bf       	out	0x3d, r28	; 61
 15e:	df 91       	pop	r29
 160:	cf 91       	pop	r28
 162:	08 95       	ret

00000164 <terrain_tick>:
 164:	00 97       	sbiw	r24, 0x00	; 0
 166:	21 f0       	breq	.+8      	; 0x170 <terrain_tick+0xc>
 168:	81 30       	cpi	r24, 0x01	; 1
 16a:	91 05       	cpc	r25, r1
 16c:	31 f0       	breq	.+12     	; 0x17a <terrain_tick+0x16>
 16e:	0a c0       	rjmp	.+20     	; 0x184 <terrain_tick+0x20>
 170:	80 91 da 01 	lds	r24, 0x01DA	; 0x8001da <playFlag>
 174:	81 30       	cpi	r24, 0x01	; 1
 176:	b1 f4       	brne	.+44     	; 0x1a4 <terrain_tick+0x40>
 178:	0a c0       	rjmp	.+20     	; 0x18e <terrain_tick+0x2a>
 17a:	80 91 da 01 	lds	r24, 0x01DA	; 0x8001da <playFlag>
 17e:	88 23       	and	r24, r24
 180:	89 f0       	breq	.+34     	; 0x1a4 <terrain_tick+0x40>
 182:	05 c0       	rjmp	.+10     	; 0x18e <terrain_tick+0x2a>
 184:	00 97       	sbiw	r24, 0x00	; 0
 186:	71 f0       	breq	.+28     	; 0x1a4 <terrain_tick+0x40>
 188:	81 30       	cpi	r24, 0x01	; 1
 18a:	91 05       	cpc	r25, r1
 18c:	09 f5       	brne	.+66     	; 0x1d0 <terrain_tick+0x6c>
 18e:	90 91 d8 01 	lds	r25, 0x01D8	; 0x8001d8 <terrainShift.2404>
 192:	a0 e1       	ldi	r26, 0x10	; 16
 194:	b1 e0       	ldi	r27, 0x01	; 1
 196:	40 e2       	ldi	r20, 0x20	; 32
 198:	51 e0       	ldi	r21, 0x01	; 1
 19a:	29 2f       	mov	r18, r25
 19c:	30 e0       	ldi	r19, 0x00	; 0
 19e:	20 51       	subi	r18, 0x10	; 16
 1a0:	31 40       	sbci	r19, 0x01	; 1
 1a2:	05 c0       	rjmp	.+10     	; 0x1ae <terrain_tick+0x4a>
 1a4:	10 92 d8 01 	sts	0x01D8, r1	; 0x8001d8 <terrainShift.2404>
 1a8:	80 e0       	ldi	r24, 0x00	; 0
 1aa:	90 e0       	ldi	r25, 0x00	; 0
 1ac:	08 95       	ret
 1ae:	f9 01       	movw	r30, r18
 1b0:	ea 0f       	add	r30, r26
 1b2:	fb 1f       	adc	r31, r27
 1b4:	ef 71       	andi	r30, 0x1F	; 31
 1b6:	ff 27       	eor	r31, r31
 1b8:	ea 5a       	subi	r30, 0xAA	; 170
 1ba:	fe 4f       	sbci	r31, 0xFE	; 254
 1bc:	80 81       	ld	r24, Z
 1be:	8d 93       	st	X+, r24
 1c0:	a4 17       	cp	r26, r20
 1c2:	b5 07       	cpc	r27, r21
 1c4:	a1 f7       	brne	.-24     	; 0x1ae <terrain_tick+0x4a>
 1c6:	9f 5f       	subi	r25, 0xFF	; 255
 1c8:	90 93 d8 01 	sts	0x01D8, r25	; 0x8001d8 <terrainShift.2404>
 1cc:	81 e0       	ldi	r24, 0x01	; 1
 1ce:	90 e0       	ldi	r25, 0x00	; 0
 1d0:	08 95       	ret

000001d2 <TimerSet>:
 1d2:	60 93 26 01 	sts	0x0126, r22	; 0x800126 <_avr_timer_M>
 1d6:	70 93 27 01 	sts	0x0127, r23	; 0x800127 <_avr_timer_M+0x1>
 1da:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <_avr_timer_M+0x2>
 1de:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <_avr_timer_M+0x3>
 1e2:	60 93 db 01 	sts	0x01DB, r22	; 0x8001db <_avr_timer_cntcurr>
 1e6:	70 93 dc 01 	sts	0x01DC, r23	; 0x8001dc <_avr_timer_cntcurr+0x1>
 1ea:	80 93 dd 01 	sts	0x01DD, r24	; 0x8001dd <_avr_timer_cntcurr+0x2>
 1ee:	90 93 de 01 	sts	0x01DE, r25	; 0x8001de <_avr_timer_cntcurr+0x3>
 1f2:	08 95       	ret

000001f4 <TimerOn>:
 1f4:	8b e0       	ldi	r24, 0x0B	; 11
 1f6:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 1fa:	8d e7       	ldi	r24, 0x7D	; 125
 1fc:	90 e0       	ldi	r25, 0x00	; 0
 1fe:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 202:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 206:	82 e0       	ldi	r24, 0x02	; 2
 208:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 20c:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 210:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 214:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <_avr_timer_M>
 218:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <_avr_timer_M+0x1>
 21c:	a0 91 28 01 	lds	r26, 0x0128	; 0x800128 <_avr_timer_M+0x2>
 220:	b0 91 29 01 	lds	r27, 0x0129	; 0x800129 <_avr_timer_M+0x3>
 224:	80 93 db 01 	sts	0x01DB, r24	; 0x8001db <_avr_timer_cntcurr>
 228:	90 93 dc 01 	sts	0x01DC, r25	; 0x8001dc <_avr_timer_cntcurr+0x1>
 22c:	a0 93 dd 01 	sts	0x01DD, r26	; 0x8001dd <_avr_timer_cntcurr+0x2>
 230:	b0 93 de 01 	sts	0x01DE, r27	; 0x8001de <_avr_timer_cntcurr+0x3>
 234:	8f b7       	in	r24, 0x3f	; 63
 236:	80 68       	ori	r24, 0x80	; 128
 238:	8f bf       	out	0x3f, r24	; 63
 23a:	08 95       	ret

0000023c <__vector_13>:
 23c:	1f 92       	push	r1
 23e:	0f 92       	push	r0
 240:	0f b6       	in	r0, 0x3f	; 63
 242:	0f 92       	push	r0
 244:	11 24       	eor	r1, r1
 246:	8f 93       	push	r24
 248:	9f 93       	push	r25
 24a:	af 93       	push	r26
 24c:	bf 93       	push	r27
 24e:	80 91 db 01 	lds	r24, 0x01DB	; 0x8001db <_avr_timer_cntcurr>
 252:	90 91 dc 01 	lds	r25, 0x01DC	; 0x8001dc <_avr_timer_cntcurr+0x1>
 256:	a0 91 dd 01 	lds	r26, 0x01DD	; 0x8001dd <_avr_timer_cntcurr+0x2>
 25a:	b0 91 de 01 	lds	r27, 0x01DE	; 0x8001de <_avr_timer_cntcurr+0x3>
 25e:	01 97       	sbiw	r24, 0x01	; 1
 260:	a1 09       	sbc	r26, r1
 262:	b1 09       	sbc	r27, r1
 264:	80 93 db 01 	sts	0x01DB, r24	; 0x8001db <_avr_timer_cntcurr>
 268:	90 93 dc 01 	sts	0x01DC, r25	; 0x8001dc <_avr_timer_cntcurr+0x1>
 26c:	a0 93 dd 01 	sts	0x01DD, r26	; 0x8001dd <_avr_timer_cntcurr+0x2>
 270:	b0 93 de 01 	sts	0x01DE, r27	; 0x8001de <_avr_timer_cntcurr+0x3>
 274:	89 2b       	or	r24, r25
 276:	8a 2b       	or	r24, r26
 278:	8b 2b       	or	r24, r27
 27a:	99 f4       	brne	.+38     	; 0x2a2 <__vector_13+0x66>
 27c:	81 e0       	ldi	r24, 0x01	; 1
 27e:	80 93 df 01 	sts	0x01DF, r24	; 0x8001df <TimerFlag>
 282:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <_avr_timer_M>
 286:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <_avr_timer_M+0x1>
 28a:	a0 91 28 01 	lds	r26, 0x0128	; 0x800128 <_avr_timer_M+0x2>
 28e:	b0 91 29 01 	lds	r27, 0x0129	; 0x800129 <_avr_timer_M+0x3>
 292:	80 93 db 01 	sts	0x01DB, r24	; 0x8001db <_avr_timer_cntcurr>
 296:	90 93 dc 01 	sts	0x01DC, r25	; 0x8001dc <_avr_timer_cntcurr+0x1>
 29a:	a0 93 dd 01 	sts	0x01DD, r26	; 0x8001dd <_avr_timer_cntcurr+0x2>
 29e:	b0 93 de 01 	sts	0x01DE, r27	; 0x8001de <_avr_timer_cntcurr+0x3>
 2a2:	bf 91       	pop	r27
 2a4:	af 91       	pop	r26
 2a6:	9f 91       	pop	r25
 2a8:	8f 91       	pop	r24
 2aa:	0f 90       	pop	r0
 2ac:	0f be       	out	0x3f, r0	; 63
 2ae:	0f 90       	pop	r0
 2b0:	1f 90       	pop	r1
 2b2:	18 95       	reti

000002b4 <delay_ms>:
 2b4:	18 16       	cp	r1, r24
 2b6:	19 06       	cpc	r1, r25
 2b8:	5c f0       	brlt	.+22     	; 0x2d0 <delay_ms+0x1c>
 2ba:	08 95       	ret
 2bc:	00 00       	nop
 2be:	21 50       	subi	r18, 0x01	; 1
 2c0:	31 09       	sbc	r19, r1
 2c2:	e1 f7       	brne	.-8      	; 0x2bc <delay_ms+0x8>
 2c4:	4f 5f       	subi	r20, 0xFF	; 255
 2c6:	5f 4f       	sbci	r21, 0xFF	; 255
 2c8:	84 17       	cp	r24, r20
 2ca:	95 07       	cpc	r25, r21
 2cc:	19 f4       	brne	.+6      	; 0x2d4 <delay_ms+0x20>
 2ce:	08 95       	ret
 2d0:	40 e0       	ldi	r20, 0x00	; 0
 2d2:	50 e0       	ldi	r21, 0x00	; 0
 2d4:	27 e0       	ldi	r18, 0x07	; 7
 2d6:	33 e0       	ldi	r19, 0x03	; 3
 2d8:	f1 cf       	rjmp	.-30     	; 0x2bc <delay_ms+0x8>

000002da <LCD_WriteCommand>:
 2da:	10 98       	cbi	0x02, 0	; 2
 2dc:	8b b9       	out	0x0b, r24	; 11
 2de:	11 9a       	sbi	0x02, 1	; 2
 2e0:	00 00       	nop
 2e2:	11 98       	cbi	0x02, 1	; 2
 2e4:	82 e0       	ldi	r24, 0x02	; 2
 2e6:	90 e0       	ldi	r25, 0x00	; 0
 2e8:	e5 cf       	rjmp	.-54     	; 0x2b4 <delay_ms>
 2ea:	08 95       	ret

000002ec <LCD_ClearScreen>:
 2ec:	81 e0       	ldi	r24, 0x01	; 1
 2ee:	f5 cf       	rjmp	.-22     	; 0x2da <LCD_WriteCommand>
 2f0:	08 95       	ret

000002f2 <LCD_Cursor>:
 2f2:	81 31       	cpi	r24, 0x11	; 17
 2f4:	18 f4       	brcc	.+6      	; 0x2fc <LCD_Cursor+0xa>
 2f6:	81 58       	subi	r24, 0x81	; 129
 2f8:	f0 cf       	rjmp	.-32     	; 0x2da <LCD_WriteCommand>
 2fa:	08 95       	ret
 2fc:	81 55       	subi	r24, 0x51	; 81
 2fe:	ed cf       	rjmp	.-38     	; 0x2da <LCD_WriteCommand>
 300:	08 95       	ret

00000302 <LCD_init>:
 302:	84 e6       	ldi	r24, 0x64	; 100
 304:	90 e0       	ldi	r25, 0x00	; 0
 306:	d6 df       	rcall	.-84     	; 0x2b4 <delay_ms>
 308:	88 e3       	ldi	r24, 0x38	; 56
 30a:	e7 df       	rcall	.-50     	; 0x2da <LCD_WriteCommand>
 30c:	86 e0       	ldi	r24, 0x06	; 6
 30e:	e5 df       	rcall	.-54     	; 0x2da <LCD_WriteCommand>
 310:	8f e0       	ldi	r24, 0x0F	; 15
 312:	e3 df       	rcall	.-58     	; 0x2da <LCD_WriteCommand>
 314:	81 e0       	ldi	r24, 0x01	; 1
 316:	e1 df       	rcall	.-62     	; 0x2da <LCD_WriteCommand>
 318:	8a e0       	ldi	r24, 0x0A	; 10
 31a:	90 e0       	ldi	r25, 0x00	; 0
 31c:	cb cf       	rjmp	.-106    	; 0x2b4 <delay_ms>
 31e:	08 95       	ret

00000320 <LCD_WriteData>:
 320:	10 9a       	sbi	0x02, 0	; 2
 322:	8b b9       	out	0x0b, r24	; 11
 324:	11 9a       	sbi	0x02, 1	; 2
 326:	00 00       	nop
 328:	11 98       	cbi	0x02, 1	; 2
 32a:	81 e0       	ldi	r24, 0x01	; 1
 32c:	90 e0       	ldi	r25, 0x00	; 0
 32e:	c2 cf       	rjmp	.-124    	; 0x2b4 <delay_ms>
 330:	08 95       	ret

00000332 <LCD_DisplayString>:
 332:	0f 93       	push	r16
 334:	1f 93       	push	r17
 336:	cf 93       	push	r28
 338:	df 93       	push	r29
 33a:	18 2f       	mov	r17, r24
 33c:	eb 01       	movw	r28, r22
 33e:	d6 df       	rcall	.-84     	; 0x2ec <LCD_ClearScreen>
 340:	88 81       	ld	r24, Y
 342:	88 23       	and	r24, r24
 344:	51 f0       	breq	.+20     	; 0x35a <LCD_DisplayString+0x28>
 346:	01 e0       	ldi	r16, 0x01	; 1
 348:	01 0f       	add	r16, r17
 34a:	81 2f       	mov	r24, r17
 34c:	d2 df       	rcall	.-92     	; 0x2f2 <LCD_Cursor>
 34e:	89 91       	ld	r24, Y+
 350:	e7 df       	rcall	.-50     	; 0x320 <LCD_WriteData>
 352:	10 2f       	mov	r17, r16
 354:	88 81       	ld	r24, Y
 356:	81 11       	cpse	r24, r1
 358:	f6 cf       	rjmp	.-20     	; 0x346 <LCD_DisplayString+0x14>
 35a:	df 91       	pop	r29
 35c:	cf 91       	pop	r28
 35e:	1f 91       	pop	r17
 360:	0f 91       	pop	r16
 362:	08 95       	ret

00000364 <display_tick>:
 364:	cf 93       	push	r28
 366:	df 93       	push	r29
 368:	ec 01       	movw	r28, r24
 36a:	60 e0       	ldi	r22, 0x00	; 0
 36c:	71 e0       	ldi	r23, 0x01	; 1
 36e:	81 e0       	ldi	r24, 0x01	; 1
 370:	e0 df       	rcall	.-64     	; 0x332 <LCD_DisplayString>
 372:	ce 01       	movw	r24, r28
 374:	df 91       	pop	r29
 376:	cf 91       	pop	r28
 378:	08 95       	ret

0000037a <GetKeypadKey>:
 37a:	8f ee       	ldi	r24, 0xEF	; 239
 37c:	88 b9       	out	0x08, r24	; 8
 37e:	00 00       	nop
 380:	30 9b       	sbis	0x06, 0	; 6
 382:	29 c0       	rjmp	.+82     	; 0x3d6 <GetKeypadKey+0x5c>
 384:	31 9b       	sbis	0x06, 1	; 6
 386:	29 c0       	rjmp	.+82     	; 0x3da <GetKeypadKey+0x60>
 388:	32 9b       	sbis	0x06, 2	; 6
 38a:	29 c0       	rjmp	.+82     	; 0x3de <GetKeypadKey+0x64>
 38c:	33 9b       	sbis	0x06, 3	; 6
 38e:	29 c0       	rjmp	.+82     	; 0x3e2 <GetKeypadKey+0x68>
 390:	8f ed       	ldi	r24, 0xDF	; 223
 392:	88 b9       	out	0x08, r24	; 8
 394:	00 00       	nop
 396:	30 9b       	sbis	0x06, 0	; 6
 398:	26 c0       	rjmp	.+76     	; 0x3e6 <GetKeypadKey+0x6c>
 39a:	31 9b       	sbis	0x06, 1	; 6
 39c:	26 c0       	rjmp	.+76     	; 0x3ea <GetKeypadKey+0x70>
 39e:	32 9b       	sbis	0x06, 2	; 6
 3a0:	26 c0       	rjmp	.+76     	; 0x3ee <GetKeypadKey+0x74>
 3a2:	33 9b       	sbis	0x06, 3	; 6
 3a4:	26 c0       	rjmp	.+76     	; 0x3f2 <GetKeypadKey+0x78>
 3a6:	8f eb       	ldi	r24, 0xBF	; 191
 3a8:	88 b9       	out	0x08, r24	; 8
 3aa:	00 00       	nop
 3ac:	30 9b       	sbis	0x06, 0	; 6
 3ae:	23 c0       	rjmp	.+70     	; 0x3f6 <GetKeypadKey+0x7c>
 3b0:	31 9b       	sbis	0x06, 1	; 6
 3b2:	23 c0       	rjmp	.+70     	; 0x3fa <GetKeypadKey+0x80>
 3b4:	32 9b       	sbis	0x06, 2	; 6
 3b6:	23 c0       	rjmp	.+70     	; 0x3fe <GetKeypadKey+0x84>
 3b8:	33 9b       	sbis	0x06, 3	; 6
 3ba:	23 c0       	rjmp	.+70     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3bc:	8f e7       	ldi	r24, 0x7F	; 127
 3be:	88 b9       	out	0x08, r24	; 8
 3c0:	00 00       	nop
 3c2:	30 9b       	sbis	0x06, 0	; 6
 3c4:	20 c0       	rjmp	.+64     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 3c6:	31 9b       	sbis	0x06, 1	; 6
 3c8:	20 c0       	rjmp	.+64     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3ca:	32 9b       	sbis	0x06, 2	; 6
 3cc:	20 c0       	rjmp	.+64     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 3ce:	33 9b       	sbis	0x06, 3	; 6
 3d0:	20 c0       	rjmp	.+64     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 3d2:	80 e0       	ldi	r24, 0x00	; 0
 3d4:	08 95       	ret
 3d6:	80 e2       	ldi	r24, 0x20	; 32
 3d8:	08 95       	ret
 3da:	84 e3       	ldi	r24, 0x34	; 52
 3dc:	08 95       	ret
 3de:	87 e3       	ldi	r24, 0x37	; 55
 3e0:	08 95       	ret
 3e2:	8a e2       	ldi	r24, 0x2A	; 42
 3e4:	08 95       	ret
 3e6:	82 e3       	ldi	r24, 0x32	; 50
 3e8:	08 95       	ret
 3ea:	85 e3       	ldi	r24, 0x35	; 53
 3ec:	08 95       	ret
 3ee:	88 e3       	ldi	r24, 0x38	; 56
 3f0:	08 95       	ret
 3f2:	80 e3       	ldi	r24, 0x30	; 48
 3f4:	08 95       	ret
 3f6:	83 e3       	ldi	r24, 0x33	; 51
 3f8:	08 95       	ret
 3fa:	86 e3       	ldi	r24, 0x36	; 54
 3fc:	08 95       	ret
 3fe:	89 e3       	ldi	r24, 0x39	; 57
 400:	08 95       	ret
 402:	83 e2       	ldi	r24, 0x23	; 35
 404:	08 95       	ret
 406:	81 e4       	ldi	r24, 0x41	; 65
 408:	08 95       	ret
 40a:	82 e4       	ldi	r24, 0x42	; 66
 40c:	08 95       	ret
 40e:	83 e4       	ldi	r24, 0x43	; 67
 410:	08 95       	ret
 412:	84 e4       	ldi	r24, 0x44	; 68
 414:	08 95       	ret

00000416 <key_tick>:
 416:	cf 93       	push	r28
 418:	df 93       	push	r29
 41a:	ec 01       	movw	r28, r24
 41c:	ae df       	rcall	.-164    	; 0x37a <GetKeypadKey>
 41e:	80 93 25 01 	sts	0x0125, r24	; 0x800125 <key>
 422:	ce 01       	movw	r24, r28
 424:	df 91       	pop	r29
 426:	cf 91       	pop	r28
 428:	08 95       	ret

0000042a <moveLeft>:
 42a:	98 2f       	mov	r25, r24
 42c:	9f 7e       	andi	r25, 0xEF	; 239
 42e:	91 50       	subi	r25, 0x01	; 1
 430:	9f 30       	cpi	r25, 0x0F	; 15
 432:	08 f4       	brcc	.+2      	; 0x436 <moveLeft+0xc>
 434:	81 50       	subi	r24, 0x01	; 1
 436:	08 95       	ret

00000438 <moveRight>:
 438:	8f 30       	cpi	r24, 0x0F	; 15
 43a:	10 f4       	brcc	.+4      	; 0x440 <moveRight+0x8>
 43c:	8f 5f       	subi	r24, 0xFF	; 255
 43e:	08 95       	ret
 440:	90 ef       	ldi	r25, 0xF0	; 240
 442:	98 0f       	add	r25, r24
 444:	9f 30       	cpi	r25, 0x0F	; 15
 446:	08 f4       	brcc	.+2      	; 0x44a <moveRight+0x12>
 448:	8f 5f       	subi	r24, 0xFF	; 255
 44a:	08 95       	ret

0000044c <player_one_tick>:
 44c:	00 97       	sbiw	r24, 0x00	; 0
 44e:	21 f0       	breq	.+8      	; 0x458 <player_one_tick+0xc>
 450:	81 30       	cpi	r24, 0x01	; 1
 452:	91 05       	cpc	r25, r1
 454:	31 f0       	breq	.+12     	; 0x462 <player_one_tick+0x16>
 456:	0a c0       	rjmp	.+20     	; 0x46c <player_one_tick+0x20>
 458:	80 91 da 01 	lds	r24, 0x01DA	; 0x8001da <playFlag>
 45c:	81 30       	cpi	r24, 0x01	; 1
 45e:	61 f4       	brne	.+24     	; 0x478 <player_one_tick+0x2c>
 460:	10 c0       	rjmp	.+32     	; 0x482 <player_one_tick+0x36>
 462:	80 91 da 01 	lds	r24, 0x01DA	; 0x8001da <playFlag>
 466:	88 23       	and	r24, r24
 468:	39 f0       	breq	.+14     	; 0x478 <player_one_tick+0x2c>
 46a:	0b c0       	rjmp	.+22     	; 0x482 <player_one_tick+0x36>
 46c:	00 97       	sbiw	r24, 0x00	; 0
 46e:	21 f0       	breq	.+8      	; 0x478 <player_one_tick+0x2c>
 470:	81 30       	cpi	r24, 0x01	; 1
 472:	91 05       	cpc	r25, r1
 474:	b1 f5       	brne	.+108    	; 0x4e2 <player_one_tick+0x96>
 476:	05 c0       	rjmp	.+10     	; 0x482 <player_one_tick+0x36>
 478:	10 92 d9 01 	sts	0x01D9, r1	; 0x8001d9 <player_one_location>
 47c:	80 e0       	ldi	r24, 0x00	; 0
 47e:	90 e0       	ldi	r25, 0x00	; 0
 480:	08 95       	ret
 482:	80 91 25 01 	lds	r24, 0x0125	; 0x800125 <key>
 486:	82 33       	cpi	r24, 0x32	; 50
 488:	51 f4       	brne	.+20     	; 0x49e <player_one_tick+0x52>
 48a:	90 91 d9 01 	lds	r25, 0x01D9	; 0x8001d9 <player_one_location>
 48e:	80 ef       	ldi	r24, 0xF0	; 240
 490:	89 0f       	add	r24, r25
 492:	80 31       	cpi	r24, 0x10	; 16
 494:	08 f0       	brcs	.+2      	; 0x498 <player_one_tick+0x4c>
 496:	89 2f       	mov	r24, r25
 498:	80 93 d9 01 	sts	0x01D9, r24	; 0x8001d9 <player_one_location>
 49c:	19 c0       	rjmp	.+50     	; 0x4d0 <player_one_tick+0x84>
 49e:	88 33       	cpi	r24, 0x38	; 56
 4a0:	41 f4       	brne	.+16     	; 0x4b2 <player_one_tick+0x66>
 4a2:	80 91 d9 01 	lds	r24, 0x01D9	; 0x8001d9 <player_one_location>
 4a6:	80 31       	cpi	r24, 0x10	; 16
 4a8:	08 f4       	brcc	.+2      	; 0x4ac <player_one_tick+0x60>
 4aa:	80 5f       	subi	r24, 0xF0	; 240
 4ac:	80 93 d9 01 	sts	0x01D9, r24	; 0x8001d9 <player_one_location>
 4b0:	0f c0       	rjmp	.+30     	; 0x4d0 <player_one_tick+0x84>
 4b2:	84 33       	cpi	r24, 0x34	; 52
 4b4:	31 f4       	brne	.+12     	; 0x4c2 <player_one_tick+0x76>
 4b6:	80 91 d9 01 	lds	r24, 0x01D9	; 0x8001d9 <player_one_location>
 4ba:	b7 df       	rcall	.-146    	; 0x42a <moveLeft>
 4bc:	80 93 d9 01 	sts	0x01D9, r24	; 0x8001d9 <player_one_location>
 4c0:	07 c0       	rjmp	.+14     	; 0x4d0 <player_one_tick+0x84>
 4c2:	86 33       	cpi	r24, 0x36	; 54
 4c4:	29 f4       	brne	.+10     	; 0x4d0 <player_one_tick+0x84>
 4c6:	80 91 d9 01 	lds	r24, 0x01D9	; 0x8001d9 <player_one_location>
 4ca:	b6 df       	rcall	.-148    	; 0x438 <moveRight>
 4cc:	80 93 d9 01 	sts	0x01D9, r24	; 0x8001d9 <player_one_location>
 4d0:	e0 91 d9 01 	lds	r30, 0x01D9	; 0x8001d9 <player_one_location>
 4d4:	f0 e0       	ldi	r31, 0x00	; 0
 4d6:	e0 50       	subi	r30, 0x00	; 0
 4d8:	ff 4f       	sbci	r31, 0xFF	; 255
 4da:	8e e3       	ldi	r24, 0x3E	; 62
 4dc:	80 83       	st	Z, r24
 4de:	81 e0       	ldi	r24, 0x01	; 1
 4e0:	90 e0       	ldi	r25, 0x00	; 0
 4e2:	08 95       	ret

000004e4 <player_one_projectile_tick>:
 4e4:	bf 92       	push	r11
 4e6:	cf 92       	push	r12
 4e8:	df 92       	push	r13
 4ea:	ef 92       	push	r14
 4ec:	ff 92       	push	r15
 4ee:	0f 93       	push	r16
 4f0:	1f 93       	push	r17
 4f2:	cf 93       	push	r28
 4f4:	df 93       	push	r29
 4f6:	00 97       	sbiw	r24, 0x00	; 0
 4f8:	21 f0       	breq	.+8      	; 0x502 <player_one_projectile_tick+0x1e>
 4fa:	81 30       	cpi	r24, 0x01	; 1
 4fc:	91 05       	cpc	r25, r1
 4fe:	31 f0       	breq	.+12     	; 0x50c <player_one_projectile_tick+0x28>
 500:	0a c0       	rjmp	.+20     	; 0x516 <player_one_projectile_tick+0x32>
 502:	80 91 da 01 	lds	r24, 0x01DA	; 0x8001da <playFlag>
 506:	81 30       	cpi	r24, 0x01	; 1
 508:	69 f4       	brne	.+26     	; 0x524 <player_one_projectile_tick+0x40>
 50a:	18 c0       	rjmp	.+48     	; 0x53c <player_one_projectile_tick+0x58>
 50c:	80 91 da 01 	lds	r24, 0x01DA	; 0x8001da <playFlag>
 510:	88 23       	and	r24, r24
 512:	41 f0       	breq	.+16     	; 0x524 <player_one_projectile_tick+0x40>
 514:	13 c0       	rjmp	.+38     	; 0x53c <player_one_projectile_tick+0x58>
 516:	00 97       	sbiw	r24, 0x00	; 0
 518:	29 f0       	breq	.+10     	; 0x524 <player_one_projectile_tick+0x40>
 51a:	81 30       	cpi	r24, 0x01	; 1
 51c:	91 05       	cpc	r25, r1
 51e:	09 f0       	breq	.+2      	; 0x522 <player_one_projectile_tick+0x3e>
 520:	62 c0       	rjmp	.+196    	; 0x5e6 <player_one_projectile_tick+0x102>
 522:	0c c0       	rjmp	.+24     	; 0x53c <player_one_projectile_tick+0x58>
 524:	e0 e2       	ldi	r30, 0x20	; 32
 526:	f1 e0       	ldi	r31, 0x01	; 1
 528:	8f ef       	ldi	r24, 0xFF	; 255
 52a:	80 83       	st	Z, r24
 52c:	81 83       	std	Z+1, r24	; 0x01
 52e:	82 83       	std	Z+2, r24	; 0x02
 530:	83 83       	std	Z+3, r24	; 0x03
 532:	84 83       	std	Z+4, r24	; 0x04
 534:	15 b8       	out	0x05, r1	; 5
 536:	80 e0       	ldi	r24, 0x00	; 0
 538:	90 e0       	ldi	r25, 0x00	; 0
 53a:	55 c0       	rjmp	.+170    	; 0x5e6 <player_one_projectile_tick+0x102>
 53c:	80 91 25 01 	lds	r24, 0x0125	; 0x800125 <key>
 540:	85 33       	cpi	r24, 0x35	; 53
 542:	09 f0       	breq	.+2      	; 0x546 <player_one_projectile_tick+0x62>
 544:	44 c0       	rjmp	.+136    	; 0x5ce <player_one_projectile_tick+0xea>
 546:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <player_one_projectile_location>
 54a:	8f 3f       	cpi	r24, 0xFF	; 255
 54c:	49 f0       	breq	.+18     	; 0x560 <player_one_projectile_tick+0x7c>
 54e:	e1 e2       	ldi	r30, 0x21	; 33
 550:	f1 e0       	ldi	r31, 0x01	; 1
 552:	81 e0       	ldi	r24, 0x01	; 1
 554:	90 e0       	ldi	r25, 0x00	; 0
 556:	ac 01       	movw	r20, r24
 558:	21 91       	ld	r18, Z+
 55a:	2f 3f       	cpi	r18, 0xFF	; 255
 55c:	51 f4       	brne	.+20     	; 0x572 <player_one_projectile_tick+0x8e>
 55e:	02 c0       	rjmp	.+4      	; 0x564 <player_one_projectile_tick+0x80>
 560:	40 e0       	ldi	r20, 0x00	; 0
 562:	50 e0       	ldi	r21, 0x00	; 0
 564:	fa 01       	movw	r30, r20
 566:	e0 5e       	subi	r30, 0xE0	; 224
 568:	fe 4f       	sbci	r31, 0xFE	; 254
 56a:	80 91 d9 01 	lds	r24, 0x01D9	; 0x8001d9 <player_one_location>
 56e:	80 83       	st	Z, r24
 570:	2e c0       	rjmp	.+92     	; 0x5ce <player_one_projectile_tick+0xea>
 572:	01 96       	adiw	r24, 0x01	; 1
 574:	85 30       	cpi	r24, 0x05	; 5
 576:	91 05       	cpc	r25, r1
 578:	71 f7       	brne	.-36     	; 0x556 <player_one_projectile_tick+0x72>
 57a:	29 c0       	rjmp	.+82     	; 0x5ce <player_one_projectile_tick+0xea>
 57c:	88 81       	ld	r24, Y
 57e:	8f 3f       	cpi	r24, 0xFF	; 255
 580:	41 f0       	breq	.+16     	; 0x592 <player_one_projectile_tick+0xae>
 582:	98 2f       	mov	r25, r24
 584:	9f 7e       	andi	r25, 0xEF	; 239
 586:	9f 30       	cpi	r25, 0x0F	; 15
 588:	11 f4       	brne	.+4      	; 0x58e <player_one_projectile_tick+0xaa>
 58a:	b8 82       	st	Y, r11
 58c:	02 c0       	rjmp	.+4      	; 0x592 <player_one_projectile_tick+0xae>
 58e:	54 df       	rcall	.-344    	; 0x438 <moveRight>
 590:	88 83       	st	Y, r24
 592:	21 96       	adiw	r28, 0x01	; 1
 594:	0c 17       	cp	r16, r28
 596:	1d 07       	cpc	r17, r29
 598:	89 f7       	brne	.-30     	; 0x57c <player_one_projectile_tick+0x98>
 59a:	a0 e2       	ldi	r26, 0x20	; 32
 59c:	b1 e0       	ldi	r27, 0x01	; 1
 59e:	8d e2       	ldi	r24, 0x2D	; 45
 5a0:	ed 91       	ld	r30, X+
 5a2:	f0 e0       	ldi	r31, 0x00	; 0
 5a4:	e0 50       	subi	r30, 0x00	; 0
 5a6:	ff 4f       	sbci	r31, 0xFF	; 255
 5a8:	80 83       	st	Z, r24
 5aa:	0a 17       	cp	r16, r26
 5ac:	1b 07       	cpc	r17, r27
 5ae:	c1 f7       	brne	.-16     	; 0x5a0 <player_one_projectile_tick+0xbc>
 5b0:	90 e0       	ldi	r25, 0x00	; 0
 5b2:	f7 01       	movw	r30, r14
 5b4:	81 91       	ld	r24, Z+
 5b6:	7f 01       	movw	r14, r30
 5b8:	8f 3f       	cpi	r24, 0xFF	; 255
 5ba:	11 f4       	brne	.+4      	; 0x5c0 <player_one_projectile_tick+0xdc>
 5bc:	99 0f       	add	r25, r25
 5be:	9f 5f       	subi	r25, 0xFF	; 255
 5c0:	0e 15       	cp	r16, r14
 5c2:	1f 05       	cpc	r17, r15
 5c4:	b1 f7       	brne	.-20     	; 0x5b2 <player_one_projectile_tick+0xce>
 5c6:	95 b9       	out	0x05, r25	; 5
 5c8:	81 e0       	ldi	r24, 0x01	; 1
 5ca:	90 e0       	ldi	r25, 0x00	; 0
 5cc:	0c c0       	rjmp	.+24     	; 0x5e6 <player_one_projectile_tick+0x102>
 5ce:	0f 2e       	mov	r0, r31
 5d0:	f0 e2       	ldi	r31, 0x20	; 32
 5d2:	ef 2e       	mov	r14, r31
 5d4:	f1 e0       	ldi	r31, 0x01	; 1
 5d6:	ff 2e       	mov	r15, r31
 5d8:	f0 2d       	mov	r31, r0
 5da:	05 e2       	ldi	r16, 0x25	; 37
 5dc:	11 e0       	ldi	r17, 0x01	; 1
 5de:	e7 01       	movw	r28, r14
 5e0:	bb 24       	eor	r11, r11
 5e2:	ba 94       	dec	r11
 5e4:	cb cf       	rjmp	.-106    	; 0x57c <player_one_projectile_tick+0x98>
 5e6:	df 91       	pop	r29
 5e8:	cf 91       	pop	r28
 5ea:	1f 91       	pop	r17
 5ec:	0f 91       	pop	r16
 5ee:	ff 90       	pop	r15
 5f0:	ef 90       	pop	r14
 5f2:	df 90       	pop	r13
 5f4:	cf 90       	pop	r12
 5f6:	bf 90       	pop	r11
 5f8:	08 95       	ret

000005fa <main>:

// --------END User defined FSMs-----------------------------------------------

// Implement scheduler code from PES.
int main()
{
 5fa:	cf 93       	push	r28
 5fc:	df 93       	push	r29
 5fe:	cd b7       	in	r28, 0x3d	; 61
 600:	de b7       	in	r29, 0x3e	; 62
 602:	2c 97       	sbiw	r28, 0x0c	; 12
 604:	0f b6       	in	r0, 0x3f	; 63
 606:	f8 94       	cli
 608:	de bf       	out	0x3e, r29	; 62
 60a:	0f be       	out	0x3f, r0	; 63
 60c:	cd bf       	out	0x3d, r28	; 61
// Set Data Direction Registers
// Buttons PORTA[0-7], set AVR PORTA to pull down logic
DDRA = 0xFF; PORTA = 0x00; //output
 60e:	8f ef       	ldi	r24, 0xFF	; 255
 610:	81 b9       	out	0x01, r24	; 1
 612:	12 b8       	out	0x02, r1	; 2
DDRB = 0xFF; PORTB = 0x00; //output
 614:	84 b9       	out	0x04, r24	; 4
 616:	15 b8       	out	0x05, r1	; 5
DDRC = 0xF0; PORTC = 0x0F; // PC7..4 outputs init 0s, PC3..0 inputs init 1
 618:	90 ef       	ldi	r25, 0xF0	; 240
 61a:	97 b9       	out	0x07, r25	; 7
 61c:	9f e0       	ldi	r25, 0x0F	; 15
 61e:	98 b9       	out	0x08, r25	; 8
DDRD = 0xFF; PORTD = 0x00; //output
 620:	8a b9       	out	0x0a, r24	; 10
 622:	1b b8       	out	0x0b, r1	; 11

LCD_init();
 624:	6e de       	rcall	.-804    	; 0x302 <LCD_init>
 626:	0f 2e       	mov	r0, r31
 628:	f0 e9       	ldi	r31, 0x90	; 144
 62a:	ef 2e       	mov	r14, r31
 62c:	f0 2d       	mov	r31, r0
 62e:	ff 24       	eor	r15, r15
 630:	f3 94       	inc	r15
 632:	00 e0       	ldi	r16, 0x00	; 0
 634:	10 e0       	ldi	r17, 0x00	; 0
 636:	58 ec       	ldi	r21, 0xC8	; 200
 638:	40 e0       	ldi	r20, 0x00	; 0
 63a:	30 e0       	ldi	r19, 0x00	; 0
 63c:	20 e0       	ldi	r18, 0x00	; 0
 63e:	04 c0       	rjmp	.+8      	; 0x648 <main+0x4e>
	unsigned long int c;
	while(1){
		c = a%b;
		if(c==0){return b;}
		a = b;
		b = c;
 640:	e6 2e       	mov	r14, r22
 642:	f7 2e       	mov	r15, r23
 644:	08 2f       	mov	r16, r24
 646:	19 2f       	mov	r17, r25
//--------Find GCD function --------------------------------------------------
unsigned long int findGCD(unsigned long int a, unsigned long int b)
{
	unsigned long int c;
	while(1){
		c = a%b;
 648:	65 2f       	mov	r22, r21
 64a:	74 2f       	mov	r23, r20
 64c:	83 2f       	mov	r24, r19
 64e:	92 2f       	mov	r25, r18
 650:	2e 2d       	mov	r18, r14
 652:	3f 2d       	mov	r19, r15
 654:	40 2f       	mov	r20, r16
 656:	51 2f       	mov	r21, r17
 658:	ca d0       	rcall	.+404    	; 0x7ee <__udivmodsi4>
 65a:	5e 2d       	mov	r21, r14
 65c:	4f 2d       	mov	r20, r15
 65e:	30 2f       	mov	r19, r16
 660:	21 2f       	mov	r18, r17
		if(c==0){return b;}
 662:	61 15       	cp	r22, r1
 664:	71 05       	cpc	r23, r1
 666:	81 05       	cpc	r24, r1
 668:	91 05       	cpc	r25, r1
 66a:	51 f7       	brne	.-44     	; 0x640 <main+0x46>

//Greatest common divisor for all tasks or smallest time unit for tasks.
unsigned long int GCD = tmpGCD;

//Recalculate GCD periods for scheduler
unsigned long int key_tick_period = key_tick_calc/GCD;
 66c:	68 ec       	ldi	r22, 0xC8	; 200
 66e:	70 e0       	ldi	r23, 0x00	; 0
 670:	80 e0       	ldi	r24, 0x00	; 0
 672:	90 e0       	ldi	r25, 0x00	; 0
 674:	2e 2d       	mov	r18, r14
 676:	3f 2d       	mov	r19, r15
 678:	40 2f       	mov	r20, r16
 67a:	51 2f       	mov	r21, r17
 67c:	b8 d0       	rcall	.+368    	; 0x7ee <__udivmodsi4>
 67e:	49 01       	movw	r8, r18
 680:	5a 01       	movw	r10, r20
unsigned long int player_one_projectile_tick_period = player_one_projectile_tick_calc/GCD;
unsigned long int terrain_tick_period = terrain_tick_calc/GCD;

//Declare an array of tasks 
static task task1, task2, task3, task4, task5, task6;
task *tasks[] = { &task1, &task2, &task3, &task4, &task5, &task6};
 682:	8c e0       	ldi	r24, 0x0C	; 12
 684:	ea e4       	ldi	r30, 0x4A	; 74
 686:	f1 e0       	ldi	r31, 0x01	; 1
 688:	de 01       	movw	r26, r28
 68a:	11 96       	adiw	r26, 0x01	; 1
 68c:	01 90       	ld	r0, Z+
 68e:	0d 92       	st	X+, r0
 690:	8a 95       	dec	r24
 692:	e1 f7       	brne	.-8      	; 0x68c <main+0x92>
const unsigned short numTasks = sizeof(tasks)/sizeof(task*);

// Task 1
task1.state = FETCHKEY;//Task initial state.
 694:	ed ec       	ldi	r30, 0xCD	; 205
 696:	f1 e0       	ldi	r31, 0x01	; 1
 698:	10 82       	st	Z, r1
task1.period = key_tick_period;//Task Period.
 69a:	21 83       	std	Z+1, r18	; 0x01
 69c:	32 83       	std	Z+2, r19	; 0x02
 69e:	43 83       	std	Z+3, r20	; 0x03
 6a0:	54 83       	std	Z+4, r21	; 0x04
task1.elapsedTime = 0;//Task current elapsed time.
 6a2:	15 82       	std	Z+5, r1	; 0x05
 6a4:	16 82       	std	Z+6, r1	; 0x06
 6a6:	17 82       	std	Z+7, r1	; 0x07
 6a8:	10 86       	std	Z+8, r1	; 0x08
task1.TickFct = &key_tick;//Function pointer for the tick.
 6aa:	8b e0       	ldi	r24, 0x0B	; 11
 6ac:	92 e0       	ldi	r25, 0x02	; 2
 6ae:	92 87       	std	Z+10, r25	; 0x0a
 6b0:	81 87       	std	Z+9, r24	; 0x09

// Task 2
task2.state = DISPLAY;//Task initial state.
 6b2:	e2 ec       	ldi	r30, 0xC2	; 194
 6b4:	f1 e0       	ldi	r31, 0x01	; 1
 6b6:	10 82       	st	Z, r1
task2.period = display_tick_period;//Task Period.
 6b8:	21 83       	std	Z+1, r18	; 0x01
 6ba:	32 83       	std	Z+2, r19	; 0x02
 6bc:	43 83       	std	Z+3, r20	; 0x03
 6be:	54 83       	std	Z+4, r21	; 0x04
task2.elapsedTime = 0;//Task current elapsed time.
 6c0:	15 82       	std	Z+5, r1	; 0x05
 6c2:	16 82       	std	Z+6, r1	; 0x06
 6c4:	17 82       	std	Z+7, r1	; 0x07
 6c6:	10 86       	std	Z+8, r1	; 0x08
task2.TickFct = &display_tick;//Function pointer for the tick.
 6c8:	82 eb       	ldi	r24, 0xB2	; 178
 6ca:	91 e0       	ldi	r25, 0x01	; 1
 6cc:	92 87       	std	Z+10, r25	; 0x0a
 6ce:	81 87       	std	Z+9, r24	; 0x09

// Task 3
task3.state = GAME_INIT;//Task initial state.
 6d0:	e7 eb       	ldi	r30, 0xB7	; 183
 6d2:	f1 e0       	ldi	r31, 0x01	; 1
 6d4:	10 82       	st	Z, r1
task3.period = game_start_tick_period;//Task Period.
 6d6:	21 83       	std	Z+1, r18	; 0x01
 6d8:	32 83       	std	Z+2, r19	; 0x02
 6da:	43 83       	std	Z+3, r20	; 0x03
 6dc:	54 83       	std	Z+4, r21	; 0x04
task3.elapsedTime = 0;//Task current elapsed time.
 6de:	15 82       	std	Z+5, r1	; 0x05
 6e0:	16 82       	std	Z+6, r1	; 0x06
 6e2:	17 82       	std	Z+7, r1	; 0x07
 6e4:	10 86       	std	Z+8, r1	; 0x08
task3.TickFct = &game_start_tick;//Function pointer for the tick.
 6e6:	84 e6       	ldi	r24, 0x64	; 100
 6e8:	90 e0       	ldi	r25, 0x00	; 0
 6ea:	92 87       	std	Z+10, r25	; 0x0a
 6ec:	81 87       	std	Z+9, r24	; 0x09

// Task 4
task4.state = TERRAIN_INIT;//Task initial state.
 6ee:	0f 2e       	mov	r0, r31
 6f0:	fc ea       	ldi	r31, 0xAC	; 172
 6f2:	cf 2e       	mov	r12, r31
 6f4:	f1 e0       	ldi	r31, 0x01	; 1
 6f6:	df 2e       	mov	r13, r31
 6f8:	f0 2d       	mov	r31, r0
 6fa:	d6 01       	movw	r26, r12
 6fc:	1c 92       	st	X, r1
task4.period = terrain_tick_period;//Task Period.
 6fe:	60 e9       	ldi	r22, 0x90	; 144
 700:	71 e0       	ldi	r23, 0x01	; 1
 702:	80 e0       	ldi	r24, 0x00	; 0
 704:	90 e0       	ldi	r25, 0x00	; 0
 706:	2e 2d       	mov	r18, r14
 708:	3f 2d       	mov	r19, r15
 70a:	40 2f       	mov	r20, r16
 70c:	51 2f       	mov	r21, r17
 70e:	6f d0       	rcall	.+222    	; 0x7ee <__udivmodsi4>
 710:	f6 01       	movw	r30, r12
 712:	21 83       	std	Z+1, r18	; 0x01
 714:	32 83       	std	Z+2, r19	; 0x02
 716:	43 83       	std	Z+3, r20	; 0x03
 718:	54 83       	std	Z+4, r21	; 0x04
task4.elapsedTime = 0;//Task current elapsed time.
 71a:	15 82       	std	Z+5, r1	; 0x05
 71c:	16 82       	std	Z+6, r1	; 0x06
 71e:	17 82       	std	Z+7, r1	; 0x07
 720:	10 86       	std	Z+8, r1	; 0x08
task4.TickFct = &terrain_tick;//Function pointer for the tick.
 722:	82 eb       	ldi	r24, 0xB2	; 178
 724:	90 e0       	ldi	r25, 0x00	; 0
 726:	92 87       	std	Z+10, r25	; 0x0a
 728:	81 87       	std	Z+9, r24	; 0x09

// Task 5
task5.state = PLAYER_ONE_INIT;//Task initial state.
 72a:	e1 ea       	ldi	r30, 0xA1	; 161
 72c:	f1 e0       	ldi	r31, 0x01	; 1
 72e:	10 82       	st	Z, r1
task5.period = player_one_tick_period;//Task Period.
 730:	81 82       	std	Z+1, r8	; 0x01
 732:	92 82       	std	Z+2, r9	; 0x02
 734:	a3 82       	std	Z+3, r10	; 0x03
 736:	b4 82       	std	Z+4, r11	; 0x04
task5.elapsedTime = 0;//Task current elapsed time.
 738:	15 82       	std	Z+5, r1	; 0x05
 73a:	16 82       	std	Z+6, r1	; 0x06
 73c:	17 82       	std	Z+7, r1	; 0x07
 73e:	10 86       	std	Z+8, r1	; 0x08
task5.TickFct = &player_one_tick;//Function pointer for the tick.
 740:	86 e2       	ldi	r24, 0x26	; 38
 742:	92 e0       	ldi	r25, 0x02	; 2
 744:	92 87       	std	Z+10, r25	; 0x0a
 746:	81 87       	std	Z+9, r24	; 0x09

// Task 6
task6.state = PLAYER_ONE_PROJECTILE_INIT;//Task initial state.
 748:	e6 e9       	ldi	r30, 0x96	; 150
 74a:	f1 e0       	ldi	r31, 0x01	; 1
 74c:	10 82       	st	Z, r1
task6.period = player_one_projectile_tick_period;//Task Period.
 74e:	81 82       	std	Z+1, r8	; 0x01
 750:	92 82       	std	Z+2, r9	; 0x02
 752:	a3 82       	std	Z+3, r10	; 0x03
 754:	b4 82       	std	Z+4, r11	; 0x04
task6.elapsedTime = 0;//Task current elapsed time.
 756:	15 82       	std	Z+5, r1	; 0x05
 758:	16 82       	std	Z+6, r1	; 0x06
 75a:	17 82       	std	Z+7, r1	; 0x07
 75c:	10 86       	std	Z+8, r1	; 0x08
task6.TickFct = &player_one_projectile_tick;//Function pointer for the tick.
 75e:	82 e7       	ldi	r24, 0x72	; 114
 760:	92 e0       	ldi	r25, 0x02	; 2
 762:	92 87       	std	Z+10, r25	; 0x0a
 764:	81 87       	std	Z+9, r24	; 0x09

// Set the timer and turn it on
TimerSet(GCD);
 766:	6e 2d       	mov	r22, r14
 768:	7f 2d       	mov	r23, r15
 76a:	80 2f       	mov	r24, r16
 76c:	91 2f       	mov	r25, r17
TimerOn();
 76e:	31 dd       	rcall	.-1438   	; 0x1d2 <TimerSet>
 770:	41 dd       	rcall	.-1406   	; 0x1f4 <TimerOn>
 772:	6e 01       	movw	r12, r28
 774:	bd e0       	ldi	r27, 0x0D	; 13
 776:	cb 0e       	add	r12, r27
 778:	d1 1c       	adc	r13, r1
 77a:	fe 01       	movw	r30, r28
 77c:	31 96       	adiw	r30, 0x01	; 1
 77e:	7f 01       	movw	r14, r30
unsigned short i; // Scheduler for-loop iterator
while(1) {
	// Scheduler code
	for ( i = 0; i < numTasks; i++ ) {
		// Task is ready to tick
		if ( tasks[i]->elapsedTime == tasks[i]->period ) {
 780:	d7 01       	movw	r26, r14
 782:	0d 91       	ld	r16, X+
 784:	1d 91       	ld	r17, X+
 786:	7d 01       	movw	r14, r26
 788:	f8 01       	movw	r30, r16
 78a:	45 81       	ldd	r20, Z+5	; 0x05
 78c:	56 81       	ldd	r21, Z+6	; 0x06
 78e:	67 81       	ldd	r22, Z+7	; 0x07
 790:	70 85       	ldd	r23, Z+8	; 0x08
 792:	81 81       	ldd	r24, Z+1	; 0x01
 794:	92 81       	ldd	r25, Z+2	; 0x02
 796:	a3 81       	ldd	r26, Z+3	; 0x03
 798:	b4 81       	ldd	r27, Z+4	; 0x04
 79a:	48 17       	cp	r20, r24
 79c:	59 07       	cpc	r21, r25
 79e:	6a 07       	cpc	r22, r26
 7a0:	7b 07       	cpc	r23, r27
 7a2:	79 f4       	brne	.+30     	; 0x7c2 <main+0x1c8>
			// Setting next state for task
			tasks[i]->state = tasks[i]->TickFct(tasks[i]->state);
 7a4:	80 81       	ld	r24, Z
 7a6:	01 84       	ldd	r0, Z+9	; 0x09
 7a8:	f2 85       	ldd	r31, Z+10	; 0x0a
 7aa:	e0 2d       	mov	r30, r0
 7ac:	08 2e       	mov	r0, r24
 7ae:	00 0c       	add	r0, r0
 7b0:	99 0b       	sbc	r25, r25
 7b2:	09 95       	icall
 7b4:	d8 01       	movw	r26, r16
 7b6:	8c 93       	st	X, r24
			// Reset the elapsed time for next tick.
			tasks[i]->elapsedTime = 0;
 7b8:	f8 01       	movw	r30, r16
 7ba:	15 82       	std	Z+5, r1	; 0x05
 7bc:	16 82       	std	Z+6, r1	; 0x06
 7be:	17 82       	std	Z+7, r1	; 0x07
 7c0:	10 86       	std	Z+8, r1	; 0x08
		}
		tasks[i]->elapsedTime += 1;
 7c2:	f8 01       	movw	r30, r16
 7c4:	85 81       	ldd	r24, Z+5	; 0x05
 7c6:	96 81       	ldd	r25, Z+6	; 0x06
 7c8:	a7 81       	ldd	r26, Z+7	; 0x07
 7ca:	b0 85       	ldd	r27, Z+8	; 0x08
 7cc:	01 96       	adiw	r24, 0x01	; 1
 7ce:	a1 1d       	adc	r26, r1
 7d0:	b1 1d       	adc	r27, r1
 7d2:	85 83       	std	Z+5, r24	; 0x05
 7d4:	96 83       	std	Z+6, r25	; 0x06
 7d6:	a7 83       	std	Z+7, r26	; 0x07
 7d8:	b0 87       	std	Z+8, r27	; 0x08
// terrainSetup(terrain);

unsigned short i; // Scheduler for-loop iterator
while(1) {
	// Scheduler code
	for ( i = 0; i < numTasks; i++ ) {
 7da:	ec 14       	cp	r14, r12
 7dc:	fd 04       	cpc	r15, r13
 7de:	81 f6       	brne	.-96     	; 0x780 <main+0x186>
			// Reset the elapsed time for next tick.
			tasks[i]->elapsedTime = 0;
		}
		tasks[i]->elapsedTime += 1;
	}
	while(!TimerFlag);
 7e0:	80 91 df 01 	lds	r24, 0x01DF	; 0x8001df <TimerFlag>
 7e4:	88 23       	and	r24, r24
 7e6:	e1 f3       	breq	.-8      	; 0x7e0 <main+0x1e6>
	TimerFlag = 0;
 7e8:	10 92 df 01 	sts	0x01DF, r1	; 0x8001df <TimerFlag>
}
 7ec:	c6 cf       	rjmp	.-116    	; 0x77a <main+0x180>

000007ee <__udivmodsi4>:
 7ee:	a1 e2       	ldi	r26, 0x21	; 33
 7f0:	1a 2e       	mov	r1, r26
 7f2:	aa 1b       	sub	r26, r26
 7f4:	bb 1b       	sub	r27, r27
 7f6:	fd 01       	movw	r30, r26
 7f8:	0d c0       	rjmp	.+26     	; 0x814 <__udivmodsi4_ep>

000007fa <__udivmodsi4_loop>:
 7fa:	aa 1f       	adc	r26, r26
 7fc:	bb 1f       	adc	r27, r27
 7fe:	ee 1f       	adc	r30, r30
 800:	ff 1f       	adc	r31, r31
 802:	a2 17       	cp	r26, r18
 804:	b3 07       	cpc	r27, r19
 806:	e4 07       	cpc	r30, r20
 808:	f5 07       	cpc	r31, r21
 80a:	20 f0       	brcs	.+8      	; 0x814 <__udivmodsi4_ep>
 80c:	a2 1b       	sub	r26, r18
 80e:	b3 0b       	sbc	r27, r19
 810:	e4 0b       	sbc	r30, r20
 812:	f5 0b       	sbc	r31, r21

00000814 <__udivmodsi4_ep>:
 814:	66 1f       	adc	r22, r22
 816:	77 1f       	adc	r23, r23
 818:	88 1f       	adc	r24, r24
 81a:	99 1f       	adc	r25, r25
 81c:	1a 94       	dec	r1
 81e:	69 f7       	brne	.-38     	; 0x7fa <__udivmodsi4_loop>
 820:	60 95       	com	r22
 822:	70 95       	com	r23
 824:	80 95       	com	r24
 826:	90 95       	com	r25
 828:	9b 01       	movw	r18, r22
 82a:	ac 01       	movw	r20, r24
 82c:	bd 01       	movw	r22, r26
 82e:	cf 01       	movw	r24, r30
 830:	08 95       	ret

00000832 <_exit>:
 832:	f8 94       	cli

00000834 <__stop_program>:
 834:	ff cf       	rjmp	.-2      	; 0x834 <__stop_program>
