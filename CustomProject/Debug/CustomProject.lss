
CustomProject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000d2  00800100  0000106c  00001100  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000106c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000006d  008001d2  008001d2  000011d2  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000011d2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001204  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000158  00000000  00000000  00001244  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001cc2  00000000  00000000  0000139c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b07  00000000  00000000  0000305e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001036  00000000  00000000  00003b65  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003a4  00000000  00000000  00004b9c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000b60  00000000  00000000  00004f40  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000015bf  00000000  00000000  00005aa0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001f0  00000000  00000000  0000705f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	4f c0       	rjmp	.+158    	; 0xa0 <__ctors_end>
       2:	00 00       	nop
       4:	6a c0       	rjmp	.+212    	; 0xda <__bad_interrupt>
       6:	00 00       	nop
       8:	68 c0       	rjmp	.+208    	; 0xda <__bad_interrupt>
       a:	00 00       	nop
       c:	66 c0       	rjmp	.+204    	; 0xda <__bad_interrupt>
       e:	00 00       	nop
      10:	64 c0       	rjmp	.+200    	; 0xda <__bad_interrupt>
      12:	00 00       	nop
      14:	62 c0       	rjmp	.+196    	; 0xda <__bad_interrupt>
      16:	00 00       	nop
      18:	60 c0       	rjmp	.+192    	; 0xda <__bad_interrupt>
      1a:	00 00       	nop
      1c:	5e c0       	rjmp	.+188    	; 0xda <__bad_interrupt>
      1e:	00 00       	nop
      20:	5c c0       	rjmp	.+184    	; 0xda <__bad_interrupt>
      22:	00 00       	nop
      24:	5a c0       	rjmp	.+180    	; 0xda <__bad_interrupt>
      26:	00 00       	nop
      28:	58 c0       	rjmp	.+176    	; 0xda <__bad_interrupt>
      2a:	00 00       	nop
      2c:	56 c0       	rjmp	.+172    	; 0xda <__bad_interrupt>
      2e:	00 00       	nop
      30:	54 c0       	rjmp	.+168    	; 0xda <__bad_interrupt>
      32:	00 00       	nop
      34:	8c c1       	rjmp	.+792    	; 0x34e <__vector_13>
      36:	00 00       	nop
      38:	50 c0       	rjmp	.+160    	; 0xda <__bad_interrupt>
      3a:	00 00       	nop
      3c:	4e c0       	rjmp	.+156    	; 0xda <__bad_interrupt>
      3e:	00 00       	nop
      40:	4c c0       	rjmp	.+152    	; 0xda <__bad_interrupt>
      42:	00 00       	nop
      44:	4a c0       	rjmp	.+148    	; 0xda <__bad_interrupt>
      46:	00 00       	nop
      48:	48 c0       	rjmp	.+144    	; 0xda <__bad_interrupt>
      4a:	00 00       	nop
      4c:	46 c0       	rjmp	.+140    	; 0xda <__bad_interrupt>
      4e:	00 00       	nop
      50:	44 c0       	rjmp	.+136    	; 0xda <__bad_interrupt>
      52:	00 00       	nop
      54:	42 c0       	rjmp	.+132    	; 0xda <__bad_interrupt>
      56:	00 00       	nop
      58:	40 c0       	rjmp	.+128    	; 0xda <__bad_interrupt>
      5a:	00 00       	nop
      5c:	3e c0       	rjmp	.+124    	; 0xda <__bad_interrupt>
      5e:	00 00       	nop
      60:	3c c0       	rjmp	.+120    	; 0xda <__bad_interrupt>
      62:	00 00       	nop
      64:	3a c0       	rjmp	.+116    	; 0xda <__bad_interrupt>
      66:	00 00       	nop
      68:	38 c0       	rjmp	.+112    	; 0xda <__bad_interrupt>
      6a:	00 00       	nop
      6c:	36 c0       	rjmp	.+108    	; 0xda <__bad_interrupt>
      6e:	00 00       	nop
      70:	34 c0       	rjmp	.+104    	; 0xda <__bad_interrupt>
      72:	00 00       	nop
      74:	32 c0       	rjmp	.+100    	; 0xda <__bad_interrupt>
      76:	00 00       	nop
      78:	30 c0       	rjmp	.+96     	; 0xda <__bad_interrupt>
      7a:	00 00       	nop
      7c:	2e c0       	rjmp	.+92     	; 0xda <__bad_interrupt>
      7e:	00 00       	nop
      80:	2c c0       	rjmp	.+88     	; 0xda <__bad_interrupt>
      82:	00 00       	nop
      84:	2a c0       	rjmp	.+84     	; 0xda <__bad_interrupt>
      86:	00 00       	nop
      88:	28 c0       	rjmp	.+80     	; 0xda <__bad_interrupt>
      8a:	00 00       	nop
      8c:	74 04       	cpc	r7, r4
      8e:	78 04       	cpc	r7, r8
      90:	7c 04       	cpc	r7, r12
      92:	80 04       	cpc	r8, r0
      94:	84 04       	cpc	r8, r4
      96:	88 04       	cpc	r8, r8
      98:	8c 04       	cpc	r8, r12
      9a:	90 04       	cpc	r9, r0
      9c:	94 04       	cpc	r9, r4
      9e:	98 04       	cpc	r9, r8

000000a0 <__ctors_end>:
      a0:	11 24       	eor	r1, r1
      a2:	1f be       	out	0x3f, r1	; 63
      a4:	cf ef       	ldi	r28, 0xFF	; 255
      a6:	d0 e4       	ldi	r29, 0x40	; 64
      a8:	de bf       	out	0x3e, r29	; 62
      aa:	cd bf       	out	0x3d, r28	; 61

000000ac <__do_copy_data>:
      ac:	11 e0       	ldi	r17, 0x01	; 1
      ae:	a0 e0       	ldi	r26, 0x00	; 0
      b0:	b1 e0       	ldi	r27, 0x01	; 1
      b2:	ec e6       	ldi	r30, 0x6C	; 108
      b4:	f0 e1       	ldi	r31, 0x10	; 16
      b6:	00 e0       	ldi	r16, 0x00	; 0
      b8:	0b bf       	out	0x3b, r16	; 59
      ba:	02 c0       	rjmp	.+4      	; 0xc0 <__do_copy_data+0x14>
      bc:	07 90       	elpm	r0, Z+
      be:	0d 92       	st	X+, r0
      c0:	a2 3d       	cpi	r26, 0xD2	; 210
      c2:	b1 07       	cpc	r27, r17
      c4:	d9 f7       	brne	.-10     	; 0xbc <__do_copy_data+0x10>

000000c6 <__do_clear_bss>:
      c6:	22 e0       	ldi	r18, 0x02	; 2
      c8:	a2 ed       	ldi	r26, 0xD2	; 210
      ca:	b1 e0       	ldi	r27, 0x01	; 1
      cc:	01 c0       	rjmp	.+2      	; 0xd0 <.do_clear_bss_start>

000000ce <.do_clear_bss_loop>:
      ce:	1d 92       	st	X+, r1

000000d0 <.do_clear_bss_start>:
      d0:	af 33       	cpi	r26, 0x3F	; 63
      d2:	b2 07       	cpc	r27, r18
      d4:	e1 f7       	brne	.-8      	; 0xce <.do_clear_bss_loop>
      d6:	4a d5       	rcall	.+2708   	; 0xb6c <main>
      d8:	c7 c7       	rjmp	.+3982   	; 0x1068 <_exit>

000000da <__bad_interrupt>:
      da:	92 cf       	rjmp	.-220    	; 0x0 <__vectors>

000000dc <time>:
      dc:	fc 01       	movw	r30, r24
      de:	0f b6       	in	r0, 0x3f	; 63
      e0:	f8 94       	cli
      e2:	60 91 3b 02 	lds	r22, 0x023B	; 0x80023b <__system_time>
      e6:	70 91 3c 02 	lds	r23, 0x023C	; 0x80023c <__system_time+0x1>
      ea:	80 91 3d 02 	lds	r24, 0x023D	; 0x80023d <__system_time+0x2>
      ee:	90 91 3e 02 	lds	r25, 0x023E	; 0x80023e <__system_time+0x3>
      f2:	0f be       	out	0x3f, r0	; 63
      f4:	30 97       	sbiw	r30, 0x00	; 0
      f6:	21 f0       	breq	.+8      	; 0x100 <time+0x24>
      f8:	60 83       	st	Z, r22
      fa:	71 83       	std	Z+1, r23	; 0x01
      fc:	82 83       	std	Z+2, r24	; 0x02
      fe:	93 83       	std	Z+3, r25	; 0x03
     100:	08 95       	ret

00000102 <game_start_tick>:
		if(c==0){return b;}
		a = b;
		b = c;
	}
	return 0;
}
     102:	20 91 34 02 	lds	r18, 0x0234	; 0x800234 <gameOverFlag>
     106:	21 30       	cpi	r18, 0x01	; 1
     108:	a9 f0       	breq	.+42     	; 0x134 <game_start_tick+0x32>
     10a:	81 30       	cpi	r24, 0x01	; 1
     10c:	91 05       	cpc	r25, r1
     10e:	69 f0       	breq	.+26     	; 0x12a <game_start_tick+0x28>
     110:	82 30       	cpi	r24, 0x02	; 2
     112:	91 05       	cpc	r25, r1
     114:	79 f0       	breq	.+30     	; 0x134 <game_start_tick+0x32>
     116:	00 97       	sbiw	r24, 0x00	; 0
     118:	a1 f4       	brne	.+40     	; 0x142 <game_start_tick+0x40>
     11a:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <key>
     11e:	81 34       	cpi	r24, 0x41	; 65
     120:	c1 f4       	brne	.+48     	; 0x152 <game_start_tick+0x50>
     122:	85 e0       	ldi	r24, 0x05	; 5
     124:	80 93 32 02 	sts	0x0232, r24	; 0x800232 <lives>
     128:	19 c0       	rjmp	.+50     	; 0x15c <game_start_tick+0x5a>
     12a:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <key>
     12e:	84 34       	cpi	r24, 0x44	; 68
     130:	a9 f4       	brne	.+42     	; 0x15c <game_start_tick+0x5a>
     132:	0f c0       	rjmp	.+30     	; 0x152 <game_start_tick+0x50>
     134:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <key>
     138:	83 34       	cpi	r24, 0x43	; 67
     13a:	b1 f4       	brne	.+44     	; 0x168 <game_start_tick+0x66>
     13c:	10 92 34 02 	sts	0x0234, r1	; 0x800234 <gameOverFlag>
     140:	08 c0       	rjmp	.+16     	; 0x152 <game_start_tick+0x50>
     142:	81 30       	cpi	r24, 0x01	; 1
     144:	91 05       	cpc	r25, r1
     146:	51 f0       	breq	.+20     	; 0x15c <game_start_tick+0x5a>
     148:	82 30       	cpi	r24, 0x02	; 2
     14a:	91 05       	cpc	r25, r1
     14c:	69 f0       	breq	.+26     	; 0x168 <game_start_tick+0x66>
     14e:	00 97       	sbiw	r24, 0x00	; 0
     150:	79 f4       	brne	.+30     	; 0x170 <game_start_tick+0x6e>
     152:	10 92 35 02 	sts	0x0235, r1	; 0x800235 <playFlag>
     156:	80 e0       	ldi	r24, 0x00	; 0
     158:	90 e0       	ldi	r25, 0x00	; 0
     15a:	08 95       	ret
     15c:	81 e0       	ldi	r24, 0x01	; 1
     15e:	80 93 35 02 	sts	0x0235, r24	; 0x800235 <playFlag>
     162:	81 e0       	ldi	r24, 0x01	; 1
     164:	90 e0       	ldi	r25, 0x00	; 0
     166:	08 95       	ret
     168:	10 92 35 02 	sts	0x0235, r1	; 0x800235 <playFlag>
     16c:	82 e0       	ldi	r24, 0x02	; 2
     16e:	90 e0       	ldi	r25, 0x00	; 0
     170:	08 95       	ret

00000172 <terrain_tick>:
     172:	00 97       	sbiw	r24, 0x00	; 0
     174:	21 f0       	breq	.+8      	; 0x17e <terrain_tick+0xc>
     176:	81 30       	cpi	r24, 0x01	; 1
     178:	91 05       	cpc	r25, r1
     17a:	31 f0       	breq	.+12     	; 0x188 <terrain_tick+0x16>
     17c:	0a c0       	rjmp	.+20     	; 0x192 <terrain_tick+0x20>
     17e:	80 91 35 02 	lds	r24, 0x0235	; 0x800235 <playFlag>
     182:	81 30       	cpi	r24, 0x01	; 1
     184:	61 f4       	brne	.+24     	; 0x19e <terrain_tick+0x2c>
     186:	10 c0       	rjmp	.+32     	; 0x1a8 <terrain_tick+0x36>
     188:	80 91 35 02 	lds	r24, 0x0235	; 0x800235 <playFlag>
     18c:	88 23       	and	r24, r24
     18e:	39 f0       	breq	.+14     	; 0x19e <terrain_tick+0x2c>
     190:	0b c0       	rjmp	.+22     	; 0x1a8 <terrain_tick+0x36>
     192:	00 97       	sbiw	r24, 0x00	; 0
     194:	21 f0       	breq	.+8      	; 0x19e <terrain_tick+0x2c>
     196:	81 30       	cpi	r24, 0x01	; 1
     198:	91 05       	cpc	r25, r1
     19a:	69 f4       	brne	.+26     	; 0x1b6 <terrain_tick+0x44>
     19c:	05 c0       	rjmp	.+10     	; 0x1a8 <terrain_tick+0x36>
     19e:	10 92 31 02 	sts	0x0231, r1	; 0x800231 <terrainShift>
     1a2:	80 e0       	ldi	r24, 0x00	; 0
     1a4:	90 e0       	ldi	r25, 0x00	; 0
     1a6:	08 95       	ret
     1a8:	80 91 31 02 	lds	r24, 0x0231	; 0x800231 <terrainShift>
     1ac:	8f 5f       	subi	r24, 0xFF	; 255
     1ae:	80 93 31 02 	sts	0x0231, r24	; 0x800231 <terrainShift>
     1b2:	81 e0       	ldi	r24, 0x01	; 1
     1b4:	90 e0       	ldi	r25, 0x00	; 0
     1b6:	08 95       	ret

000001b8 <collision_tick>:
     1b8:	ef 92       	push	r14
     1ba:	ff 92       	push	r15
     1bc:	0f 93       	push	r16
     1be:	1f 93       	push	r17
     1c0:	cf 93       	push	r28
     1c2:	df 93       	push	r29
     1c4:	00 97       	sbiw	r24, 0x00	; 0
     1c6:	21 f0       	breq	.+8      	; 0x1d0 <collision_tick+0x18>
     1c8:	81 30       	cpi	r24, 0x01	; 1
     1ca:	91 05       	cpc	r25, r1
     1cc:	49 f0       	breq	.+18     	; 0x1e0 <collision_tick+0x28>
     1ce:	0e c0       	rjmp	.+28     	; 0x1ec <collision_tick+0x34>
     1d0:	20 91 35 02 	lds	r18, 0x0235	; 0x800235 <playFlag>
     1d4:	21 30       	cpi	r18, 0x01	; 1
     1d6:	09 f0       	breq	.+2      	; 0x1da <collision_tick+0x22>
     1d8:	7e c0       	rjmp	.+252    	; 0x2d6 <collision_tick+0x11e>
     1da:	10 92 33 02 	sts	0x0233, r1	; 0x800233 <score>
     1de:	0a c0       	rjmp	.+20     	; 0x1f4 <collision_tick+0x3c>
     1e0:	80 91 35 02 	lds	r24, 0x0235	; 0x800235 <playFlag>
     1e4:	88 23       	and	r24, r24
     1e6:	09 f4       	brne	.+2      	; 0x1ea <collision_tick+0x32>
     1e8:	74 c0       	rjmp	.+232    	; 0x2d2 <collision_tick+0x11a>
     1ea:	04 c0       	rjmp	.+8      	; 0x1f4 <collision_tick+0x3c>
     1ec:	81 30       	cpi	r24, 0x01	; 1
     1ee:	91 05       	cpc	r25, r1
     1f0:	09 f0       	breq	.+2      	; 0x1f4 <collision_tick+0x3c>
     1f2:	71 c0       	rjmp	.+226    	; 0x2d6 <collision_tick+0x11e>
     1f4:	60 91 33 02 	lds	r22, 0x0233	; 0x800233 <score>
     1f8:	af e3       	ldi	r26, 0x3F	; 63
     1fa:	b1 e0       	ldi	r27, 0x01	; 1
     1fc:	04 e4       	ldi	r16, 0x44	; 68
     1fe:	11 e0       	ldi	r17, 0x01	; 1
     200:	4f e3       	ldi	r20, 0x3F	; 63
     202:	51 e0       	ldi	r21, 0x01	; 1
     204:	7f ef       	ldi	r23, 0xFF	; 255
     206:	7d 01       	movw	r14, r26
     208:	8c 91       	ld	r24, X
     20a:	8f 3f       	cpi	r24, 0xFF	; 255
     20c:	81 f0       	breq	.+32     	; 0x22e <collision_tick+0x76>
     20e:	ec e3       	ldi	r30, 0x3C	; 60
     210:	f1 e0       	ldi	r31, 0x01	; 1
     212:	80 81       	ld	r24, Z
     214:	8f 3f       	cpi	r24, 0xFF	; 255
     216:	39 f0       	breq	.+14     	; 0x226 <collision_tick+0x6e>
     218:	e7 01       	movw	r28, r14
     21a:	98 81       	ld	r25, Y
     21c:	89 13       	cpse	r24, r25
     21e:	03 c0       	rjmp	.+6      	; 0x226 <collision_tick+0x6e>
     220:	6f 5f       	subi	r22, 0xFF	; 255
     222:	78 83       	st	Y, r23
     224:	70 83       	st	Z, r23
     226:	31 96       	adiw	r30, 0x01	; 1
     228:	4e 17       	cp	r20, r30
     22a:	5f 07       	cpc	r21, r31
     22c:	91 f7       	brne	.-28     	; 0x212 <collision_tick+0x5a>
     22e:	11 96       	adiw	r26, 0x01	; 1
     230:	a0 17       	cp	r26, r16
     232:	b1 07       	cpc	r27, r17
     234:	41 f7       	brne	.-48     	; 0x206 <collision_tick+0x4e>
     236:	60 93 33 02 	sts	0x0233, r22	; 0x800233 <score>
     23a:	40 91 31 02 	lds	r20, 0x0231	; 0x800231 <terrainShift>
     23e:	60 91 30 02 	lds	r22, 0x0230	; 0x800230 <player_one_location>
     242:	70 91 2b 02 	lds	r23, 0x022B	; 0x80022b <terrainCollisionCounter.2557>
     246:	b0 91 34 02 	lds	r27, 0x0234	; 0x800234 <gameOverFlag>
     24a:	a0 91 32 02 	lds	r26, 0x0232	; 0x800232 <lives>
     24e:	80 e1       	ldi	r24, 0x10	; 16
     250:	20 e0       	ldi	r18, 0x00	; 0
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	50 e0       	ldi	r21, 0x00	; 0
     256:	c1 e0       	ldi	r28, 0x01	; 1
     258:	fa 01       	movw	r30, r20
     25a:	e2 0f       	add	r30, r18
     25c:	f3 1f       	adc	r31, r19
     25e:	ef 71       	andi	r30, 0x1F	; 31
     260:	ff 27       	eor	r31, r31
     262:	ef 54       	subi	r30, 0x4F	; 79
     264:	fe 4f       	sbci	r31, 0xFE	; 254
     266:	90 81       	ld	r25, Z
     268:	90 32       	cpi	r25, 0x20	; 32
     26a:	61 f0       	breq	.+24     	; 0x284 <collision_tick+0xcc>
     26c:	68 13       	cpse	r22, r24
     26e:	0a c0       	rjmp	.+20     	; 0x284 <collision_tick+0xcc>
     270:	7f 5f       	subi	r23, 0xFF	; 255
     272:	72 30       	cpi	r23, 0x02	; 2
     274:	20 f4       	brcc	.+8      	; 0x27e <collision_tick+0xc6>
     276:	a2 30       	cpi	r26, 0x02	; 2
     278:	20 f0       	brcs	.+8      	; 0x282 <collision_tick+0xca>
     27a:	a1 50       	subi	r26, 0x01	; 1
     27c:	03 c0       	rjmp	.+6      	; 0x284 <collision_tick+0xcc>
     27e:	70 e0       	ldi	r23, 0x00	; 0
     280:	01 c0       	rjmp	.+2      	; 0x284 <collision_tick+0xcc>
     282:	bc 2f       	mov	r27, r28
     284:	2f 5f       	subi	r18, 0xFF	; 255
     286:	3f 4f       	sbci	r19, 0xFF	; 255
     288:	8f 5f       	subi	r24, 0xFF	; 255
     28a:	80 32       	cpi	r24, 0x20	; 32
     28c:	29 f7       	brne	.-54     	; 0x258 <collision_tick+0xa0>
     28e:	70 93 2b 02 	sts	0x022B, r23	; 0x80022b <terrainCollisionCounter.2557>
     292:	90 91 2a 02 	lds	r25, 0x022A	; 0x80022a <enemyCollisionCounter.2564>
     296:	ec e3       	ldi	r30, 0x3C	; 60
     298:	f1 e0       	ldi	r31, 0x01	; 1
     29a:	2f e3       	ldi	r18, 0x3F	; 63
     29c:	31 e0       	ldi	r19, 0x01	; 1
     29e:	40 e0       	ldi	r20, 0x00	; 0
     2a0:	51 e0       	ldi	r21, 0x01	; 1
     2a2:	81 91       	ld	r24, Z+
     2a4:	68 13       	cpse	r22, r24
     2a6:	09 c0       	rjmp	.+18     	; 0x2ba <collision_tick+0x102>
     2a8:	92 30       	cpi	r25, 0x02	; 2
     2aa:	20 f4       	brcc	.+8      	; 0x2b4 <collision_tick+0xfc>
     2ac:	a2 30       	cpi	r26, 0x02	; 2
     2ae:	20 f0       	brcs	.+8      	; 0x2b8 <collision_tick+0x100>
     2b0:	a1 50       	subi	r26, 0x01	; 1
     2b2:	03 c0       	rjmp	.+6      	; 0x2ba <collision_tick+0x102>
     2b4:	94 2f       	mov	r25, r20
     2b6:	01 c0       	rjmp	.+2      	; 0x2ba <collision_tick+0x102>
     2b8:	b5 2f       	mov	r27, r21
     2ba:	e2 17       	cp	r30, r18
     2bc:	f3 07       	cpc	r31, r19
     2be:	89 f7       	brne	.-30     	; 0x2a2 <collision_tick+0xea>
     2c0:	90 93 2a 02 	sts	0x022A, r25	; 0x80022a <enemyCollisionCounter.2564>
     2c4:	b0 93 34 02 	sts	0x0234, r27	; 0x800234 <gameOverFlag>
     2c8:	a0 93 32 02 	sts	0x0232, r26	; 0x800232 <lives>
     2cc:	81 e0       	ldi	r24, 0x01	; 1
     2ce:	90 e0       	ldi	r25, 0x00	; 0
     2d0:	02 c0       	rjmp	.+4      	; 0x2d6 <collision_tick+0x11e>
     2d2:	80 e0       	ldi	r24, 0x00	; 0
     2d4:	90 e0       	ldi	r25, 0x00	; 0
     2d6:	df 91       	pop	r29
     2d8:	cf 91       	pop	r28
     2da:	1f 91       	pop	r17
     2dc:	0f 91       	pop	r16
     2de:	ff 90       	pop	r15
     2e0:	ef 90       	pop	r14
     2e2:	08 95       	ret

000002e4 <TimerSet>:
     2e4:	60 93 45 01 	sts	0x0145, r22	; 0x800145 <_avr_timer_M>
     2e8:	70 93 46 01 	sts	0x0146, r23	; 0x800146 <_avr_timer_M+0x1>
     2ec:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <_avr_timer_M+0x2>
     2f0:	90 93 48 01 	sts	0x0148, r25	; 0x800148 <_avr_timer_M+0x3>
     2f4:	60 93 36 02 	sts	0x0236, r22	; 0x800236 <_avr_timer_cntcurr>
     2f8:	70 93 37 02 	sts	0x0237, r23	; 0x800237 <_avr_timer_cntcurr+0x1>
     2fc:	80 93 38 02 	sts	0x0238, r24	; 0x800238 <_avr_timer_cntcurr+0x2>
     300:	90 93 39 02 	sts	0x0239, r25	; 0x800239 <_avr_timer_cntcurr+0x3>
     304:	08 95       	ret

00000306 <TimerOn>:
     306:	8b e0       	ldi	r24, 0x0B	; 11
     308:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     30c:	8d e7       	ldi	r24, 0x7D	; 125
     30e:	90 e0       	ldi	r25, 0x00	; 0
     310:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     314:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     318:	82 e0       	ldi	r24, 0x02	; 2
     31a:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
     31e:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     322:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     326:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <_avr_timer_M>
     32a:	90 91 46 01 	lds	r25, 0x0146	; 0x800146 <_avr_timer_M+0x1>
     32e:	a0 91 47 01 	lds	r26, 0x0147	; 0x800147 <_avr_timer_M+0x2>
     332:	b0 91 48 01 	lds	r27, 0x0148	; 0x800148 <_avr_timer_M+0x3>
     336:	80 93 36 02 	sts	0x0236, r24	; 0x800236 <_avr_timer_cntcurr>
     33a:	90 93 37 02 	sts	0x0237, r25	; 0x800237 <_avr_timer_cntcurr+0x1>
     33e:	a0 93 38 02 	sts	0x0238, r26	; 0x800238 <_avr_timer_cntcurr+0x2>
     342:	b0 93 39 02 	sts	0x0239, r27	; 0x800239 <_avr_timer_cntcurr+0x3>
     346:	8f b7       	in	r24, 0x3f	; 63
     348:	80 68       	ori	r24, 0x80	; 128
     34a:	8f bf       	out	0x3f, r24	; 63
     34c:	08 95       	ret

0000034e <__vector_13>:
     34e:	1f 92       	push	r1
     350:	0f 92       	push	r0
     352:	0f b6       	in	r0, 0x3f	; 63
     354:	0f 92       	push	r0
     356:	11 24       	eor	r1, r1
     358:	8f 93       	push	r24
     35a:	9f 93       	push	r25
     35c:	af 93       	push	r26
     35e:	bf 93       	push	r27
     360:	80 91 36 02 	lds	r24, 0x0236	; 0x800236 <_avr_timer_cntcurr>
     364:	90 91 37 02 	lds	r25, 0x0237	; 0x800237 <_avr_timer_cntcurr+0x1>
     368:	a0 91 38 02 	lds	r26, 0x0238	; 0x800238 <_avr_timer_cntcurr+0x2>
     36c:	b0 91 39 02 	lds	r27, 0x0239	; 0x800239 <_avr_timer_cntcurr+0x3>
     370:	01 97       	sbiw	r24, 0x01	; 1
     372:	a1 09       	sbc	r26, r1
     374:	b1 09       	sbc	r27, r1
     376:	80 93 36 02 	sts	0x0236, r24	; 0x800236 <_avr_timer_cntcurr>
     37a:	90 93 37 02 	sts	0x0237, r25	; 0x800237 <_avr_timer_cntcurr+0x1>
     37e:	a0 93 38 02 	sts	0x0238, r26	; 0x800238 <_avr_timer_cntcurr+0x2>
     382:	b0 93 39 02 	sts	0x0239, r27	; 0x800239 <_avr_timer_cntcurr+0x3>
     386:	89 2b       	or	r24, r25
     388:	8a 2b       	or	r24, r26
     38a:	8b 2b       	or	r24, r27
     38c:	99 f4       	brne	.+38     	; 0x3b4 <__vector_13+0x66>
     38e:	81 e0       	ldi	r24, 0x01	; 1
     390:	80 93 3a 02 	sts	0x023A, r24	; 0x80023a <TimerFlag>
     394:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <_avr_timer_M>
     398:	90 91 46 01 	lds	r25, 0x0146	; 0x800146 <_avr_timer_M+0x1>
     39c:	a0 91 47 01 	lds	r26, 0x0147	; 0x800147 <_avr_timer_M+0x2>
     3a0:	b0 91 48 01 	lds	r27, 0x0148	; 0x800148 <_avr_timer_M+0x3>
     3a4:	80 93 36 02 	sts	0x0236, r24	; 0x800236 <_avr_timer_cntcurr>
     3a8:	90 93 37 02 	sts	0x0237, r25	; 0x800237 <_avr_timer_cntcurr+0x1>
     3ac:	a0 93 38 02 	sts	0x0238, r26	; 0x800238 <_avr_timer_cntcurr+0x2>
     3b0:	b0 93 39 02 	sts	0x0239, r27	; 0x800239 <_avr_timer_cntcurr+0x3>
     3b4:	bf 91       	pop	r27
     3b6:	af 91       	pop	r26
     3b8:	9f 91       	pop	r25
     3ba:	8f 91       	pop	r24
     3bc:	0f 90       	pop	r0
     3be:	0f be       	out	0x3f, r0	; 63
     3c0:	0f 90       	pop	r0
     3c2:	1f 90       	pop	r1
     3c4:	18 95       	reti

000003c6 <delay_ms>:
     3c6:	18 16       	cp	r1, r24
     3c8:	19 06       	cpc	r1, r25
     3ca:	5c f0       	brlt	.+22     	; 0x3e2 <delay_ms+0x1c>
     3cc:	08 95       	ret
     3ce:	00 00       	nop
     3d0:	21 50       	subi	r18, 0x01	; 1
     3d2:	31 09       	sbc	r19, r1
     3d4:	e1 f7       	brne	.-8      	; 0x3ce <delay_ms+0x8>
     3d6:	4f 5f       	subi	r20, 0xFF	; 255
     3d8:	5f 4f       	sbci	r21, 0xFF	; 255
     3da:	84 17       	cp	r24, r20
     3dc:	95 07       	cpc	r25, r21
     3de:	19 f4       	brne	.+6      	; 0x3e6 <delay_ms+0x20>
     3e0:	08 95       	ret
     3e2:	40 e0       	ldi	r20, 0x00	; 0
     3e4:	50 e0       	ldi	r21, 0x00	; 0
     3e6:	27 e0       	ldi	r18, 0x07	; 7
     3e8:	33 e0       	ldi	r19, 0x03	; 3
     3ea:	f1 cf       	rjmp	.-30     	; 0x3ce <delay_ms+0x8>

000003ec <LCD_WriteCommand>:
     3ec:	10 98       	cbi	0x02, 0	; 2
     3ee:	8b b9       	out	0x0b, r24	; 11
     3f0:	11 9a       	sbi	0x02, 1	; 2
     3f2:	00 00       	nop
     3f4:	11 98       	cbi	0x02, 1	; 2
     3f6:	82 e0       	ldi	r24, 0x02	; 2
     3f8:	90 e0       	ldi	r25, 0x00	; 0
     3fa:	e5 cf       	rjmp	.-54     	; 0x3c6 <delay_ms>
     3fc:	08 95       	ret

000003fe <LCD_ClearScreen>:
     3fe:	81 e0       	ldi	r24, 0x01	; 1
     400:	f5 cf       	rjmp	.-22     	; 0x3ec <LCD_WriteCommand>
     402:	08 95       	ret

00000404 <LCD_Cursor>:
     404:	81 31       	cpi	r24, 0x11	; 17
     406:	18 f4       	brcc	.+6      	; 0x40e <LCD_Cursor+0xa>
     408:	81 58       	subi	r24, 0x81	; 129
     40a:	f0 cf       	rjmp	.-32     	; 0x3ec <LCD_WriteCommand>
     40c:	08 95       	ret
     40e:	81 55       	subi	r24, 0x51	; 81
     410:	ed cf       	rjmp	.-38     	; 0x3ec <LCD_WriteCommand>
     412:	08 95       	ret

00000414 <LCD_init>:
     414:	84 e6       	ldi	r24, 0x64	; 100
     416:	90 e0       	ldi	r25, 0x00	; 0
     418:	d6 df       	rcall	.-84     	; 0x3c6 <delay_ms>
     41a:	88 e3       	ldi	r24, 0x38	; 56
     41c:	e7 df       	rcall	.-50     	; 0x3ec <LCD_WriteCommand>
     41e:	86 e0       	ldi	r24, 0x06	; 6
     420:	e5 df       	rcall	.-54     	; 0x3ec <LCD_WriteCommand>
     422:	8f e0       	ldi	r24, 0x0F	; 15
     424:	e3 df       	rcall	.-58     	; 0x3ec <LCD_WriteCommand>
     426:	81 e0       	ldi	r24, 0x01	; 1
     428:	e1 df       	rcall	.-62     	; 0x3ec <LCD_WriteCommand>
     42a:	8a e0       	ldi	r24, 0x0A	; 10
     42c:	90 e0       	ldi	r25, 0x00	; 0
     42e:	cb cf       	rjmp	.-106    	; 0x3c6 <delay_ms>
     430:	08 95       	ret

00000432 <LCD_WriteData>:
     432:	10 9a       	sbi	0x02, 0	; 2
     434:	8b b9       	out	0x0b, r24	; 11
     436:	11 9a       	sbi	0x02, 1	; 2
     438:	00 00       	nop
     43a:	11 98       	cbi	0x02, 1	; 2
     43c:	81 e0       	ldi	r24, 0x01	; 1
     43e:	90 e0       	ldi	r25, 0x00	; 0
     440:	c2 cf       	rjmp	.-124    	; 0x3c6 <delay_ms>
     442:	08 95       	ret

00000444 <LCD_DisplayString>:
     444:	0f 93       	push	r16
     446:	1f 93       	push	r17
     448:	cf 93       	push	r28
     44a:	df 93       	push	r29
     44c:	18 2f       	mov	r17, r24
     44e:	eb 01       	movw	r28, r22
     450:	d6 df       	rcall	.-84     	; 0x3fe <LCD_ClearScreen>
     452:	88 81       	ld	r24, Y
     454:	88 23       	and	r24, r24
     456:	51 f0       	breq	.+20     	; 0x46c <LCD_DisplayString+0x28>
     458:	01 e0       	ldi	r16, 0x01	; 1
     45a:	01 0f       	add	r16, r17
     45c:	81 2f       	mov	r24, r17
     45e:	d2 df       	rcall	.-92     	; 0x404 <LCD_Cursor>
     460:	89 91       	ld	r24, Y+
     462:	e7 df       	rcall	.-50     	; 0x432 <LCD_WriteData>
     464:	10 2f       	mov	r17, r16
     466:	88 81       	ld	r24, Y
     468:	81 11       	cpse	r24, r1
     46a:	f6 cf       	rjmp	.-20     	; 0x458 <LCD_DisplayString+0x14>
     46c:	df 91       	pop	r29
     46e:	cf 91       	pop	r28
     470:	1f 91       	pop	r17
     472:	0f 91       	pop	r16
     474:	08 95       	ret

00000476 <GetKeypadKey>:
     476:	8f ee       	ldi	r24, 0xEF	; 239
     478:	88 b9       	out	0x08, r24	; 8
     47a:	00 00       	nop
     47c:	30 9b       	sbis	0x06, 0	; 6
     47e:	29 c0       	rjmp	.+82     	; 0x4d2 <GetKeypadKey+0x5c>
     480:	31 9b       	sbis	0x06, 1	; 6
     482:	29 c0       	rjmp	.+82     	; 0x4d6 <GetKeypadKey+0x60>
     484:	32 9b       	sbis	0x06, 2	; 6
     486:	29 c0       	rjmp	.+82     	; 0x4da <GetKeypadKey+0x64>
     488:	33 9b       	sbis	0x06, 3	; 6
     48a:	29 c0       	rjmp	.+82     	; 0x4de <GetKeypadKey+0x68>
     48c:	8f ed       	ldi	r24, 0xDF	; 223
     48e:	88 b9       	out	0x08, r24	; 8
     490:	00 00       	nop
     492:	30 9b       	sbis	0x06, 0	; 6
     494:	26 c0       	rjmp	.+76     	; 0x4e2 <GetKeypadKey+0x6c>
     496:	31 9b       	sbis	0x06, 1	; 6
     498:	26 c0       	rjmp	.+76     	; 0x4e6 <GetKeypadKey+0x70>
     49a:	32 9b       	sbis	0x06, 2	; 6
     49c:	26 c0       	rjmp	.+76     	; 0x4ea <GetKeypadKey+0x74>
     49e:	33 9b       	sbis	0x06, 3	; 6
     4a0:	26 c0       	rjmp	.+76     	; 0x4ee <GetKeypadKey+0x78>
     4a2:	8f eb       	ldi	r24, 0xBF	; 191
     4a4:	88 b9       	out	0x08, r24	; 8
     4a6:	00 00       	nop
     4a8:	30 9b       	sbis	0x06, 0	; 6
     4aa:	23 c0       	rjmp	.+70     	; 0x4f2 <GetKeypadKey+0x7c>
     4ac:	31 9b       	sbis	0x06, 1	; 6
     4ae:	23 c0       	rjmp	.+70     	; 0x4f6 <GetKeypadKey+0x80>
     4b0:	32 9b       	sbis	0x06, 2	; 6
     4b2:	23 c0       	rjmp	.+70     	; 0x4fa <GetKeypadKey+0x84>
     4b4:	33 9b       	sbis	0x06, 3	; 6
     4b6:	23 c0       	rjmp	.+70     	; 0x4fe <GetKeypadKey+0x88>
     4b8:	8f e7       	ldi	r24, 0x7F	; 127
     4ba:	88 b9       	out	0x08, r24	; 8
     4bc:	00 00       	nop
     4be:	30 9b       	sbis	0x06, 0	; 6
     4c0:	20 c0       	rjmp	.+64     	; 0x502 <GetKeypadKey+0x8c>
     4c2:	31 9b       	sbis	0x06, 1	; 6
     4c4:	20 c0       	rjmp	.+64     	; 0x506 <GetKeypadKey+0x90>
     4c6:	32 9b       	sbis	0x06, 2	; 6
     4c8:	20 c0       	rjmp	.+64     	; 0x50a <GetKeypadKey+0x94>
     4ca:	33 9b       	sbis	0x06, 3	; 6
     4cc:	20 c0       	rjmp	.+64     	; 0x50e <GetKeypadKey+0x98>
     4ce:	80 e0       	ldi	r24, 0x00	; 0
     4d0:	08 95       	ret
     4d2:	80 e2       	ldi	r24, 0x20	; 32
     4d4:	08 95       	ret
     4d6:	84 e3       	ldi	r24, 0x34	; 52
     4d8:	08 95       	ret
     4da:	87 e3       	ldi	r24, 0x37	; 55
     4dc:	08 95       	ret
     4de:	8a e2       	ldi	r24, 0x2A	; 42
     4e0:	08 95       	ret
     4e2:	82 e3       	ldi	r24, 0x32	; 50
     4e4:	08 95       	ret
     4e6:	85 e3       	ldi	r24, 0x35	; 53
     4e8:	08 95       	ret
     4ea:	88 e3       	ldi	r24, 0x38	; 56
     4ec:	08 95       	ret
     4ee:	80 e3       	ldi	r24, 0x30	; 48
     4f0:	08 95       	ret
     4f2:	83 e3       	ldi	r24, 0x33	; 51
     4f4:	08 95       	ret
     4f6:	86 e3       	ldi	r24, 0x36	; 54
     4f8:	08 95       	ret
     4fa:	89 e3       	ldi	r24, 0x39	; 57
     4fc:	08 95       	ret
     4fe:	83 e2       	ldi	r24, 0x23	; 35
     500:	08 95       	ret
     502:	81 e4       	ldi	r24, 0x41	; 65
     504:	08 95       	ret
     506:	82 e4       	ldi	r24, 0x42	; 66
     508:	08 95       	ret
     50a:	83 e4       	ldi	r24, 0x43	; 67
     50c:	08 95       	ret
     50e:	84 e4       	ldi	r24, 0x44	; 68
     510:	08 95       	ret

00000512 <key_tick>:
     512:	cf 93       	push	r28
     514:	df 93       	push	r29
     516:	ec 01       	movw	r28, r24
     518:	ae df       	rcall	.-164    	; 0x476 <GetKeypadKey>
     51a:	80 93 44 01 	sts	0x0144, r24	; 0x800144 <key>
     51e:	ce 01       	movw	r24, r28
     520:	df 91       	pop	r29
     522:	cf 91       	pop	r28
     524:	08 95       	ret

00000526 <moveLeft>:
     526:	98 2f       	mov	r25, r24
     528:	9f 7e       	andi	r25, 0xEF	; 239
     52a:	91 50       	subi	r25, 0x01	; 1
     52c:	9f 30       	cpi	r25, 0x0F	; 15
     52e:	08 f4       	brcc	.+2      	; 0x532 <moveLeft+0xc>
     530:	81 50       	subi	r24, 0x01	; 1
     532:	08 95       	ret

00000534 <moveRight>:
     534:	8f 30       	cpi	r24, 0x0F	; 15
     536:	10 f4       	brcc	.+4      	; 0x53c <moveRight+0x8>
     538:	8f 5f       	subi	r24, 0xFF	; 255
     53a:	08 95       	ret
     53c:	90 ef       	ldi	r25, 0xF0	; 240
     53e:	98 0f       	add	r25, r24
     540:	9f 30       	cpi	r25, 0x0F	; 15
     542:	08 f4       	brcc	.+2      	; 0x546 <moveRight+0x12>
     544:	8f 5f       	subi	r24, 0xFF	; 255
     546:	08 95       	ret

00000548 <player_one_tick>:
     548:	00 97       	sbiw	r24, 0x00	; 0
     54a:	21 f0       	breq	.+8      	; 0x554 <player_one_tick+0xc>
     54c:	81 30       	cpi	r24, 0x01	; 1
     54e:	91 05       	cpc	r25, r1
     550:	31 f0       	breq	.+12     	; 0x55e <player_one_tick+0x16>
     552:	0a c0       	rjmp	.+20     	; 0x568 <player_one_tick+0x20>
     554:	80 91 35 02 	lds	r24, 0x0235	; 0x800235 <playFlag>
     558:	81 30       	cpi	r24, 0x01	; 1
     55a:	61 f4       	brne	.+24     	; 0x574 <player_one_tick+0x2c>
     55c:	10 c0       	rjmp	.+32     	; 0x57e <player_one_tick+0x36>
     55e:	80 91 35 02 	lds	r24, 0x0235	; 0x800235 <playFlag>
     562:	88 23       	and	r24, r24
     564:	39 f0       	breq	.+14     	; 0x574 <player_one_tick+0x2c>
     566:	0b c0       	rjmp	.+22     	; 0x57e <player_one_tick+0x36>
     568:	00 97       	sbiw	r24, 0x00	; 0
     56a:	21 f0       	breq	.+8      	; 0x574 <player_one_tick+0x2c>
     56c:	81 30       	cpi	r24, 0x01	; 1
     56e:	91 05       	cpc	r25, r1
     570:	c1 f5       	brne	.+112    	; 0x5e2 <player_one_tick+0x9a>
     572:	05 c0       	rjmp	.+10     	; 0x57e <player_one_tick+0x36>
     574:	10 92 30 02 	sts	0x0230, r1	; 0x800230 <player_one_location>
     578:	80 e0       	ldi	r24, 0x00	; 0
     57a:	90 e0       	ldi	r25, 0x00	; 0
     57c:	08 95       	ret
     57e:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <key>
     582:	82 33       	cpi	r24, 0x32	; 50
     584:	61 f4       	brne	.+24     	; 0x59e <player_one_tick+0x56>
     586:	90 91 30 02 	lds	r25, 0x0230	; 0x800230 <player_one_location>
     58a:	80 ef       	ldi	r24, 0xF0	; 240
     58c:	89 0f       	add	r24, r25
     58e:	80 31       	cpi	r24, 0x10	; 16
     590:	08 f0       	brcs	.+2      	; 0x594 <player_one_tick+0x4c>
     592:	89 2f       	mov	r24, r25
     594:	80 93 30 02 	sts	0x0230, r24	; 0x800230 <player_one_location>
     598:	81 e0       	ldi	r24, 0x01	; 1
     59a:	90 e0       	ldi	r25, 0x00	; 0
     59c:	08 95       	ret
     59e:	88 33       	cpi	r24, 0x38	; 56
     5a0:	51 f4       	brne	.+20     	; 0x5b6 <player_one_tick+0x6e>
     5a2:	80 91 30 02 	lds	r24, 0x0230	; 0x800230 <player_one_location>
     5a6:	80 31       	cpi	r24, 0x10	; 16
     5a8:	08 f4       	brcc	.+2      	; 0x5ac <player_one_tick+0x64>
     5aa:	80 5f       	subi	r24, 0xF0	; 240
     5ac:	80 93 30 02 	sts	0x0230, r24	; 0x800230 <player_one_location>
     5b0:	81 e0       	ldi	r24, 0x01	; 1
     5b2:	90 e0       	ldi	r25, 0x00	; 0
     5b4:	08 95       	ret
     5b6:	84 33       	cpi	r24, 0x34	; 52
     5b8:	41 f4       	brne	.+16     	; 0x5ca <player_one_tick+0x82>
     5ba:	80 91 30 02 	lds	r24, 0x0230	; 0x800230 <player_one_location>
     5be:	b3 df       	rcall	.-154    	; 0x526 <moveLeft>
     5c0:	80 93 30 02 	sts	0x0230, r24	; 0x800230 <player_one_location>
     5c4:	81 e0       	ldi	r24, 0x01	; 1
     5c6:	90 e0       	ldi	r25, 0x00	; 0
     5c8:	08 95       	ret
     5ca:	86 33       	cpi	r24, 0x36	; 54
     5cc:	41 f4       	brne	.+16     	; 0x5de <player_one_tick+0x96>
     5ce:	80 91 30 02 	lds	r24, 0x0230	; 0x800230 <player_one_location>
     5d2:	b0 df       	rcall	.-160    	; 0x534 <moveRight>
     5d4:	80 93 30 02 	sts	0x0230, r24	; 0x800230 <player_one_location>
     5d8:	81 e0       	ldi	r24, 0x01	; 1
     5da:	90 e0       	ldi	r25, 0x00	; 0
     5dc:	08 95       	ret
     5de:	81 e0       	ldi	r24, 0x01	; 1
     5e0:	90 e0       	ldi	r25, 0x00	; 0
     5e2:	08 95       	ret

000005e4 <player_one_projectile_tick>:
     5e4:	bf 92       	push	r11
     5e6:	cf 92       	push	r12
     5e8:	df 92       	push	r13
     5ea:	ef 92       	push	r14
     5ec:	ff 92       	push	r15
     5ee:	0f 93       	push	r16
     5f0:	1f 93       	push	r17
     5f2:	cf 93       	push	r28
     5f4:	df 93       	push	r29
     5f6:	00 97       	sbiw	r24, 0x00	; 0
     5f8:	21 f0       	breq	.+8      	; 0x602 <player_one_projectile_tick+0x1e>
     5fa:	81 30       	cpi	r24, 0x01	; 1
     5fc:	91 05       	cpc	r25, r1
     5fe:	31 f0       	breq	.+12     	; 0x60c <player_one_projectile_tick+0x28>
     600:	0a c0       	rjmp	.+20     	; 0x616 <player_one_projectile_tick+0x32>
     602:	80 91 35 02 	lds	r24, 0x0235	; 0x800235 <playFlag>
     606:	81 30       	cpi	r24, 0x01	; 1
     608:	69 f4       	brne	.+26     	; 0x624 <player_one_projectile_tick+0x40>
     60a:	18 c0       	rjmp	.+48     	; 0x63c <player_one_projectile_tick+0x58>
     60c:	80 91 35 02 	lds	r24, 0x0235	; 0x800235 <playFlag>
     610:	88 23       	and	r24, r24
     612:	41 f0       	breq	.+16     	; 0x624 <player_one_projectile_tick+0x40>
     614:	13 c0       	rjmp	.+38     	; 0x63c <player_one_projectile_tick+0x58>
     616:	00 97       	sbiw	r24, 0x00	; 0
     618:	29 f0       	breq	.+10     	; 0x624 <player_one_projectile_tick+0x40>
     61a:	81 30       	cpi	r24, 0x01	; 1
     61c:	91 05       	cpc	r25, r1
     61e:	09 f0       	breq	.+2      	; 0x622 <player_one_projectile_tick+0x3e>
     620:	56 c0       	rjmp	.+172    	; 0x6ce <player_one_projectile_tick+0xea>
     622:	0c c0       	rjmp	.+24     	; 0x63c <player_one_projectile_tick+0x58>
     624:	ef e3       	ldi	r30, 0x3F	; 63
     626:	f1 e0       	ldi	r31, 0x01	; 1
     628:	8f ef       	ldi	r24, 0xFF	; 255
     62a:	80 83       	st	Z, r24
     62c:	81 83       	std	Z+1, r24	; 0x01
     62e:	82 83       	std	Z+2, r24	; 0x02
     630:	83 83       	std	Z+3, r24	; 0x03
     632:	84 83       	std	Z+4, r24	; 0x04
     634:	15 b8       	out	0x05, r1	; 5
     636:	80 e0       	ldi	r24, 0x00	; 0
     638:	90 e0       	ldi	r25, 0x00	; 0
     63a:	49 c0       	rjmp	.+146    	; 0x6ce <player_one_projectile_tick+0xea>
     63c:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <key>
     640:	85 33       	cpi	r24, 0x35	; 53
     642:	c9 f5       	brne	.+114    	; 0x6b6 <player_one_projectile_tick+0xd2>
     644:	80 91 3f 01 	lds	r24, 0x013F	; 0x80013f <player_one_projectile_location>
     648:	8f 3f       	cpi	r24, 0xFF	; 255
     64a:	49 f0       	breq	.+18     	; 0x65e <player_one_projectile_tick+0x7a>
     64c:	e0 e4       	ldi	r30, 0x40	; 64
     64e:	f1 e0       	ldi	r31, 0x01	; 1
     650:	81 e0       	ldi	r24, 0x01	; 1
     652:	90 e0       	ldi	r25, 0x00	; 0
     654:	ac 01       	movw	r20, r24
     656:	21 91       	ld	r18, Z+
     658:	2f 3f       	cpi	r18, 0xFF	; 255
     65a:	51 f4       	brne	.+20     	; 0x670 <player_one_projectile_tick+0x8c>
     65c:	02 c0       	rjmp	.+4      	; 0x662 <player_one_projectile_tick+0x7e>
     65e:	40 e0       	ldi	r20, 0x00	; 0
     660:	50 e0       	ldi	r21, 0x00	; 0
     662:	fa 01       	movw	r30, r20
     664:	e1 5c       	subi	r30, 0xC1	; 193
     666:	fe 4f       	sbci	r31, 0xFE	; 254
     668:	80 91 30 02 	lds	r24, 0x0230	; 0x800230 <player_one_location>
     66c:	80 83       	st	Z, r24
     66e:	23 c0       	rjmp	.+70     	; 0x6b6 <player_one_projectile_tick+0xd2>
     670:	01 96       	adiw	r24, 0x01	; 1
     672:	85 30       	cpi	r24, 0x05	; 5
     674:	91 05       	cpc	r25, r1
     676:	71 f7       	brne	.-36     	; 0x654 <player_one_projectile_tick+0x70>
     678:	1e c0       	rjmp	.+60     	; 0x6b6 <player_one_projectile_tick+0xd2>
     67a:	88 81       	ld	r24, Y
     67c:	8f 3f       	cpi	r24, 0xFF	; 255
     67e:	41 f0       	breq	.+16     	; 0x690 <player_one_projectile_tick+0xac>
     680:	98 2f       	mov	r25, r24
     682:	9f 7e       	andi	r25, 0xEF	; 239
     684:	9f 30       	cpi	r25, 0x0F	; 15
     686:	11 f4       	brne	.+4      	; 0x68c <player_one_projectile_tick+0xa8>
     688:	b8 82       	st	Y, r11
     68a:	02 c0       	rjmp	.+4      	; 0x690 <player_one_projectile_tick+0xac>
     68c:	53 df       	rcall	.-346    	; 0x534 <moveRight>
     68e:	88 83       	st	Y, r24
     690:	21 96       	adiw	r28, 0x01	; 1
     692:	ce 15       	cp	r28, r14
     694:	df 05       	cpc	r29, r15
     696:	89 f7       	brne	.-30     	; 0x67a <player_one_projectile_tick+0x96>
     698:	90 e0       	ldi	r25, 0x00	; 0
     69a:	f8 01       	movw	r30, r16
     69c:	81 91       	ld	r24, Z+
     69e:	8f 01       	movw	r16, r30
     6a0:	8f 3f       	cpi	r24, 0xFF	; 255
     6a2:	11 f4       	brne	.+4      	; 0x6a8 <player_one_projectile_tick+0xc4>
     6a4:	99 0f       	add	r25, r25
     6a6:	9f 5f       	subi	r25, 0xFF	; 255
     6a8:	0e 15       	cp	r16, r14
     6aa:	1f 05       	cpc	r17, r15
     6ac:	b1 f7       	brne	.-20     	; 0x69a <player_one_projectile_tick+0xb6>
     6ae:	95 b9       	out	0x05, r25	; 5
     6b0:	81 e0       	ldi	r24, 0x01	; 1
     6b2:	90 e0       	ldi	r25, 0x00	; 0
     6b4:	0c c0       	rjmp	.+24     	; 0x6ce <player_one_projectile_tick+0xea>
     6b6:	0f e3       	ldi	r16, 0x3F	; 63
     6b8:	11 e0       	ldi	r17, 0x01	; 1
     6ba:	0f 2e       	mov	r0, r31
     6bc:	f4 e4       	ldi	r31, 0x44	; 68
     6be:	ef 2e       	mov	r14, r31
     6c0:	f1 e0       	ldi	r31, 0x01	; 1
     6c2:	ff 2e       	mov	r15, r31
     6c4:	f0 2d       	mov	r31, r0
     6c6:	e8 01       	movw	r28, r16
     6c8:	bb 24       	eor	r11, r11
     6ca:	ba 94       	dec	r11
     6cc:	d6 cf       	rjmp	.-84     	; 0x67a <player_one_projectile_tick+0x96>
     6ce:	df 91       	pop	r29
     6d0:	cf 91       	pop	r28
     6d2:	1f 91       	pop	r17
     6d4:	0f 91       	pop	r16
     6d6:	ff 90       	pop	r15
     6d8:	ef 90       	pop	r14
     6da:	df 90       	pop	r13
     6dc:	cf 90       	pop	r12
     6de:	bf 90       	pop	r11
     6e0:	08 95       	ret

000006e2 <enemyMoveLeft>:
     6e2:	98 2f       	mov	r25, r24
     6e4:	9f 7e       	andi	r25, 0xEF	; 239
     6e6:	29 f0       	breq	.+10     	; 0x6f2 <enemyMoveLeft+0x10>
     6e8:	91 50       	subi	r25, 0x01	; 1
     6ea:	9f 30       	cpi	r25, 0x0F	; 15
     6ec:	18 f4       	brcc	.+6      	; 0x6f4 <enemyMoveLeft+0x12>
     6ee:	81 50       	subi	r24, 0x01	; 1
     6f0:	08 95       	ret
     6f2:	8f ef       	ldi	r24, 0xFF	; 255
     6f4:	08 95       	ret

000006f6 <enemy_tick>:
     6f6:	cf 92       	push	r12
     6f8:	df 92       	push	r13
     6fa:	ef 92       	push	r14
     6fc:	ff 92       	push	r15
     6fe:	0f 93       	push	r16
     700:	1f 93       	push	r17
     702:	cf 93       	push	r28
     704:	df 93       	push	r29
     706:	ec 01       	movw	r28, r24
     708:	66 d4       	rcall	.+2252   	; 0xfd6 <rand>
     70a:	20 97       	sbiw	r28, 0x00	; 0
     70c:	21 f0       	breq	.+8      	; 0x716 <enemy_tick+0x20>
     70e:	c1 30       	cpi	r28, 0x01	; 1
     710:	d1 05       	cpc	r29, r1
     712:	31 f0       	breq	.+12     	; 0x720 <enemy_tick+0x2a>
     714:	0a c0       	rjmp	.+20     	; 0x72a <enemy_tick+0x34>
     716:	20 91 35 02 	lds	r18, 0x0235	; 0x800235 <playFlag>
     71a:	21 30       	cpi	r18, 0x01	; 1
     71c:	69 f4       	brne	.+26     	; 0x738 <enemy_tick+0x42>
     71e:	15 c0       	rjmp	.+42     	; 0x74a <enemy_tick+0x54>
     720:	20 91 35 02 	lds	r18, 0x0235	; 0x800235 <playFlag>
     724:	22 23       	and	r18, r18
     726:	41 f0       	breq	.+16     	; 0x738 <enemy_tick+0x42>
     728:	10 c0       	rjmp	.+32     	; 0x74a <enemy_tick+0x54>
     72a:	20 97       	sbiw	r28, 0x00	; 0
     72c:	29 f0       	breq	.+10     	; 0x738 <enemy_tick+0x42>
     72e:	c1 30       	cpi	r28, 0x01	; 1
     730:	d1 05       	cpc	r29, r1
     732:	09 f0       	breq	.+2      	; 0x736 <enemy_tick+0x40>
     734:	77 c0       	rjmp	.+238    	; 0x824 <enemy_tick+0x12e>
     736:	09 c0       	rjmp	.+18     	; 0x74a <enemy_tick+0x54>
     738:	ec e3       	ldi	r30, 0x3C	; 60
     73a:	f1 e0       	ldi	r31, 0x01	; 1
     73c:	8f ef       	ldi	r24, 0xFF	; 255
     73e:	80 83       	st	Z, r24
     740:	81 83       	std	Z+1, r24	; 0x01
     742:	82 83       	std	Z+2, r24	; 0x02
     744:	c0 e0       	ldi	r28, 0x00	; 0
     746:	d0 e0       	ldi	r29, 0x00	; 0
     748:	6d c0       	rjmp	.+218    	; 0x824 <enemy_tick+0x12e>
     74a:	81 70       	andi	r24, 0x01	; 1
     74c:	90 78       	andi	r25, 0x80	; 128
     74e:	99 23       	and	r25, r25
     750:	24 f4       	brge	.+8      	; 0x75a <enemy_tick+0x64>
     752:	01 97       	sbiw	r24, 0x01	; 1
     754:	8e 6f       	ori	r24, 0xFE	; 254
     756:	9f 6f       	ori	r25, 0xFF	; 255
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	81 30       	cpi	r24, 0x01	; 1
     75c:	09 f0       	breq	.+2      	; 0x760 <enemy_tick+0x6a>
     75e:	54 c0       	rjmp	.+168    	; 0x808 <enemy_tick+0x112>
     760:	cc e3       	ldi	r28, 0x3C	; 60
     762:	d1 e0       	ldi	r29, 0x01	; 1
     764:	0f e3       	ldi	r16, 0x3F	; 63
     766:	11 e0       	ldi	r17, 0x01	; 1
     768:	0f 2e       	mov	r0, r31
     76a:	ff e0       	ldi	r31, 0x0F	; 15
     76c:	cf 2e       	mov	r12, r31
     76e:	f0 2d       	mov	r31, r0
     770:	0f 2e       	mov	r0, r31
     772:	ff e1       	ldi	r31, 0x1F	; 31
     774:	df 2e       	mov	r13, r31
     776:	f0 2d       	mov	r31, r0
     778:	7e 01       	movw	r14, r28
     77a:	88 81       	ld	r24, Y
     77c:	8f 3f       	cpi	r24, 0xFF	; 255
     77e:	a9 f4       	brne	.+42     	; 0x7aa <enemy_tick+0xb4>
     780:	2a d4       	rcall	.+2132   	; 0xfd6 <rand>
     782:	81 70       	andi	r24, 0x01	; 1
     784:	90 78       	andi	r25, 0x80	; 128
     786:	99 23       	and	r25, r25
     788:	24 f4       	brge	.+8      	; 0x792 <enemy_tick+0x9c>
     78a:	01 97       	sbiw	r24, 0x01	; 1
     78c:	8e 6f       	ori	r24, 0xFE	; 254
     78e:	9f 6f       	ori	r25, 0xFF	; 255
     790:	01 96       	adiw	r24, 0x01	; 1
     792:	99 27       	eor	r25, r25
     794:	81 30       	cpi	r24, 0x01	; 1
     796:	91 05       	cpc	r25, r1
     798:	19 f0       	breq	.+6      	; 0x7a0 <enemy_tick+0xaa>
     79a:	02 97       	sbiw	r24, 0x02	; 2
     79c:	21 f0       	breq	.+8      	; 0x7a6 <enemy_tick+0xb0>
     79e:	05 c0       	rjmp	.+10     	; 0x7aa <enemy_tick+0xb4>
     7a0:	f7 01       	movw	r30, r14
     7a2:	c0 82       	st	Z, r12
     7a4:	02 c0       	rjmp	.+4      	; 0x7aa <enemy_tick+0xb4>
     7a6:	f7 01       	movw	r30, r14
     7a8:	d0 82       	st	Z, r13
     7aa:	21 96       	adiw	r28, 0x01	; 1
     7ac:	c0 17       	cp	r28, r16
     7ae:	d1 07       	cpc	r29, r17
     7b0:	19 f7       	brne	.-58     	; 0x778 <enemy_tick+0x82>
     7b2:	2a c0       	rjmp	.+84     	; 0x808 <enemy_tick+0x112>
     7b4:	8e 01       	movw	r16, r28
     7b6:	88 81       	ld	r24, Y
     7b8:	8f 3f       	cpi	r24, 0xFF	; 255
     7ba:	f9 f0       	breq	.+62     	; 0x7fa <enemy_tick+0x104>
     7bc:	0c d4       	rcall	.+2072   	; 0xfd6 <rand>
     7be:	b6 01       	movw	r22, r12
     7c0:	71 d3       	rcall	.+1762   	; 0xea4 <__divmodhi4>
     7c2:	99 27       	eor	r25, r25
     7c4:	81 30       	cpi	r24, 0x01	; 1
     7c6:	91 05       	cpc	r25, r1
     7c8:	71 f0       	breq	.+28     	; 0x7e6 <enemy_tick+0xf0>
     7ca:	82 30       	cpi	r24, 0x02	; 2
     7cc:	91 05       	cpc	r25, r1
     7ce:	91 f0       	breq	.+36     	; 0x7f4 <enemy_tick+0xfe>
     7d0:	89 2b       	or	r24, r25
     7d2:	99 f4       	brne	.+38     	; 0x7fa <enemy_tick+0x104>
     7d4:	98 81       	ld	r25, Y
     7d6:	80 ef       	ldi	r24, 0xF0	; 240
     7d8:	89 0f       	add	r24, r25
     7da:	80 31       	cpi	r24, 0x10	; 16
     7dc:	08 f0       	brcs	.+2      	; 0x7e0 <enemy_tick+0xea>
     7de:	89 2f       	mov	r24, r25
     7e0:	f8 01       	movw	r30, r16
     7e2:	80 83       	st	Z, r24
     7e4:	0a c0       	rjmp	.+20     	; 0x7fa <enemy_tick+0x104>
     7e6:	88 81       	ld	r24, Y
     7e8:	80 31       	cpi	r24, 0x10	; 16
     7ea:	08 f4       	brcc	.+2      	; 0x7ee <enemy_tick+0xf8>
     7ec:	80 5f       	subi	r24, 0xF0	; 240
     7ee:	f8 01       	movw	r30, r16
     7f0:	80 83       	st	Z, r24
     7f2:	03 c0       	rjmp	.+6      	; 0x7fa <enemy_tick+0x104>
     7f4:	88 81       	ld	r24, Y
     7f6:	75 df       	rcall	.-278    	; 0x6e2 <enemyMoveLeft>
     7f8:	88 83       	st	Y, r24
     7fa:	21 96       	adiw	r28, 0x01	; 1
     7fc:	ec 16       	cp	r14, r28
     7fe:	fd 06       	cpc	r15, r29
     800:	c9 f6       	brne	.-78     	; 0x7b4 <enemy_tick+0xbe>
     802:	c1 e0       	ldi	r28, 0x01	; 1
     804:	d0 e0       	ldi	r29, 0x00	; 0
     806:	0e c0       	rjmp	.+28     	; 0x824 <enemy_tick+0x12e>
     808:	cc e3       	ldi	r28, 0x3C	; 60
     80a:	d1 e0       	ldi	r29, 0x01	; 1
     80c:	0f 2e       	mov	r0, r31
     80e:	ff e3       	ldi	r31, 0x3F	; 63
     810:	ef 2e       	mov	r14, r31
     812:	f1 e0       	ldi	r31, 0x01	; 1
     814:	ff 2e       	mov	r15, r31
     816:	f0 2d       	mov	r31, r0
     818:	0f 2e       	mov	r0, r31
     81a:	f3 e0       	ldi	r31, 0x03	; 3
     81c:	cf 2e       	mov	r12, r31
     81e:	d1 2c       	mov	r13, r1
     820:	f0 2d       	mov	r31, r0
     822:	c8 cf       	rjmp	.-112    	; 0x7b4 <enemy_tick+0xbe>
     824:	ce 01       	movw	r24, r28
     826:	df 91       	pop	r29
     828:	cf 91       	pop	r28
     82a:	1f 91       	pop	r17
     82c:	0f 91       	pop	r16
     82e:	ff 90       	pop	r15
     830:	ef 90       	pop	r14
     832:	df 90       	pop	r13
     834:	cf 90       	pop	r12
     836:	08 95       	ret

00000838 <LCD_build>:
     838:	0f 93       	push	r16
     83a:	1f 93       	push	r17
     83c:	cf 93       	push	r28
     83e:	df 93       	push	r29
     840:	88 30       	cpi	r24, 0x08	; 8
     842:	70 f4       	brcc	.+28     	; 0x860 <LCD_build+0x28>
     844:	8b 01       	movw	r16, r22
     846:	88 0f       	add	r24, r24
     848:	88 0f       	add	r24, r24
     84a:	88 0f       	add	r24, r24
     84c:	80 5c       	subi	r24, 0xC0	; 192
     84e:	ce dd       	rcall	.-1124   	; 0x3ec <LCD_WriteCommand>
     850:	e8 01       	movw	r28, r16
     852:	08 5f       	subi	r16, 0xF8	; 248
     854:	1f 4f       	sbci	r17, 0xFF	; 255
     856:	89 91       	ld	r24, Y+
     858:	ec dd       	rcall	.-1064   	; 0x432 <LCD_WriteData>
     85a:	c0 17       	cp	r28, r16
     85c:	d1 07       	cpc	r29, r17
     85e:	d9 f7       	brne	.-10     	; 0x856 <LCD_build+0x1e>
     860:	df 91       	pop	r29
     862:	cf 91       	pop	r28
     864:	1f 91       	pop	r17
     866:	0f 91       	pop	r16
     868:	08 95       	ret

0000086a <loadPlayerOneSprite>:
     86a:	64 e1       	ldi	r22, 0x14	; 20
     86c:	71 e0       	ldi	r23, 0x01	; 1
     86e:	80 e0       	ldi	r24, 0x00	; 0
     870:	e3 cf       	rjmp	.-58     	; 0x838 <LCD_build>
     872:	08 95       	ret

00000874 <loadTerrainSprite>:
     874:	6c e0       	ldi	r22, 0x0C	; 12
     876:	71 e0       	ldi	r23, 0x01	; 1
     878:	81 e0       	ldi	r24, 0x01	; 1
     87a:	de cf       	rjmp	.-68     	; 0x838 <LCD_build>
     87c:	08 95       	ret

0000087e <loadEnemySprite>:
     87e:	64 e0       	ldi	r22, 0x04	; 4
     880:	71 e0       	ldi	r23, 0x01	; 1
     882:	82 e0       	ldi	r24, 0x02	; 2
     884:	d9 cf       	rjmp	.-78     	; 0x838 <LCD_build>
     886:	08 95       	ret

00000888 <displayPlayerOneSprite>:
     888:	80 e0       	ldi	r24, 0x00	; 0
     88a:	d3 cd       	rjmp	.-1114   	; 0x432 <LCD_WriteData>
     88c:	08 95       	ret

0000088e <displayTerrainSprite>:
     88e:	81 e0       	ldi	r24, 0x01	; 1
     890:	d0 cd       	rjmp	.-1120   	; 0x432 <LCD_WriteData>
     892:	08 95       	ret

00000894 <displayEnemySprite>:
     894:	82 e0       	ldi	r24, 0x02	; 2
     896:	cd cd       	rjmp	.-1126   	; 0x432 <LCD_WriteData>
     898:	08 95       	ret

0000089a <transmit_data>:
     89a:	40 e0       	ldi	r20, 0x00	; 0
     89c:	50 e0       	ldi	r21, 0x00	; 0
     89e:	e0 e2       	ldi	r30, 0x20	; 32
     8a0:	68 2f       	mov	r22, r24
     8a2:	70 e0       	ldi	r23, 0x00	; 0
     8a4:	e2 b9       	out	0x02, r30	; 2
     8a6:	92 b1       	in	r25, 0x02	; 2
     8a8:	9b 01       	movw	r18, r22
     8aa:	04 2e       	mov	r0, r20
     8ac:	02 c0       	rjmp	.+4      	; 0x8b2 <transmit_data+0x18>
     8ae:	35 95       	asr	r19
     8b0:	27 95       	ror	r18
     8b2:	0a 94       	dec	r0
     8b4:	e2 f7       	brpl	.-8      	; 0x8ae <transmit_data+0x14>
     8b6:	21 70       	andi	r18, 0x01	; 1
     8b8:	33 27       	eor	r19, r19
     8ba:	22 0f       	add	r18, r18
     8bc:	33 1f       	adc	r19, r19
     8be:	22 0f       	add	r18, r18
     8c0:	33 1f       	adc	r19, r19
     8c2:	29 2b       	or	r18, r25
     8c4:	22 b9       	out	0x02, r18	; 2
     8c6:	13 9a       	sbi	0x02, 3	; 2
     8c8:	4f 5f       	subi	r20, 0xFF	; 255
     8ca:	5f 4f       	sbci	r21, 0xFF	; 255
     8cc:	48 30       	cpi	r20, 0x08	; 8
     8ce:	51 05       	cpc	r21, r1
     8d0:	49 f7       	brne	.-46     	; 0x8a4 <transmit_data+0xa>
     8d2:	14 9a       	sbi	0x02, 4	; 2
     8d4:	12 b8       	out	0x02, r1	; 2
     8d6:	08 95       	ret

000008d8 <displayLives>:
     8d8:	90 e0       	ldi	r25, 0x00	; 0
     8da:	8a 30       	cpi	r24, 0x0A	; 10
     8dc:	91 05       	cpc	r25, r1
     8de:	58 f5       	brcc	.+86     	; 0x936 <displayLives+0x5e>
     8e0:	fc 01       	movw	r30, r24
     8e2:	ea 5b       	subi	r30, 0xBA	; 186
     8e4:	ff 4f       	sbci	r31, 0xFF	; 255
     8e6:	13 c3       	rjmp	.+1574   	; 0xf0e <__tablejump2__>
     8e8:	8f e3       	ldi	r24, 0x3F	; 63
     8ea:	80 93 2f 02 	sts	0x022F, r24	; 0x80022f <display.2346>
     8ee:	23 c0       	rjmp	.+70     	; 0x936 <displayLives+0x5e>
     8f0:	86 e0       	ldi	r24, 0x06	; 6
     8f2:	80 93 2f 02 	sts	0x022F, r24	; 0x80022f <display.2346>
     8f6:	1f c0       	rjmp	.+62     	; 0x936 <displayLives+0x5e>
     8f8:	8b e5       	ldi	r24, 0x5B	; 91
     8fa:	80 93 2f 02 	sts	0x022F, r24	; 0x80022f <display.2346>
     8fe:	1b c0       	rjmp	.+54     	; 0x936 <displayLives+0x5e>
     900:	8f e4       	ldi	r24, 0x4F	; 79
     902:	80 93 2f 02 	sts	0x022F, r24	; 0x80022f <display.2346>
     906:	17 c0       	rjmp	.+46     	; 0x936 <displayLives+0x5e>
     908:	86 e6       	ldi	r24, 0x66	; 102
     90a:	80 93 2f 02 	sts	0x022F, r24	; 0x80022f <display.2346>
     90e:	13 c0       	rjmp	.+38     	; 0x936 <displayLives+0x5e>
     910:	8d e6       	ldi	r24, 0x6D	; 109
     912:	80 93 2f 02 	sts	0x022F, r24	; 0x80022f <display.2346>
     916:	0f c0       	rjmp	.+30     	; 0x936 <displayLives+0x5e>
     918:	8d e7       	ldi	r24, 0x7D	; 125
     91a:	80 93 2f 02 	sts	0x022F, r24	; 0x80022f <display.2346>
     91e:	0b c0       	rjmp	.+22     	; 0x936 <displayLives+0x5e>
     920:	87 e0       	ldi	r24, 0x07	; 7
     922:	80 93 2f 02 	sts	0x022F, r24	; 0x80022f <display.2346>
     926:	07 c0       	rjmp	.+14     	; 0x936 <displayLives+0x5e>
     928:	8f e7       	ldi	r24, 0x7F	; 127
     92a:	80 93 2f 02 	sts	0x022F, r24	; 0x80022f <display.2346>
     92e:	03 c0       	rjmp	.+6      	; 0x936 <displayLives+0x5e>
     930:	87 e6       	ldi	r24, 0x67	; 103
     932:	80 93 2f 02 	sts	0x022F, r24	; 0x80022f <display.2346>
     936:	80 91 2f 02 	lds	r24, 0x022F	; 0x80022f <display.2346>
     93a:	80 95       	com	r24
     93c:	ae cf       	rjmp	.-164    	; 0x89a <transmit_data>
     93e:	08 95       	ret

00000940 <clearLives>:
     940:	8f ef       	ldi	r24, 0xFF	; 255
     942:	ab cf       	rjmp	.-170    	; 0x89a <transmit_data>
     944:	08 95       	ret

00000946 <lcd_display_tick>:
     946:	ef 92       	push	r14
     948:	ff 92       	push	r15
     94a:	0f 93       	push	r16
     94c:	1f 93       	push	r17
     94e:	cf 93       	push	r28
     950:	df 93       	push	r29
     952:	81 30       	cpi	r24, 0x01	; 1
     954:	91 05       	cpc	r25, r1
     956:	51 f0       	breq	.+20     	; 0x96c <lcd_display_tick+0x26>
     958:	82 30       	cpi	r24, 0x02	; 2
     95a:	91 05       	cpc	r25, r1
     95c:	a9 f0       	breq	.+42     	; 0x988 <lcd_display_tick+0x42>
     95e:	00 97       	sbiw	r24, 0x00	; 0
     960:	e1 f4       	brne	.+56     	; 0x99a <lcd_display_tick+0x54>
     962:	80 91 35 02 	lds	r24, 0x0235	; 0x800235 <playFlag>
     966:	81 30       	cpi	r24, 0x01	; 1
     968:	11 f5       	brne	.+68     	; 0x9ae <lcd_display_tick+0x68>
     96a:	92 c0       	rjmp	.+292    	; 0xa90 <lcd_display_tick+0x14a>
     96c:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <gameOverFlag>
     970:	81 11       	cpse	r24, r1
     972:	04 c0       	rjmp	.+8      	; 0x97c <lcd_display_tick+0x36>
     974:	80 91 35 02 	lds	r24, 0x0235	; 0x800235 <playFlag>
     978:	88 23       	and	r24, r24
     97a:	c9 f0       	breq	.+50     	; 0x9ae <lcd_display_tick+0x68>
     97c:	80 91 35 02 	lds	r24, 0x0235	; 0x800235 <playFlag>
     980:	81 30       	cpi	r24, 0x01	; 1
     982:	09 f4       	brne	.+2      	; 0x986 <lcd_display_tick+0x40>
     984:	85 c0       	rjmp	.+266    	; 0xa90 <lcd_display_tick+0x14a>
     986:	25 c0       	rjmp	.+74     	; 0x9d2 <lcd_display_tick+0x8c>
     988:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <gameOverFlag>
     98c:	81 30       	cpi	r24, 0x01	; 1
     98e:	09 f1       	breq	.+66     	; 0x9d2 <lcd_display_tick+0x8c>
     990:	80 91 35 02 	lds	r24, 0x0235	; 0x800235 <playFlag>
     994:	88 23       	and	r24, r24
     996:	59 f0       	breq	.+22     	; 0x9ae <lcd_display_tick+0x68>
     998:	7b c0       	rjmp	.+246    	; 0xa90 <lcd_display_tick+0x14a>
     99a:	81 30       	cpi	r24, 0x01	; 1
     99c:	91 05       	cpc	r25, r1
     99e:	c9 f0       	breq	.+50     	; 0x9d2 <lcd_display_tick+0x8c>
     9a0:	82 30       	cpi	r24, 0x02	; 2
     9a2:	91 05       	cpc	r25, r1
     9a4:	09 f4       	brne	.+2      	; 0x9a8 <lcd_display_tick+0x62>
     9a6:	74 c0       	rjmp	.+232    	; 0xa90 <lcd_display_tick+0x14a>
     9a8:	00 97       	sbiw	r24, 0x00	; 0
     9aa:	09 f0       	breq	.+2      	; 0x9ae <lcd_display_tick+0x68>
     9ac:	d8 c0       	rjmp	.+432    	; 0xb5e <lcd_display_tick+0x218>
     9ae:	01 e9       	ldi	r16, 0x91	; 145
     9b0:	11 e0       	ldi	r17, 0x01	; 1
     9b2:	c0 e0       	ldi	r28, 0x00	; 0
     9b4:	cf 5f       	subi	r28, 0xFF	; 255
     9b6:	8c 2f       	mov	r24, r28
     9b8:	25 dd       	rcall	.-1462   	; 0x404 <LCD_Cursor>
     9ba:	f8 01       	movw	r30, r16
     9bc:	81 91       	ld	r24, Z+
     9be:	8f 01       	movw	r16, r30
     9c0:	38 dd       	rcall	.-1424   	; 0x432 <LCD_WriteData>
     9c2:	80 e0       	ldi	r24, 0x00	; 0
     9c4:	1f dd       	rcall	.-1474   	; 0x404 <LCD_Cursor>
     9c6:	c0 32       	cpi	r28, 0x20	; 32
     9c8:	a9 f7       	brne	.-22     	; 0x9b4 <lcd_display_tick+0x6e>
     9ca:	ba df       	rcall	.-140    	; 0x940 <clearLives>
     9cc:	80 e0       	ldi	r24, 0x00	; 0
     9ce:	90 e0       	ldi	r25, 0x00	; 0
     9d0:	c6 c0       	rjmp	.+396    	; 0xb5e <lcd_display_tick+0x218>
     9d2:	15 dd       	rcall	.-1494   	; 0x3fe <LCD_ClearScreen>
     9d4:	69 e5       	ldi	r22, 0x59	; 89
     9d6:	71 e0       	ldi	r23, 0x01	; 1
     9d8:	81 e0       	ldi	r24, 0x01	; 1
     9da:	34 dd       	rcall	.-1432   	; 0x444 <LCD_DisplayString>
     9dc:	80 91 33 02 	lds	r24, 0x0233	; 0x800233 <score>
     9e0:	dd ec       	ldi	r29, 0xCD	; 205
     9e2:	8d 9f       	mul	r24, r29
     9e4:	c1 2d       	mov	r28, r1
     9e6:	11 24       	eor	r1, r1
     9e8:	c6 95       	lsr	r28
     9ea:	c6 95       	lsr	r28
     9ec:	c6 95       	lsr	r28
     9ee:	cc 0f       	add	r28, r28
     9f0:	9c 2f       	mov	r25, r28
     9f2:	99 0f       	add	r25, r25
     9f4:	99 0f       	add	r25, r25
     9f6:	c9 0f       	add	r28, r25
     9f8:	f8 2f       	mov	r31, r24
     9fa:	fc 1b       	sub	r31, r28
     9fc:	cf 2f       	mov	r28, r31
     9fe:	f0 93 2e 02 	sts	0x022E, r31	; 0x80022e <ones.2399>
     a02:	8f 1b       	sub	r24, r31
     a04:	99 e2       	ldi	r25, 0x29	; 41
     a06:	89 9f       	mul	r24, r25
     a08:	91 2d       	mov	r25, r1
     a0a:	11 24       	eor	r1, r1
     a0c:	92 95       	swap	r25
     a0e:	9f 70       	andi	r25, 0x0F	; 15
     a10:	38 2f       	mov	r19, r24
     a12:	24 e6       	ldi	r18, 0x64	; 100
     a14:	92 9f       	mul	r25, r18
     a16:	30 19       	sub	r19, r0
     a18:	11 24       	eor	r1, r1
     a1a:	3d 9f       	mul	r19, r29
     a1c:	d1 2d       	mov	r29, r1
     a1e:	11 24       	eor	r1, r1
     a20:	d6 95       	lsr	r29
     a22:	d6 95       	lsr	r29
     a24:	d6 95       	lsr	r29
     a26:	d0 93 2d 02 	sts	0x022D, r29	; 0x80022d <tens.2398>
     a2a:	8d 1b       	sub	r24, r29
     a2c:	90 e0       	ldi	r25, 0x00	; 0
     a2e:	68 ee       	ldi	r22, 0xE8	; 232
     a30:	73 e0       	ldi	r23, 0x03	; 3
     a32:	38 d2       	rcall	.+1136   	; 0xea4 <__divmodhi4>
     a34:	64 e6       	ldi	r22, 0x64	; 100
     a36:	70 e0       	ldi	r23, 0x00	; 0
     a38:	35 d2       	rcall	.+1130   	; 0xea4 <__divmodhi4>
     a3a:	16 2f       	mov	r17, r22
     a3c:	60 93 2c 02 	sts	0x022C, r22	; 0x80022c <hundreds.2397>
     a40:	88 e0       	ldi	r24, 0x08	; 8
     a42:	e0 dc       	rcall	.-1600   	; 0x404 <LCD_Cursor>
     a44:	80 e3       	ldi	r24, 0x30	; 48
     a46:	81 0f       	add	r24, r17
     a48:	f4 dc       	rcall	.-1560   	; 0x432 <LCD_WriteData>
     a4a:	89 e0       	ldi	r24, 0x09	; 9
     a4c:	db dc       	rcall	.-1610   	; 0x404 <LCD_Cursor>
     a4e:	80 e3       	ldi	r24, 0x30	; 48
     a50:	8d 0f       	add	r24, r29
     a52:	ef dc       	rcall	.-1570   	; 0x432 <LCD_WriteData>
     a54:	8a e0       	ldi	r24, 0x0A	; 10
     a56:	d6 dc       	rcall	.-1620   	; 0x404 <LCD_Cursor>
     a58:	80 e3       	ldi	r24, 0x30	; 48
     a5a:	8c 0f       	add	r24, r28
     a5c:	ea dc       	rcall	.-1580   	; 0x432 <LCD_WriteData>
     a5e:	01 e8       	ldi	r16, 0x81	; 129
     a60:	11 e0       	ldi	r17, 0x01	; 1
     a62:	0f 2e       	mov	r0, r31
     a64:	f1 e9       	ldi	r31, 0x91	; 145
     a66:	ef 2e       	mov	r14, r31
     a68:	f1 e0       	ldi	r31, 0x01	; 1
     a6a:	ff 2e       	mov	r15, r31
     a6c:	f0 2d       	mov	r31, r0
     a6e:	c1 e1       	ldi	r28, 0x11	; 17
     a70:	8c 2f       	mov	r24, r28
     a72:	c8 dc       	rcall	.-1648   	; 0x404 <LCD_Cursor>
     a74:	f8 01       	movw	r30, r16
     a76:	81 91       	ld	r24, Z+
     a78:	8f 01       	movw	r16, r30
     a7a:	db dc       	rcall	.-1610   	; 0x432 <LCD_WriteData>
     a7c:	80 e0       	ldi	r24, 0x00	; 0
     a7e:	c2 dc       	rcall	.-1660   	; 0x404 <LCD_Cursor>
     a80:	cf 5f       	subi	r28, 0xFF	; 255
     a82:	0e 15       	cp	r16, r14
     a84:	1f 05       	cpc	r17, r15
     a86:	a1 f7       	brne	.-24     	; 0xa70 <lcd_display_tick+0x12a>
     a88:	5b df       	rcall	.-330    	; 0x940 <clearLives>
     a8a:	81 e0       	ldi	r24, 0x01	; 1
     a8c:	90 e0       	ldi	r25, 0x00	; 0
     a8e:	67 c0       	rjmp	.+206    	; 0xb5e <lcd_display_tick+0x218>
     a90:	80 e2       	ldi	r24, 0x20	; 32
     a92:	e1 e6       	ldi	r30, 0x61	; 97
     a94:	f1 e0       	ldi	r31, 0x01	; 1
     a96:	ac e1       	ldi	r26, 0x1C	; 28
     a98:	b1 e0       	ldi	r27, 0x01	; 1
     a9a:	01 90       	ld	r0, Z+
     a9c:	0d 92       	st	X+, r0
     a9e:	8a 95       	dec	r24
     aa0:	e1 f7       	brne	.-8      	; 0xa9a <lcd_display_tick+0x154>
     aa2:	20 91 31 02 	lds	r18, 0x0231	; 0x800231 <terrainShift>
     aa6:	ac e2       	ldi	r26, 0x2C	; 44
     aa8:	b1 e0       	ldi	r27, 0x01	; 1
     aaa:	4c e3       	ldi	r20, 0x3C	; 60
     aac:	51 e0       	ldi	r21, 0x01	; 1
     aae:	30 e0       	ldi	r19, 0x00	; 0
     ab0:	2c 52       	subi	r18, 0x2C	; 44
     ab2:	31 40       	sbci	r19, 0x01	; 1
     ab4:	cc e1       	ldi	r28, 0x1C	; 28
     ab6:	d1 e0       	ldi	r29, 0x01	; 1
     ab8:	f9 01       	movw	r30, r18
     aba:	ea 0f       	add	r30, r26
     abc:	fb 1f       	adc	r31, r27
     abe:	ef 71       	andi	r30, 0x1F	; 31
     ac0:	ff 27       	eor	r31, r31
     ac2:	ef 54       	subi	r30, 0x4F	; 79
     ac4:	fe 4f       	sbci	r31, 0xFE	; 254
     ac6:	80 81       	ld	r24, Z
     ac8:	8d 93       	st	X+, r24
     aca:	a4 17       	cp	r26, r20
     acc:	b5 07       	cpc	r27, r21
     ace:	91 f7       	brne	.-28     	; 0xab4 <lcd_display_tick+0x16e>
     ad0:	ac e3       	ldi	r26, 0x3C	; 60
     ad2:	b1 e0       	ldi	r27, 0x01	; 1
     ad4:	ec 91       	ld	r30, X
     ad6:	f0 e0       	ldi	r31, 0x00	; 0
     ad8:	e4 5e       	subi	r30, 0xE4	; 228
     ada:	fe 4f       	sbci	r31, 0xFE	; 254
     adc:	80 e4       	ldi	r24, 0x40	; 64
     ade:	80 83       	st	Z, r24
     ae0:	11 96       	adiw	r26, 0x01	; 1
     ae2:	ec 91       	ld	r30, X
     ae4:	11 97       	sbiw	r26, 0x01	; 1
     ae6:	f0 e0       	ldi	r31, 0x00	; 0
     ae8:	e4 5e       	subi	r30, 0xE4	; 228
     aea:	fe 4f       	sbci	r31, 0xFE	; 254
     aec:	80 83       	st	Z, r24
     aee:	12 96       	adiw	r26, 0x02	; 2
     af0:	ec 91       	ld	r30, X
     af2:	f0 e0       	ldi	r31, 0x00	; 0
     af4:	e4 5e       	subi	r30, 0xE4	; 228
     af6:	fe 4f       	sbci	r31, 0xFE	; 254
     af8:	80 83       	st	Z, r24
     afa:	af e3       	ldi	r26, 0x3F	; 63
     afc:	b1 e0       	ldi	r27, 0x01	; 1
     afe:	24 e4       	ldi	r18, 0x44	; 68
     b00:	31 e0       	ldi	r19, 0x01	; 1
     b02:	8d e2       	ldi	r24, 0x2D	; 45
     b04:	ed 91       	ld	r30, X+
     b06:	f0 e0       	ldi	r31, 0x00	; 0
     b08:	e4 5e       	subi	r30, 0xE4	; 228
     b0a:	fe 4f       	sbci	r31, 0xFE	; 254
     b0c:	80 83       	st	Z, r24
     b0e:	a2 17       	cp	r26, r18
     b10:	b3 07       	cpc	r27, r19
     b12:	c1 f7       	brne	.-16     	; 0xb04 <lcd_display_tick+0x1be>
     b14:	e0 91 30 02 	lds	r30, 0x0230	; 0x800230 <player_one_location>
     b18:	f0 e0       	ldi	r31, 0x00	; 0
     b1a:	e4 5e       	subi	r30, 0xE4	; 228
     b1c:	fe 4f       	sbci	r31, 0xFE	; 254
     b1e:	8e e3       	ldi	r24, 0x3E	; 62
     b20:	80 83       	st	Z, r24
     b22:	10 e0       	ldi	r17, 0x00	; 0
     b24:	1f 5f       	subi	r17, 0xFF	; 255
     b26:	81 2f       	mov	r24, r17
     b28:	6d dc       	rcall	.-1830   	; 0x404 <LCD_Cursor>
     b2a:	7e 01       	movw	r14, r28
     b2c:	88 81       	ld	r24, Y
     b2e:	8e 33       	cpi	r24, 0x3E	; 62
     b30:	11 f4       	brne	.+4      	; 0xb36 <lcd_display_tick+0x1f0>
     b32:	aa de       	rcall	.-684    	; 0x888 <displayPlayerOneSprite>
     b34:	07 c0       	rjmp	.+14     	; 0xb44 <lcd_display_tick+0x1fe>
     b36:	8f 3f       	cpi	r24, 0xFF	; 255
     b38:	11 f4       	brne	.+4      	; 0xb3e <lcd_display_tick+0x1f8>
     b3a:	a9 de       	rcall	.-686    	; 0x88e <displayTerrainSprite>
     b3c:	03 c0       	rjmp	.+6      	; 0xb44 <lcd_display_tick+0x1fe>
     b3e:	80 34       	cpi	r24, 0x40	; 64
     b40:	09 f4       	brne	.+2      	; 0xb44 <lcd_display_tick+0x1fe>
     b42:	a8 de       	rcall	.-688    	; 0x894 <displayEnemySprite>
     b44:	21 96       	adiw	r28, 0x01	; 1
     b46:	f7 01       	movw	r30, r14
     b48:	80 81       	ld	r24, Z
     b4a:	73 dc       	rcall	.-1818   	; 0x432 <LCD_WriteData>
     b4c:	80 e0       	ldi	r24, 0x00	; 0
     b4e:	5a dc       	rcall	.-1868   	; 0x404 <LCD_Cursor>
     b50:	10 32       	cpi	r17, 0x20	; 32
     b52:	41 f7       	brne	.-48     	; 0xb24 <lcd_display_tick+0x1de>
     b54:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <lives>
     b58:	bf de       	rcall	.-642    	; 0x8d8 <displayLives>
     b5a:	82 e0       	ldi	r24, 0x02	; 2
     b5c:	90 e0       	ldi	r25, 0x00	; 0
     b5e:	df 91       	pop	r29
     b60:	cf 91       	pop	r28
     b62:	1f 91       	pop	r17
     b64:	0f 91       	pop	r16
     b66:	ff 90       	pop	r15
     b68:	ef 90       	pop	r14
     b6a:	08 95       	ret

00000b6c <main>:
			break;
 	}
	return state;
}

int main() {
     b6c:	cf 93       	push	r28
     b6e:	df 93       	push	r29
     b70:	cd b7       	in	r28, 0x3d	; 61
     b72:	de b7       	in	r29, 0x3e	; 62
     b74:	60 97       	sbiw	r28, 0x10	; 16
     b76:	0f b6       	in	r0, 0x3f	; 63
     b78:	f8 94       	cli
     b7a:	de bf       	out	0x3e, r29	; 62
     b7c:	0f be       	out	0x3f, r0	; 63
     b7e:	cd bf       	out	0x3d, r28	; 61
	// Set Data Direction Registers
	DDRA = 0xFF; PORTA = 0x00; //output
     b80:	8f ef       	ldi	r24, 0xFF	; 255
     b82:	81 b9       	out	0x01, r24	; 1
     b84:	12 b8       	out	0x02, r1	; 2
	DDRB = 0xFF; PORTB = 0x00; //output
     b86:	84 b9       	out	0x04, r24	; 4
     b88:	15 b8       	out	0x05, r1	; 5
	DDRC = 0xF0; PORTC = 0x0F; // PC7..4 outputs init 0s, PC3..0 inputs init 1
     b8a:	90 ef       	ldi	r25, 0xF0	; 240
     b8c:	97 b9       	out	0x07, r25	; 7
     b8e:	9f e0       	ldi	r25, 0x0F	; 15
     b90:	98 b9       	out	0x08, r25	; 8
	DDRD = 0xFF; PORTD = 0x00; //output
     b92:	8a b9       	out	0x0a, r24	; 10
     b94:	1b b8       	out	0x0b, r1	; 11
     b96:	18 ec       	ldi	r17, 0xC8	; 200
     b98:	00 e0       	ldi	r16, 0x00	; 0
     b9a:	f1 2c       	mov	r15, r1
     b9c:	e1 2c       	mov	r14, r1
     b9e:	54 e6       	ldi	r21, 0x64	; 100
     ba0:	40 e0       	ldi	r20, 0x00	; 0
     ba2:	30 e0       	ldi	r19, 0x00	; 0
     ba4:	20 e0       	ldi	r18, 0x00	; 0
     ba6:	04 c0       	rjmp	.+8      	; 0xbb0 <main+0x44>
	unsigned long int c;
	while(1){
		c = a%b;
		if(c==0){return b;}
		a = b;
		b = c;
     ba8:	16 2f       	mov	r17, r22
     baa:	07 2f       	mov	r16, r23
     bac:	f8 2e       	mov	r15, r24
     bae:	e9 2e       	mov	r14, r25
//--------Find GCD function --------------------------------------------------
unsigned long int findGCD(unsigned long int a, unsigned long int b)
{
	unsigned long int c;
	while(1){
		c = a%b;
     bb0:	65 2f       	mov	r22, r21
     bb2:	74 2f       	mov	r23, r20
     bb4:	83 2f       	mov	r24, r19
     bb6:	92 2f       	mov	r25, r18
     bb8:	21 2f       	mov	r18, r17
     bba:	30 2f       	mov	r19, r16
     bbc:	4f 2d       	mov	r20, r15
     bbe:	5e 2d       	mov	r21, r14
     bc0:	84 d1       	rcall	.+776    	; 0xeca <__udivmodsi4>
     bc2:	51 2f       	mov	r21, r17
     bc4:	40 2f       	mov	r20, r16
     bc6:	3f 2d       	mov	r19, r15
     bc8:	2e 2d       	mov	r18, r14
		if(c==0){return b;}
     bca:	61 15       	cp	r22, r1
     bcc:	71 05       	cpc	r23, r1
     bce:	81 05       	cpc	r24, r1
     bd0:	91 05       	cpc	r25, r1
     bd2:	51 f7       	brne	.-44     	; 0xba8 <main+0x3c>
     bd4:	0f 2e       	mov	r0, r31
     bd6:	f8 ec       	ldi	r31, 0xC8	; 200
     bd8:	bf 2e       	mov	r11, r31
     bda:	f0 2d       	mov	r31, r0
     bdc:	a1 2c       	mov	r10, r1
     bde:	91 2c       	mov	r9, r1
     be0:	81 2c       	mov	r8, r1
     be2:	04 c0       	rjmp	.+8      	; 0xbec <main+0x80>
		a = b;
		b = c;
     be4:	b6 2e       	mov	r11, r22
     be6:	a7 2e       	mov	r10, r23
     be8:	98 2e       	mov	r9, r24
     bea:	89 2e       	mov	r8, r25
//--------Find GCD function --------------------------------------------------
unsigned long int findGCD(unsigned long int a, unsigned long int b)
{
	unsigned long int c;
	while(1){
		c = a%b;
     bec:	61 2f       	mov	r22, r17
     bee:	70 2f       	mov	r23, r16
     bf0:	8f 2d       	mov	r24, r15
     bf2:	9e 2d       	mov	r25, r14
     bf4:	2b 2d       	mov	r18, r11
     bf6:	3a 2d       	mov	r19, r10
     bf8:	49 2d       	mov	r20, r9
     bfa:	58 2d       	mov	r21, r8
     bfc:	66 d1       	rcall	.+716    	; 0xeca <__udivmodsi4>
     bfe:	1b 2d       	mov	r17, r11
     c00:	0a 2d       	mov	r16, r10
     c02:	f9 2c       	mov	r15, r9
     c04:	e8 2c       	mov	r14, r8
		if(c==0){return b;}
     c06:	61 15       	cp	r22, r1
     c08:	71 05       	cpc	r23, r1
     c0a:	81 05       	cpc	r24, r1
     c0c:	91 05       	cpc	r25, r1
     c0e:	51 f7       	brne	.-44     	; 0xbe4 <main+0x78>
     c10:	10 e9       	ldi	r17, 0x90	; 144
     c12:	01 e0       	ldi	r16, 0x01	; 1
     c14:	f1 2c       	mov	r15, r1
     c16:	e1 2c       	mov	r14, r1
     c18:	04 c0       	rjmp	.+8      	; 0xc22 <main+0xb6>
		a = b;
		b = c;
     c1a:	16 2f       	mov	r17, r22
     c1c:	07 2f       	mov	r16, r23
     c1e:	f8 2e       	mov	r15, r24
     c20:	e9 2e       	mov	r14, r25
//--------Find GCD function --------------------------------------------------
unsigned long int findGCD(unsigned long int a, unsigned long int b)
{
	unsigned long int c;
	while(1){
		c = a%b;
     c22:	6b 2d       	mov	r22, r11
     c24:	7a 2d       	mov	r23, r10
     c26:	89 2d       	mov	r24, r9
     c28:	98 2d       	mov	r25, r8
     c2a:	21 2f       	mov	r18, r17
     c2c:	30 2f       	mov	r19, r16
     c2e:	4f 2d       	mov	r20, r15
     c30:	5e 2d       	mov	r21, r14
     c32:	4b d1       	rcall	.+662    	; 0xeca <__udivmodsi4>
     c34:	b1 2e       	mov	r11, r17
     c36:	a0 2e       	mov	r10, r16
     c38:	9f 2c       	mov	r9, r15
     c3a:	8e 2c       	mov	r8, r14
		if(c==0){return b;}
     c3c:	61 15       	cp	r22, r1
     c3e:	71 05       	cpc	r23, r1
     c40:	81 05       	cpc	r24, r1
     c42:	91 05       	cpc	r25, r1
     c44:	51 f7       	brne	.-44     	; 0xc1a <main+0xae>
     c46:	0f 2e       	mov	r0, r31
     c48:	f0 e9       	ldi	r31, 0x90	; 144
     c4a:	bf 2e       	mov	r11, r31
     c4c:	f0 2d       	mov	r31, r0
     c4e:	aa 24       	eor	r10, r10
     c50:	a3 94       	inc	r10
     c52:	91 2c       	mov	r9, r1
     c54:	81 2c       	mov	r8, r1
     c56:	04 c0       	rjmp	.+8      	; 0xc60 <main+0xf4>
		a = b;
		b = c;
     c58:	b6 2e       	mov	r11, r22
     c5a:	a7 2e       	mov	r10, r23
     c5c:	98 2e       	mov	r9, r24
     c5e:	89 2e       	mov	r8, r25
//--------Find GCD function --------------------------------------------------
unsigned long int findGCD(unsigned long int a, unsigned long int b)
{
	unsigned long int c;
	while(1){
		c = a%b;
     c60:	61 2f       	mov	r22, r17
     c62:	70 2f       	mov	r23, r16
     c64:	8f 2d       	mov	r24, r15
     c66:	9e 2d       	mov	r25, r14
     c68:	2b 2d       	mov	r18, r11
     c6a:	3a 2d       	mov	r19, r10
     c6c:	49 2d       	mov	r20, r9
     c6e:	58 2d       	mov	r21, r8
     c70:	2c d1       	rcall	.+600    	; 0xeca <__udivmodsi4>
     c72:	1b 2d       	mov	r17, r11
     c74:	0a 2d       	mov	r16, r10
     c76:	f9 2c       	mov	r15, r9
     c78:	e8 2c       	mov	r14, r8
		if(c==0){return b;}
     c7a:	61 15       	cp	r22, r1
     c7c:	71 05       	cpc	r23, r1
     c7e:	81 05       	cpc	r24, r1
     c80:	91 05       	cpc	r25, r1
     c82:	51 f7       	brne	.-44     	; 0xc58 <main+0xec>
     c84:	0f 2e       	mov	r0, r31
     c86:	f8 ec       	ldi	r31, 0xC8	; 200
     c88:	ef 2e       	mov	r14, r31
     c8a:	f0 2d       	mov	r31, r0
     c8c:	f1 2c       	mov	r15, r1
     c8e:	00 e0       	ldi	r16, 0x00	; 0
     c90:	10 e0       	ldi	r17, 0x00	; 0
     c92:	04 c0       	rjmp	.+8      	; 0xc9c <main+0x130>
		a = b;
		b = c;
     c94:	e6 2e       	mov	r14, r22
     c96:	f7 2e       	mov	r15, r23
     c98:	08 2f       	mov	r16, r24
     c9a:	19 2f       	mov	r17, r25
//--------Find GCD function --------------------------------------------------
unsigned long int findGCD(unsigned long int a, unsigned long int b)
{
	unsigned long int c;
	while(1){
		c = a%b;
     c9c:	6b 2d       	mov	r22, r11
     c9e:	7a 2d       	mov	r23, r10
     ca0:	89 2d       	mov	r24, r9
     ca2:	98 2d       	mov	r25, r8
     ca4:	2e 2d       	mov	r18, r14
     ca6:	3f 2d       	mov	r19, r15
     ca8:	40 2f       	mov	r20, r16
     caa:	51 2f       	mov	r21, r17
     cac:	0e d1       	rcall	.+540    	; 0xeca <__udivmodsi4>
     cae:	be 2c       	mov	r11, r14
     cb0:	af 2c       	mov	r10, r15
     cb2:	90 2e       	mov	r9, r16
     cb4:	81 2e       	mov	r8, r17
		if(c==0){return b;}
     cb6:	61 15       	cp	r22, r1
     cb8:	71 05       	cpc	r23, r1
     cba:	81 05       	cpc	r24, r1
     cbc:	91 05       	cpc	r25, r1
     cbe:	51 f7       	brne	.-44     	; 0xc94 <main+0x128>

	//Greatest common divisor for all tasks or smallest time unit for tasks.
	unsigned long int GCD = tmpGCD;

	//Recalculate GCD periods for scheduler
	unsigned long int key_tick_period = key_tick_calc/GCD;
     cc0:	68 ec       	ldi	r22, 0xC8	; 200
     cc2:	70 e0       	ldi	r23, 0x00	; 0
     cc4:	80 e0       	ldi	r24, 0x00	; 0
     cc6:	90 e0       	ldi	r25, 0x00	; 0
     cc8:	2e 2d       	mov	r18, r14
     cca:	3f 2d       	mov	r19, r15
     ccc:	40 2f       	mov	r20, r16
     cce:	51 2f       	mov	r21, r17
     cd0:	fc d0       	rcall	.+504    	; 0xeca <__udivmodsi4>
     cd2:	49 01       	movw	r8, r18
     cd4:	5a 01       	movw	r10, r20
	unsigned long int display_tick_period = display_tick_calc/GCD;
     cd6:	64 e6       	ldi	r22, 0x64	; 100
     cd8:	70 e0       	ldi	r23, 0x00	; 0
     cda:	80 e0       	ldi	r24, 0x00	; 0
     cdc:	90 e0       	ldi	r25, 0x00	; 0
     cde:	2e 2d       	mov	r18, r14
     ce0:	3f 2d       	mov	r19, r15
     ce2:	40 2f       	mov	r20, r16
     ce4:	51 2f       	mov	r21, r17
     ce6:	f1 d0       	rcall	.+482    	; 0xeca <__udivmodsi4>
     ce8:	29 01       	movw	r4, r18
     cea:	3a 01       	movw	r6, r20
	unsigned long int game_start_tick_period = game_start_tick_calc/GCD;
	unsigned long int player_one_tick_period = player_one_tick_calc/GCD;
	unsigned long int player_one_projectile_tick_period = player_one_projectile_tick_calc/GCD;
	unsigned long int terrain_tick_period = terrain_tick_calc/GCD;
     cec:	60 e9       	ldi	r22, 0x90	; 144
     cee:	71 e0       	ldi	r23, 0x01	; 1
     cf0:	80 e0       	ldi	r24, 0x00	; 0
     cf2:	90 e0       	ldi	r25, 0x00	; 0
     cf4:	2e 2d       	mov	r18, r14
     cf6:	3f 2d       	mov	r19, r15
     cf8:	40 2f       	mov	r20, r16
     cfa:	51 2f       	mov	r21, r17
     cfc:	e6 d0       	rcall	.+460    	; 0xeca <__udivmodsi4>
	unsigned long int enemy_tick_period = enemy_tick_calc/GCD;
	unsigned long int collision_tick_period = collision_tick_calc/GCD;

	//Declare an array of tasks 
	static task task1, task2, task3, task4, task5, task6, task7, task8;
	task *tasks[] = { &task1, &task2, &task3, &task4, &task5, &task6, &task7, &task8};
     cfe:	80 e1       	ldi	r24, 0x10	; 16
     d00:	e9 e4       	ldi	r30, 0x49	; 73
     d02:	f1 e0       	ldi	r31, 0x01	; 1
     d04:	de 01       	movw	r26, r28
     d06:	11 96       	adiw	r26, 0x01	; 1
     d08:	01 90       	ld	r0, Z+
     d0a:	0d 92       	st	X+, r0
     d0c:	8a 95       	dec	r24
     d0e:	e1 f7       	brne	.-8      	; 0xd08 <main+0x19c>
	const unsigned short numTasks = sizeof(tasks)/sizeof(task*);

	// Task 1
	task1.state = FETCHKEY;//Task initial state.
     d10:	ef e1       	ldi	r30, 0x1F	; 31
     d12:	f2 e0       	ldi	r31, 0x02	; 2
     d14:	10 82       	st	Z, r1
	task1.period = key_tick_period;//Task Period.
     d16:	81 82       	std	Z+1, r8	; 0x01
     d18:	92 82       	std	Z+2, r9	; 0x02
     d1a:	a3 82       	std	Z+3, r10	; 0x03
     d1c:	b4 82       	std	Z+4, r11	; 0x04
	task1.elapsedTime = 0;//Task current elapsed time.
     d1e:	15 82       	std	Z+5, r1	; 0x05
     d20:	16 82       	std	Z+6, r1	; 0x06
     d22:	17 82       	std	Z+7, r1	; 0x07
     d24:	10 86       	std	Z+8, r1	; 0x08
	task1.TickFct = &key_tick;//Function pointer for the tick.
     d26:	89 e8       	ldi	r24, 0x89	; 137
     d28:	92 e0       	ldi	r25, 0x02	; 2
     d2a:	92 87       	std	Z+10, r25	; 0x0a
     d2c:	81 87       	std	Z+9, r24	; 0x09

	// Task 2
	task2.state = DISPLAY_START_MESSAGE;//Task initial state.
     d2e:	e4 e1       	ldi	r30, 0x14	; 20
     d30:	f2 e0       	ldi	r31, 0x02	; 2
     d32:	10 82       	st	Z, r1
	task2.period = display_tick_period;//Task Period.
     d34:	41 82       	std	Z+1, r4	; 0x01
     d36:	52 82       	std	Z+2, r5	; 0x02
     d38:	63 82       	std	Z+3, r6	; 0x03
     d3a:	74 82       	std	Z+4, r7	; 0x04
	task2.elapsedTime = 0;//Task current elapsed time.
     d3c:	15 82       	std	Z+5, r1	; 0x05
     d3e:	16 82       	std	Z+6, r1	; 0x06
     d40:	17 82       	std	Z+7, r1	; 0x07
     d42:	10 86       	std	Z+8, r1	; 0x08
	task2.TickFct = &lcd_display_tick;//Function pointer for the tick.
     d44:	83 ea       	ldi	r24, 0xA3	; 163
     d46:	94 e0       	ldi	r25, 0x04	; 4
     d48:	92 87       	std	Z+10, r25	; 0x0a
     d4a:	81 87       	std	Z+9, r24	; 0x09

	// Task 3
	task3.state = GAME_INIT;//Task initial state.
     d4c:	e9 e0       	ldi	r30, 0x09	; 9
     d4e:	f2 e0       	ldi	r31, 0x02	; 2
     d50:	10 82       	st	Z, r1
	task3.period = game_start_tick_period;//Task Period.
     d52:	41 82       	std	Z+1, r4	; 0x01
     d54:	52 82       	std	Z+2, r5	; 0x02
     d56:	63 82       	std	Z+3, r6	; 0x03
     d58:	74 82       	std	Z+4, r7	; 0x04
	task3.elapsedTime = 0;//Task current elapsed time.
     d5a:	15 82       	std	Z+5, r1	; 0x05
     d5c:	16 82       	std	Z+6, r1	; 0x06
     d5e:	17 82       	std	Z+7, r1	; 0x07
     d60:	10 86       	std	Z+8, r1	; 0x08
	task3.TickFct = &game_start_tick;//Function pointer for the tick.
     d62:	81 e8       	ldi	r24, 0x81	; 129
     d64:	90 e0       	ldi	r25, 0x00	; 0
     d66:	92 87       	std	Z+10, r25	; 0x0a
     d68:	81 87       	std	Z+9, r24	; 0x09

	// Task 4
	task4.state = TERRAIN_INIT;//Task initial state.
     d6a:	ee ef       	ldi	r30, 0xFE	; 254
     d6c:	f1 e0       	ldi	r31, 0x01	; 1
     d6e:	10 82       	st	Z, r1
	task4.period = terrain_tick_period;//Task Period.
     d70:	21 83       	std	Z+1, r18	; 0x01
     d72:	32 83       	std	Z+2, r19	; 0x02
     d74:	43 83       	std	Z+3, r20	; 0x03
     d76:	54 83       	std	Z+4, r21	; 0x04
	task4.elapsedTime = 0;//Task current elapsed time.
     d78:	15 82       	std	Z+5, r1	; 0x05
     d7a:	16 82       	std	Z+6, r1	; 0x06
     d7c:	17 82       	std	Z+7, r1	; 0x07
     d7e:	10 86       	std	Z+8, r1	; 0x08
	task4.TickFct = &terrain_tick;//Function pointer for the tick.
     d80:	89 eb       	ldi	r24, 0xB9	; 185
     d82:	90 e0       	ldi	r25, 0x00	; 0
     d84:	92 87       	std	Z+10, r25	; 0x0a
     d86:	81 87       	std	Z+9, r24	; 0x09

	// Task 5
	task5.state = PLAYER_ONE_INIT;//Task initial state.
     d88:	e3 ef       	ldi	r30, 0xF3	; 243
     d8a:	f1 e0       	ldi	r31, 0x01	; 1
     d8c:	10 82       	st	Z, r1
	task5.period = player_one_tick_period;//Task Period.
     d8e:	81 82       	std	Z+1, r8	; 0x01
     d90:	92 82       	std	Z+2, r9	; 0x02
     d92:	a3 82       	std	Z+3, r10	; 0x03
     d94:	b4 82       	std	Z+4, r11	; 0x04
	task5.elapsedTime = 0;//Task current elapsed time.
     d96:	15 82       	std	Z+5, r1	; 0x05
     d98:	16 82       	std	Z+6, r1	; 0x06
     d9a:	17 82       	std	Z+7, r1	; 0x07
     d9c:	10 86       	std	Z+8, r1	; 0x08
	task5.TickFct = &player_one_tick;//Function pointer for the tick.
     d9e:	84 ea       	ldi	r24, 0xA4	; 164
     da0:	92 e0       	ldi	r25, 0x02	; 2
     da2:	92 87       	std	Z+10, r25	; 0x0a
     da4:	81 87       	std	Z+9, r24	; 0x09

	// Task 6
	task6.state = PLAYER_ONE_PROJECTILE_INIT;//Task initial state.
     da6:	e8 ee       	ldi	r30, 0xE8	; 232
     da8:	f1 e0       	ldi	r31, 0x01	; 1
     daa:	10 82       	st	Z, r1
	task6.period = player_one_projectile_tick_period;//Task Period.
     dac:	81 82       	std	Z+1, r8	; 0x01
     dae:	92 82       	std	Z+2, r9	; 0x02
     db0:	a3 82       	std	Z+3, r10	; 0x03
     db2:	b4 82       	std	Z+4, r11	; 0x04
	task6.elapsedTime = 0;//Task current elapsed time.
     db4:	15 82       	std	Z+5, r1	; 0x05
     db6:	16 82       	std	Z+6, r1	; 0x06
     db8:	17 82       	std	Z+7, r1	; 0x07
     dba:	10 86       	std	Z+8, r1	; 0x08
	task6.TickFct = &player_one_projectile_tick;//Function pointer for the tick.
     dbc:	82 ef       	ldi	r24, 0xF2	; 242
     dbe:	92 e0       	ldi	r25, 0x02	; 2
     dc0:	92 87       	std	Z+10, r25	; 0x0a
     dc2:	81 87       	std	Z+9, r24	; 0x09
	
	// Task 7
	task7.state = ENEMY_INIT;//Task initial state.
     dc4:	ed ed       	ldi	r30, 0xDD	; 221
     dc6:	f1 e0       	ldi	r31, 0x01	; 1
     dc8:	10 82       	st	Z, r1
	task7.period = enemy_tick_period;//Task Period.
     dca:	21 83       	std	Z+1, r18	; 0x01
     dcc:	32 83       	std	Z+2, r19	; 0x02
     dce:	43 83       	std	Z+3, r20	; 0x03
     dd0:	54 83       	std	Z+4, r21	; 0x04
	task7.elapsedTime = 0;//Task current elapsed time.
     dd2:	15 82       	std	Z+5, r1	; 0x05
     dd4:	16 82       	std	Z+6, r1	; 0x06
     dd6:	17 82       	std	Z+7, r1	; 0x07
     dd8:	10 86       	std	Z+8, r1	; 0x08
	task7.TickFct = &enemy_tick;//Function pointer for the tick.
     dda:	8b e7       	ldi	r24, 0x7B	; 123
     ddc:	93 e0       	ldi	r25, 0x03	; 3
     dde:	92 87       	std	Z+10, r25	; 0x0a
     de0:	81 87       	std	Z+9, r24	; 0x09
		
	// Task 8
	task8.state = COLLISION_INIT;//Task initial state.
     de2:	e2 ed       	ldi	r30, 0xD2	; 210
     de4:	f1 e0       	ldi	r31, 0x01	; 1
     de6:	10 82       	st	Z, r1
	task8.period = collision_tick_period;//Task Period.
     de8:	81 82       	std	Z+1, r8	; 0x01
     dea:	92 82       	std	Z+2, r9	; 0x02
     dec:	a3 82       	std	Z+3, r10	; 0x03
     dee:	b4 82       	std	Z+4, r11	; 0x04
	task8.elapsedTime = 0;//Task current elapsed time.
     df0:	15 82       	std	Z+5, r1	; 0x05
     df2:	16 82       	std	Z+6, r1	; 0x06
     df4:	17 82       	std	Z+7, r1	; 0x07
     df6:	10 86       	std	Z+8, r1	; 0x08
	task8.TickFct = &collision_tick;//Function pointer for the tick.
     df8:	8c ed       	ldi	r24, 0xDC	; 220
     dfa:	90 e0       	ldi	r25, 0x00	; 0

	// Set the timer and turn it on
	TimerSet(GCD);
     dfc:	92 87       	std	Z+10, r25	; 0x0a
     dfe:	81 87       	std	Z+9, r24	; 0x09
     e00:	6e 2d       	mov	r22, r14
     e02:	7f 2d       	mov	r23, r15
	TimerOn();
     e04:	80 2f       	mov	r24, r16

	// initialize LCD and sprites
	LCD_init();
     e06:	91 2f       	mov	r25, r17
     e08:	6d da       	rcall	.-2854   	; 0x2e4 <TimerSet>
 	loadPlayerOneSprite();
     e0a:	7d da       	rcall	.-2822   	; 0x306 <TimerOn>
     e0c:	03 db       	rcall	.-2554   	; 0x414 <LCD_init>
	loadTerrainSprite();
     e0e:	2d dd       	rcall	.-1446   	; 0x86a <loadPlayerOneSprite>
     e10:	31 dd       	rcall	.-1438   	; 0x874 <loadTerrainSprite>
	loadEnemySprite();
     e12:	35 dd       	rcall	.-1430   	; 0x87e <loadEnemySprite>
     e14:	80 e0       	ldi	r24, 0x00	; 0

	// initialize RNG
	srand(time(NULL));
     e16:	90 e0       	ldi	r25, 0x00	; 0
     e18:	61 d9       	rcall	.-3390   	; 0xdc <time>
     e1a:	cb 01       	movw	r24, r22
     e1c:	df d0       	rcall	.+446    	; 0xfdc <srand>
     e1e:	5e 01       	movw	r10, r28
     e20:	81 e1       	ldi	r24, 0x11	; 17
     e22:	a8 0e       	add	r10, r24
     e24:	b1 1c       	adc	r11, r1
     e26:	de 01       	movw	r26, r28
     e28:	11 96       	adiw	r26, 0x01	; 1
     e2a:	7d 01       	movw	r14, r26
     e2c:	f7 01       	movw	r30, r14
     e2e:	01 91       	ld	r16, Z+
     e30:	11 91       	ld	r17, Z+
	unsigned short i; // Scheduler for-loop iterator
	while(1) {
		// Scheduler code
		for ( i = 0; i < numTasks; i++ ) {
			// Task is ready to tick
			if ( tasks[i]->elapsedTime == tasks[i]->period ) {
     e32:	7f 01       	movw	r14, r30
     e34:	d8 01       	movw	r26, r16
     e36:	15 96       	adiw	r26, 0x05	; 5
     e38:	4d 91       	ld	r20, X+
     e3a:	5d 91       	ld	r21, X+
     e3c:	6d 91       	ld	r22, X+
     e3e:	7c 91       	ld	r23, X
     e40:	18 97       	sbiw	r26, 0x08	; 8
     e42:	11 96       	adiw	r26, 0x01	; 1
     e44:	8d 91       	ld	r24, X+
     e46:	9d 91       	ld	r25, X+
     e48:	0d 90       	ld	r0, X+
     e4a:	bc 91       	ld	r27, X
     e4c:	a0 2d       	mov	r26, r0
     e4e:	48 17       	cp	r20, r24
     e50:	59 07       	cpc	r21, r25
     e52:	6a 07       	cpc	r22, r26
     e54:	7b 07       	cpc	r23, r27
     e56:	81 f4       	brne	.+32     	; 0xe78 <main+0x30c>
     e58:	f8 01       	movw	r30, r16
     e5a:	80 81       	ld	r24, Z
     e5c:	01 84       	ldd	r0, Z+9	; 0x09
				// Setting next state for task
				tasks[i]->state = tasks[i]->TickFct(tasks[i]->state);
     e5e:	f2 85       	ldd	r31, Z+10	; 0x0a
     e60:	e0 2d       	mov	r30, r0
     e62:	08 2e       	mov	r0, r24
     e64:	00 0c       	add	r0, r0
     e66:	99 0b       	sbc	r25, r25
     e68:	09 95       	icall
     e6a:	d8 01       	movw	r26, r16
     e6c:	8c 93       	st	X, r24
     e6e:	f8 01       	movw	r30, r16
     e70:	15 82       	std	Z+5, r1	; 0x05
     e72:	16 82       	std	Z+6, r1	; 0x06
				// Reset the elapsed time for next tick.
				tasks[i]->elapsedTime = 0;
     e74:	17 82       	std	Z+7, r1	; 0x07
     e76:	10 86       	std	Z+8, r1	; 0x08
     e78:	f8 01       	movw	r30, r16
     e7a:	85 81       	ldd	r24, Z+5	; 0x05
     e7c:	96 81       	ldd	r25, Z+6	; 0x06
			}
			tasks[i]->elapsedTime += 1;
     e7e:	a7 81       	ldd	r26, Z+7	; 0x07
     e80:	b0 85       	ldd	r27, Z+8	; 0x08
     e82:	01 96       	adiw	r24, 0x01	; 1
     e84:	a1 1d       	adc	r26, r1
     e86:	b1 1d       	adc	r27, r1
     e88:	85 83       	std	Z+5, r24	; 0x05
     e8a:	96 83       	std	Z+6, r25	; 0x06
     e8c:	a7 83       	std	Z+7, r26	; 0x07
     e8e:	b0 87       	std	Z+8, r27	; 0x08
     e90:	ae 14       	cp	r10, r14
     e92:	bf 04       	cpc	r11, r15
     e94:	59 f6       	brne	.-106    	; 0xe2c <main+0x2c0>
	srand(time(NULL));

	unsigned short i; // Scheduler for-loop iterator
	while(1) {
		// Scheduler code
		for ( i = 0; i < numTasks; i++ ) {
     e96:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <TimerFlag>
     e9a:	88 23       	and	r24, r24
				// Reset the elapsed time for next tick.
				tasks[i]->elapsedTime = 0;
			}
			tasks[i]->elapsedTime += 1;
		}
		while(!TimerFlag);
     e9c:	e1 f3       	breq	.-8      	; 0xe96 <main+0x32a>
     e9e:	10 92 3a 02 	sts	0x023A, r1	; 0x80023a <TimerFlag>
     ea2:	c1 cf       	rjmp	.-126    	; 0xe26 <main+0x2ba>

00000ea4 <__divmodhi4>:
		TimerFlag = 0;
     ea4:	97 fb       	bst	r25, 7
     ea6:	07 2e       	mov	r0, r23
	}
     ea8:	16 f4       	brtc	.+4      	; 0xeae <__divmodhi4+0xa>
     eaa:	00 94       	com	r0
     eac:	06 d0       	rcall	.+12     	; 0xeba <__divmodhi4_neg1>
     eae:	77 fd       	sbrc	r23, 7
     eb0:	08 d0       	rcall	.+16     	; 0xec2 <__divmodhi4_neg2>
     eb2:	36 d0       	rcall	.+108    	; 0xf20 <__udivmodhi4>
     eb4:	07 fc       	sbrc	r0, 7
     eb6:	05 d0       	rcall	.+10     	; 0xec2 <__divmodhi4_neg2>
     eb8:	3e f4       	brtc	.+14     	; 0xec8 <__divmodhi4_exit>

00000eba <__divmodhi4_neg1>:
     eba:	90 95       	com	r25
     ebc:	81 95       	neg	r24
     ebe:	9f 4f       	sbci	r25, 0xFF	; 255
     ec0:	08 95       	ret

00000ec2 <__divmodhi4_neg2>:
     ec2:	70 95       	com	r23
     ec4:	61 95       	neg	r22
     ec6:	7f 4f       	sbci	r23, 0xFF	; 255

00000ec8 <__divmodhi4_exit>:
     ec8:	08 95       	ret

00000eca <__udivmodsi4>:
     eca:	a1 e2       	ldi	r26, 0x21	; 33
     ecc:	1a 2e       	mov	r1, r26
     ece:	aa 1b       	sub	r26, r26
     ed0:	bb 1b       	sub	r27, r27
     ed2:	fd 01       	movw	r30, r26
     ed4:	0d c0       	rjmp	.+26     	; 0xef0 <__udivmodsi4_ep>

00000ed6 <__udivmodsi4_loop>:
     ed6:	aa 1f       	adc	r26, r26
     ed8:	bb 1f       	adc	r27, r27
     eda:	ee 1f       	adc	r30, r30
     edc:	ff 1f       	adc	r31, r31
     ede:	a2 17       	cp	r26, r18
     ee0:	b3 07       	cpc	r27, r19
     ee2:	e4 07       	cpc	r30, r20
     ee4:	f5 07       	cpc	r31, r21
     ee6:	20 f0       	brcs	.+8      	; 0xef0 <__udivmodsi4_ep>
     ee8:	a2 1b       	sub	r26, r18
     eea:	b3 0b       	sbc	r27, r19
     eec:	e4 0b       	sbc	r30, r20
     eee:	f5 0b       	sbc	r31, r21

00000ef0 <__udivmodsi4_ep>:
     ef0:	66 1f       	adc	r22, r22
     ef2:	77 1f       	adc	r23, r23
     ef4:	88 1f       	adc	r24, r24
     ef6:	99 1f       	adc	r25, r25
     ef8:	1a 94       	dec	r1
     efa:	69 f7       	brne	.-38     	; 0xed6 <__udivmodsi4_loop>
     efc:	60 95       	com	r22
     efe:	70 95       	com	r23
     f00:	80 95       	com	r24
     f02:	90 95       	com	r25
     f04:	9b 01       	movw	r18, r22
     f06:	ac 01       	movw	r20, r24
     f08:	bd 01       	movw	r22, r26
     f0a:	cf 01       	movw	r24, r30
     f0c:	08 95       	ret

00000f0e <__tablejump2__>:
     f0e:	ee 0f       	add	r30, r30
     f10:	ff 1f       	adc	r31, r31
     f12:	00 24       	eor	r0, r0
     f14:	00 1c       	adc	r0, r0
     f16:	0b be       	out	0x3b, r0	; 59
     f18:	07 90       	elpm	r0, Z+
     f1a:	f6 91       	elpm	r31, Z
     f1c:	e0 2d       	mov	r30, r0
     f1e:	09 94       	ijmp

00000f20 <__udivmodhi4>:
     f20:	aa 1b       	sub	r26, r26
     f22:	bb 1b       	sub	r27, r27
     f24:	51 e1       	ldi	r21, 0x11	; 17
     f26:	07 c0       	rjmp	.+14     	; 0xf36 <__udivmodhi4_ep>

00000f28 <__udivmodhi4_loop>:
     f28:	aa 1f       	adc	r26, r26
     f2a:	bb 1f       	adc	r27, r27
     f2c:	a6 17       	cp	r26, r22
     f2e:	b7 07       	cpc	r27, r23
     f30:	10 f0       	brcs	.+4      	; 0xf36 <__udivmodhi4_ep>
     f32:	a6 1b       	sub	r26, r22
     f34:	b7 0b       	sbc	r27, r23

00000f36 <__udivmodhi4_ep>:
     f36:	88 1f       	adc	r24, r24
     f38:	99 1f       	adc	r25, r25
     f3a:	5a 95       	dec	r21
     f3c:	a9 f7       	brne	.-22     	; 0xf28 <__udivmodhi4_loop>
     f3e:	80 95       	com	r24
     f40:	90 95       	com	r25
     f42:	bc 01       	movw	r22, r24
     f44:	cd 01       	movw	r24, r26
     f46:	08 95       	ret

00000f48 <do_rand>:
     f48:	8f 92       	push	r8
     f4a:	9f 92       	push	r9
     f4c:	af 92       	push	r10
     f4e:	bf 92       	push	r11
     f50:	cf 92       	push	r12
     f52:	df 92       	push	r13
     f54:	ef 92       	push	r14
     f56:	ff 92       	push	r15
     f58:	cf 93       	push	r28
     f5a:	df 93       	push	r29
     f5c:	ec 01       	movw	r28, r24
     f5e:	68 81       	ld	r22, Y
     f60:	79 81       	ldd	r23, Y+1	; 0x01
     f62:	8a 81       	ldd	r24, Y+2	; 0x02
     f64:	9b 81       	ldd	r25, Y+3	; 0x03
     f66:	61 15       	cp	r22, r1
     f68:	71 05       	cpc	r23, r1
     f6a:	81 05       	cpc	r24, r1
     f6c:	91 05       	cpc	r25, r1
     f6e:	21 f4       	brne	.+8      	; 0xf78 <do_rand+0x30>
     f70:	64 e2       	ldi	r22, 0x24	; 36
     f72:	79 ed       	ldi	r23, 0xD9	; 217
     f74:	8b e5       	ldi	r24, 0x5B	; 91
     f76:	97 e0       	ldi	r25, 0x07	; 7
     f78:	2d e1       	ldi	r18, 0x1D	; 29
     f7a:	33 ef       	ldi	r19, 0xF3	; 243
     f7c:	41 e0       	ldi	r20, 0x01	; 1
     f7e:	50 e0       	ldi	r21, 0x00	; 0
     f80:	38 d0       	rcall	.+112    	; 0xff2 <__divmodsi4>
     f82:	49 01       	movw	r8, r18
     f84:	5a 01       	movw	r10, r20
     f86:	9b 01       	movw	r18, r22
     f88:	ac 01       	movw	r20, r24
     f8a:	a7 ea       	ldi	r26, 0xA7	; 167
     f8c:	b1 e4       	ldi	r27, 0x41	; 65
     f8e:	4d d0       	rcall	.+154    	; 0x102a <__muluhisi3>
     f90:	6b 01       	movw	r12, r22
     f92:	7c 01       	movw	r14, r24
     f94:	ac ee       	ldi	r26, 0xEC	; 236
     f96:	b4 ef       	ldi	r27, 0xF4	; 244
     f98:	a5 01       	movw	r20, r10
     f9a:	94 01       	movw	r18, r8
     f9c:	52 d0       	rcall	.+164    	; 0x1042 <__mulohisi3>
     f9e:	dc 01       	movw	r26, r24
     fa0:	cb 01       	movw	r24, r22
     fa2:	8c 0d       	add	r24, r12
     fa4:	9d 1d       	adc	r25, r13
     fa6:	ae 1d       	adc	r26, r14
     fa8:	bf 1d       	adc	r27, r15
     faa:	b7 ff       	sbrs	r27, 7
     fac:	03 c0       	rjmp	.+6      	; 0xfb4 <do_rand+0x6c>
     fae:	01 97       	sbiw	r24, 0x01	; 1
     fb0:	a1 09       	sbc	r26, r1
     fb2:	b0 48       	sbci	r27, 0x80	; 128
     fb4:	88 83       	st	Y, r24
     fb6:	99 83       	std	Y+1, r25	; 0x01
     fb8:	aa 83       	std	Y+2, r26	; 0x02
     fba:	bb 83       	std	Y+3, r27	; 0x03
     fbc:	9f 77       	andi	r25, 0x7F	; 127
     fbe:	df 91       	pop	r29
     fc0:	cf 91       	pop	r28
     fc2:	ff 90       	pop	r15
     fc4:	ef 90       	pop	r14
     fc6:	df 90       	pop	r13
     fc8:	cf 90       	pop	r12
     fca:	bf 90       	pop	r11
     fcc:	af 90       	pop	r10
     fce:	9f 90       	pop	r9
     fd0:	8f 90       	pop	r8
     fd2:	08 95       	ret

00000fd4 <rand_r>:
     fd4:	b9 cf       	rjmp	.-142    	; 0xf48 <do_rand>

00000fd6 <rand>:
     fd6:	80 e0       	ldi	r24, 0x00	; 0
     fd8:	91 e0       	ldi	r25, 0x01	; 1
     fda:	b6 cf       	rjmp	.-148    	; 0xf48 <do_rand>

00000fdc <srand>:
     fdc:	a0 e0       	ldi	r26, 0x00	; 0
     fde:	b0 e0       	ldi	r27, 0x00	; 0
     fe0:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     fe4:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
     fe8:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
     fec:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
     ff0:	08 95       	ret

00000ff2 <__divmodsi4>:
     ff2:	05 2e       	mov	r0, r21
     ff4:	97 fb       	bst	r25, 7
     ff6:	16 f4       	brtc	.+4      	; 0xffc <__divmodsi4+0xa>
     ff8:	00 94       	com	r0
     ffa:	0f d0       	rcall	.+30     	; 0x101a <__negsi2>
     ffc:	57 fd       	sbrc	r21, 7
     ffe:	05 d0       	rcall	.+10     	; 0x100a <__divmodsi4_neg2>
    1000:	64 df       	rcall	.-312    	; 0xeca <__udivmodsi4>
    1002:	07 fc       	sbrc	r0, 7
    1004:	02 d0       	rcall	.+4      	; 0x100a <__divmodsi4_neg2>
    1006:	46 f4       	brtc	.+16     	; 0x1018 <__divmodsi4_exit>
    1008:	08 c0       	rjmp	.+16     	; 0x101a <__negsi2>

0000100a <__divmodsi4_neg2>:
    100a:	50 95       	com	r21
    100c:	40 95       	com	r20
    100e:	30 95       	com	r19
    1010:	21 95       	neg	r18
    1012:	3f 4f       	sbci	r19, 0xFF	; 255
    1014:	4f 4f       	sbci	r20, 0xFF	; 255
    1016:	5f 4f       	sbci	r21, 0xFF	; 255

00001018 <__divmodsi4_exit>:
    1018:	08 95       	ret

0000101a <__negsi2>:
    101a:	90 95       	com	r25
    101c:	80 95       	com	r24
    101e:	70 95       	com	r23
    1020:	61 95       	neg	r22
    1022:	7f 4f       	sbci	r23, 0xFF	; 255
    1024:	8f 4f       	sbci	r24, 0xFF	; 255
    1026:	9f 4f       	sbci	r25, 0xFF	; 255
    1028:	08 95       	ret

0000102a <__muluhisi3>:
    102a:	0f d0       	rcall	.+30     	; 0x104a <__umulhisi3>
    102c:	a5 9f       	mul	r26, r21
    102e:	90 0d       	add	r25, r0
    1030:	b4 9f       	mul	r27, r20
    1032:	90 0d       	add	r25, r0
    1034:	a4 9f       	mul	r26, r20
    1036:	80 0d       	add	r24, r0
    1038:	91 1d       	adc	r25, r1
    103a:	11 24       	eor	r1, r1
    103c:	08 95       	ret

0000103e <__mulshisi3>:
    103e:	b7 ff       	sbrs	r27, 7
    1040:	f4 cf       	rjmp	.-24     	; 0x102a <__muluhisi3>

00001042 <__mulohisi3>:
    1042:	f3 df       	rcall	.-26     	; 0x102a <__muluhisi3>
    1044:	82 1b       	sub	r24, r18
    1046:	93 0b       	sbc	r25, r19
    1048:	08 95       	ret

0000104a <__umulhisi3>:
    104a:	a2 9f       	mul	r26, r18
    104c:	b0 01       	movw	r22, r0
    104e:	b3 9f       	mul	r27, r19
    1050:	c0 01       	movw	r24, r0
    1052:	a3 9f       	mul	r26, r19
    1054:	70 0d       	add	r23, r0
    1056:	81 1d       	adc	r24, r1
    1058:	11 24       	eor	r1, r1
    105a:	91 1d       	adc	r25, r1
    105c:	b2 9f       	mul	r27, r18
    105e:	70 0d       	add	r23, r0
    1060:	81 1d       	adc	r24, r1
    1062:	11 24       	eor	r1, r1
    1064:	91 1d       	adc	r25, r1
    1066:	08 95       	ret

00001068 <_exit>:
    1068:	f8 94       	cli

0000106a <__stop_program>:
    106a:	ff cf       	rjmp	.-2      	; 0x106a <__stop_program>
