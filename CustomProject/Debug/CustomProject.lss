
CustomProject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000ba  00800100  00000eb0  00000f44  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000eb0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000066  008001ba  008001ba  00000ffe  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000ffe  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001030  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000108  00000000  00000000  00001070  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001947  00000000  00000000  00001178  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000af6  00000000  00000000  00002abf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000da0  00000000  00000000  000035b5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002ec  00000000  00000000  00004358  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a57  00000000  00000000  00004644  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000013ca  00000000  00000000  0000509b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001a0  00000000  00000000  00006465  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	4a c1       	rjmp	.+660    	; 0x2ca <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e0 eb       	ldi	r30, 0xB0	; 176
  a0:	fe e0       	ldi	r31, 0x0E	; 14
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	aa 3b       	cpi	r26, 0xBA	; 186
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	22 e0       	ldi	r18, 0x02	; 2
  b4:	aa eb       	ldi	r26, 0xBA	; 186
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a0 32       	cpi	r26, 0x20	; 32
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	71 d4       	rcall	.+2274   	; 0x9a6 <main>
  c4:	f3 c6       	rjmp	.+3558   	; 0xeac <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <time>:
  c8:	fc 01       	movw	r30, r24
  ca:	0f b6       	in	r0, 0x3f	; 63
  cc:	f8 94       	cli
  ce:	60 91 1c 02 	lds	r22, 0x021C	; 0x80021c <__system_time>
  d2:	70 91 1d 02 	lds	r23, 0x021D	; 0x80021d <__system_time+0x1>
  d6:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <__system_time+0x2>
  da:	90 91 1f 02 	lds	r25, 0x021F	; 0x80021f <__system_time+0x3>
  de:	0f be       	out	0x3f, r0	; 63
  e0:	30 97       	sbiw	r30, 0x00	; 0
  e2:	21 f0       	breq	.+8      	; 0xec <time+0x24>
  e4:	60 83       	st	Z, r22
  e6:	71 83       	std	Z+1, r23	; 0x01
  e8:	82 83       	std	Z+2, r24	; 0x02
  ea:	93 83       	std	Z+3, r25	; 0x03
  ec:	08 95       	ret

000000ee <game_start_tick>:
		if(c==0){return b;}
		a = b;
		b = c;
	}
	return 0;
}
  ee:	20 91 15 02 	lds	r18, 0x0215	; 0x800215 <gameOverFlag>
  f2:	21 30       	cpi	r18, 0x01	; 1
  f4:	91 f0       	breq	.+36     	; 0x11a <game_start_tick+0x2c>
  f6:	81 30       	cpi	r24, 0x01	; 1
  f8:	91 05       	cpc	r25, r1
  fa:	51 f0       	breq	.+20     	; 0x110 <game_start_tick+0x22>
  fc:	82 30       	cpi	r24, 0x02	; 2
  fe:	91 05       	cpc	r25, r1
 100:	61 f0       	breq	.+24     	; 0x11a <game_start_tick+0x2c>
 102:	00 97       	sbiw	r24, 0x00	; 0
 104:	89 f4       	brne	.+34     	; 0x128 <game_start_tick+0x3a>
 106:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <key>
 10a:	81 34       	cpi	r24, 0x41	; 65
 10c:	a9 f4       	brne	.+42     	; 0x138 <game_start_tick+0x4a>
 10e:	19 c0       	rjmp	.+50     	; 0x142 <game_start_tick+0x54>
 110:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <key>
 114:	84 34       	cpi	r24, 0x44	; 68
 116:	a9 f4       	brne	.+42     	; 0x142 <game_start_tick+0x54>
 118:	0f c0       	rjmp	.+30     	; 0x138 <game_start_tick+0x4a>
 11a:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <key>
 11e:	83 34       	cpi	r24, 0x43	; 67
 120:	b1 f4       	brne	.+44     	; 0x14e <game_start_tick+0x60>
 122:	10 92 15 02 	sts	0x0215, r1	; 0x800215 <gameOverFlag>
 126:	08 c0       	rjmp	.+16     	; 0x138 <game_start_tick+0x4a>
 128:	81 30       	cpi	r24, 0x01	; 1
 12a:	91 05       	cpc	r25, r1
 12c:	51 f0       	breq	.+20     	; 0x142 <game_start_tick+0x54>
 12e:	82 30       	cpi	r24, 0x02	; 2
 130:	91 05       	cpc	r25, r1
 132:	69 f0       	breq	.+26     	; 0x14e <game_start_tick+0x60>
 134:	00 97       	sbiw	r24, 0x00	; 0
 136:	79 f4       	brne	.+30     	; 0x156 <game_start_tick+0x68>
 138:	10 92 16 02 	sts	0x0216, r1	; 0x800216 <playFlag>
 13c:	80 e0       	ldi	r24, 0x00	; 0
 13e:	90 e0       	ldi	r25, 0x00	; 0
 140:	08 95       	ret
 142:	81 e0       	ldi	r24, 0x01	; 1
 144:	80 93 16 02 	sts	0x0216, r24	; 0x800216 <playFlag>
 148:	81 e0       	ldi	r24, 0x01	; 1
 14a:	90 e0       	ldi	r25, 0x00	; 0
 14c:	08 95       	ret
 14e:	10 92 16 02 	sts	0x0216, r1	; 0x800216 <playFlag>
 152:	82 e0       	ldi	r24, 0x02	; 2
 154:	90 e0       	ldi	r25, 0x00	; 0
 156:	08 95       	ret

00000158 <terrain_tick>:
 158:	00 97       	sbiw	r24, 0x00	; 0
 15a:	21 f0       	breq	.+8      	; 0x164 <terrain_tick+0xc>
 15c:	81 30       	cpi	r24, 0x01	; 1
 15e:	91 05       	cpc	r25, r1
 160:	31 f0       	breq	.+12     	; 0x16e <terrain_tick+0x16>
 162:	0a c0       	rjmp	.+20     	; 0x178 <terrain_tick+0x20>
 164:	80 91 16 02 	lds	r24, 0x0216	; 0x800216 <playFlag>
 168:	81 30       	cpi	r24, 0x01	; 1
 16a:	61 f4       	brne	.+24     	; 0x184 <terrain_tick+0x2c>
 16c:	10 c0       	rjmp	.+32     	; 0x18e <terrain_tick+0x36>
 16e:	80 91 16 02 	lds	r24, 0x0216	; 0x800216 <playFlag>
 172:	88 23       	and	r24, r24
 174:	39 f0       	breq	.+14     	; 0x184 <terrain_tick+0x2c>
 176:	0b c0       	rjmp	.+22     	; 0x18e <terrain_tick+0x36>
 178:	00 97       	sbiw	r24, 0x00	; 0
 17a:	21 f0       	breq	.+8      	; 0x184 <terrain_tick+0x2c>
 17c:	81 30       	cpi	r24, 0x01	; 1
 17e:	91 05       	cpc	r25, r1
 180:	69 f4       	brne	.+26     	; 0x19c <terrain_tick+0x44>
 182:	05 c0       	rjmp	.+10     	; 0x18e <terrain_tick+0x36>
 184:	10 92 13 02 	sts	0x0213, r1	; 0x800213 <terrainShift>
 188:	80 e0       	ldi	r24, 0x00	; 0
 18a:	90 e0       	ldi	r25, 0x00	; 0
 18c:	08 95       	ret
 18e:	80 91 13 02 	lds	r24, 0x0213	; 0x800213 <terrainShift>
 192:	8f 5f       	subi	r24, 0xFF	; 255
 194:	80 93 13 02 	sts	0x0213, r24	; 0x800213 <terrainShift>
 198:	81 e0       	ldi	r24, 0x01	; 1
 19a:	90 e0       	ldi	r25, 0x00	; 0
 19c:	08 95       	ret

0000019e <collision_tick>:
 19e:	ef 92       	push	r14
 1a0:	ff 92       	push	r15
 1a2:	0f 93       	push	r16
 1a4:	1f 93       	push	r17
 1a6:	cf 93       	push	r28
 1a8:	df 93       	push	r29
 1aa:	00 97       	sbiw	r24, 0x00	; 0
 1ac:	21 f0       	breq	.+8      	; 0x1b6 <collision_tick+0x18>
 1ae:	81 30       	cpi	r24, 0x01	; 1
 1b0:	91 05       	cpc	r25, r1
 1b2:	49 f0       	breq	.+18     	; 0x1c6 <collision_tick+0x28>
 1b4:	0e c0       	rjmp	.+28     	; 0x1d2 <collision_tick+0x34>
 1b6:	20 91 16 02 	lds	r18, 0x0216	; 0x800216 <playFlag>
 1ba:	21 30       	cpi	r18, 0x01	; 1
 1bc:	09 f0       	breq	.+2      	; 0x1c0 <collision_tick+0x22>
 1be:	49 c0       	rjmp	.+146    	; 0x252 <collision_tick+0xb4>
 1c0:	10 92 14 02 	sts	0x0214, r1	; 0x800214 <score>
 1c4:	09 c0       	rjmp	.+18     	; 0x1d8 <collision_tick+0x3a>
 1c6:	80 91 16 02 	lds	r24, 0x0216	; 0x800216 <playFlag>
 1ca:	88 23       	and	r24, r24
 1cc:	09 f4       	brne	.+2      	; 0x1d0 <collision_tick+0x32>
 1ce:	3f c0       	rjmp	.+126    	; 0x24e <collision_tick+0xb0>
 1d0:	03 c0       	rjmp	.+6      	; 0x1d8 <collision_tick+0x3a>
 1d2:	81 30       	cpi	r24, 0x01	; 1
 1d4:	91 05       	cpc	r25, r1
 1d6:	e9 f5       	brne	.+122    	; 0x252 <collision_tick+0xb4>
 1d8:	60 91 14 02 	lds	r22, 0x0214	; 0x800214 <score>
 1dc:	a7 e2       	ldi	r26, 0x27	; 39
 1de:	b1 e0       	ldi	r27, 0x01	; 1
 1e0:	0c e2       	ldi	r16, 0x2C	; 44
 1e2:	11 e0       	ldi	r17, 0x01	; 1
 1e4:	47 e2       	ldi	r20, 0x27	; 39
 1e6:	51 e0       	ldi	r21, 0x01	; 1
 1e8:	7f ef       	ldi	r23, 0xFF	; 255
 1ea:	7d 01       	movw	r14, r26
 1ec:	8c 91       	ld	r24, X
 1ee:	8f 3f       	cpi	r24, 0xFF	; 255
 1f0:	81 f0       	breq	.+32     	; 0x212 <collision_tick+0x74>
 1f2:	e4 e2       	ldi	r30, 0x24	; 36
 1f4:	f1 e0       	ldi	r31, 0x01	; 1
 1f6:	80 81       	ld	r24, Z
 1f8:	8f 3f       	cpi	r24, 0xFF	; 255
 1fa:	39 f0       	breq	.+14     	; 0x20a <collision_tick+0x6c>
 1fc:	e7 01       	movw	r28, r14
 1fe:	98 81       	ld	r25, Y
 200:	89 13       	cpse	r24, r25
 202:	03 c0       	rjmp	.+6      	; 0x20a <collision_tick+0x6c>
 204:	6f 5f       	subi	r22, 0xFF	; 255
 206:	78 83       	st	Y, r23
 208:	70 83       	st	Z, r23
 20a:	31 96       	adiw	r30, 0x01	; 1
 20c:	e4 17       	cp	r30, r20
 20e:	f5 07       	cpc	r31, r21
 210:	91 f7       	brne	.-28     	; 0x1f6 <collision_tick+0x58>
 212:	11 96       	adiw	r26, 0x01	; 1
 214:	a0 17       	cp	r26, r16
 216:	b1 07       	cpc	r27, r17
 218:	41 f7       	brne	.-48     	; 0x1ea <collision_tick+0x4c>
 21a:	60 93 14 02 	sts	0x0214, r22	; 0x800214 <score>
 21e:	80 91 12 02 	lds	r24, 0x0212	; 0x800212 <player_one_location>
 222:	90 91 15 02 	lds	r25, 0x0215	; 0x800215 <gameOverFlag>
 226:	20 91 24 01 	lds	r18, 0x0124	; 0x800124 <enemy_location>
 22a:	82 13       	cpse	r24, r18
 22c:	01 c0       	rjmp	.+2      	; 0x230 <collision_tick+0x92>
 22e:	91 e0       	ldi	r25, 0x01	; 1
 230:	20 91 25 01 	lds	r18, 0x0125	; 0x800125 <enemy_location+0x1>
 234:	82 13       	cpse	r24, r18
 236:	01 c0       	rjmp	.+2      	; 0x23a <collision_tick+0x9c>
 238:	91 e0       	ldi	r25, 0x01	; 1
 23a:	20 91 26 01 	lds	r18, 0x0126	; 0x800126 <enemy_location+0x2>
 23e:	28 13       	cpse	r18, r24
 240:	01 c0       	rjmp	.+2      	; 0x244 <collision_tick+0xa6>
 242:	91 e0       	ldi	r25, 0x01	; 1
 244:	90 93 15 02 	sts	0x0215, r25	; 0x800215 <gameOverFlag>
 248:	81 e0       	ldi	r24, 0x01	; 1
 24a:	90 e0       	ldi	r25, 0x00	; 0
 24c:	02 c0       	rjmp	.+4      	; 0x252 <collision_tick+0xb4>
 24e:	80 e0       	ldi	r24, 0x00	; 0
 250:	90 e0       	ldi	r25, 0x00	; 0
 252:	df 91       	pop	r29
 254:	cf 91       	pop	r28
 256:	1f 91       	pop	r17
 258:	0f 91       	pop	r16
 25a:	ff 90       	pop	r15
 25c:	ef 90       	pop	r14
 25e:	08 95       	ret

00000260 <TimerSet>:
 260:	60 93 2d 01 	sts	0x012D, r22	; 0x80012d <_avr_timer_M>
 264:	70 93 2e 01 	sts	0x012E, r23	; 0x80012e <_avr_timer_M+0x1>
 268:	80 93 2f 01 	sts	0x012F, r24	; 0x80012f <_avr_timer_M+0x2>
 26c:	90 93 30 01 	sts	0x0130, r25	; 0x800130 <_avr_timer_M+0x3>
 270:	60 93 17 02 	sts	0x0217, r22	; 0x800217 <_avr_timer_cntcurr>
 274:	70 93 18 02 	sts	0x0218, r23	; 0x800218 <_avr_timer_cntcurr+0x1>
 278:	80 93 19 02 	sts	0x0219, r24	; 0x800219 <_avr_timer_cntcurr+0x2>
 27c:	90 93 1a 02 	sts	0x021A, r25	; 0x80021a <_avr_timer_cntcurr+0x3>
 280:	08 95       	ret

00000282 <TimerOn>:
 282:	8b e0       	ldi	r24, 0x0B	; 11
 284:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 288:	8d e7       	ldi	r24, 0x7D	; 125
 28a:	90 e0       	ldi	r25, 0x00	; 0
 28c:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 290:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 294:	82 e0       	ldi	r24, 0x02	; 2
 296:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 29a:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 29e:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 2a2:	80 91 2d 01 	lds	r24, 0x012D	; 0x80012d <_avr_timer_M>
 2a6:	90 91 2e 01 	lds	r25, 0x012E	; 0x80012e <_avr_timer_M+0x1>
 2aa:	a0 91 2f 01 	lds	r26, 0x012F	; 0x80012f <_avr_timer_M+0x2>
 2ae:	b0 91 30 01 	lds	r27, 0x0130	; 0x800130 <_avr_timer_M+0x3>
 2b2:	80 93 17 02 	sts	0x0217, r24	; 0x800217 <_avr_timer_cntcurr>
 2b6:	90 93 18 02 	sts	0x0218, r25	; 0x800218 <_avr_timer_cntcurr+0x1>
 2ba:	a0 93 19 02 	sts	0x0219, r26	; 0x800219 <_avr_timer_cntcurr+0x2>
 2be:	b0 93 1a 02 	sts	0x021A, r27	; 0x80021a <_avr_timer_cntcurr+0x3>
 2c2:	8f b7       	in	r24, 0x3f	; 63
 2c4:	80 68       	ori	r24, 0x80	; 128
 2c6:	8f bf       	out	0x3f, r24	; 63
 2c8:	08 95       	ret

000002ca <__vector_13>:
 2ca:	1f 92       	push	r1
 2cc:	0f 92       	push	r0
 2ce:	0f b6       	in	r0, 0x3f	; 63
 2d0:	0f 92       	push	r0
 2d2:	11 24       	eor	r1, r1
 2d4:	8f 93       	push	r24
 2d6:	9f 93       	push	r25
 2d8:	af 93       	push	r26
 2da:	bf 93       	push	r27
 2dc:	80 91 17 02 	lds	r24, 0x0217	; 0x800217 <_avr_timer_cntcurr>
 2e0:	90 91 18 02 	lds	r25, 0x0218	; 0x800218 <_avr_timer_cntcurr+0x1>
 2e4:	a0 91 19 02 	lds	r26, 0x0219	; 0x800219 <_avr_timer_cntcurr+0x2>
 2e8:	b0 91 1a 02 	lds	r27, 0x021A	; 0x80021a <_avr_timer_cntcurr+0x3>
 2ec:	01 97       	sbiw	r24, 0x01	; 1
 2ee:	a1 09       	sbc	r26, r1
 2f0:	b1 09       	sbc	r27, r1
 2f2:	80 93 17 02 	sts	0x0217, r24	; 0x800217 <_avr_timer_cntcurr>
 2f6:	90 93 18 02 	sts	0x0218, r25	; 0x800218 <_avr_timer_cntcurr+0x1>
 2fa:	a0 93 19 02 	sts	0x0219, r26	; 0x800219 <_avr_timer_cntcurr+0x2>
 2fe:	b0 93 1a 02 	sts	0x021A, r27	; 0x80021a <_avr_timer_cntcurr+0x3>
 302:	89 2b       	or	r24, r25
 304:	8a 2b       	or	r24, r26
 306:	8b 2b       	or	r24, r27
 308:	99 f4       	brne	.+38     	; 0x330 <__vector_13+0x66>
 30a:	81 e0       	ldi	r24, 0x01	; 1
 30c:	80 93 1b 02 	sts	0x021B, r24	; 0x80021b <TimerFlag>
 310:	80 91 2d 01 	lds	r24, 0x012D	; 0x80012d <_avr_timer_M>
 314:	90 91 2e 01 	lds	r25, 0x012E	; 0x80012e <_avr_timer_M+0x1>
 318:	a0 91 2f 01 	lds	r26, 0x012F	; 0x80012f <_avr_timer_M+0x2>
 31c:	b0 91 30 01 	lds	r27, 0x0130	; 0x800130 <_avr_timer_M+0x3>
 320:	80 93 17 02 	sts	0x0217, r24	; 0x800217 <_avr_timer_cntcurr>
 324:	90 93 18 02 	sts	0x0218, r25	; 0x800218 <_avr_timer_cntcurr+0x1>
 328:	a0 93 19 02 	sts	0x0219, r26	; 0x800219 <_avr_timer_cntcurr+0x2>
 32c:	b0 93 1a 02 	sts	0x021A, r27	; 0x80021a <_avr_timer_cntcurr+0x3>
 330:	bf 91       	pop	r27
 332:	af 91       	pop	r26
 334:	9f 91       	pop	r25
 336:	8f 91       	pop	r24
 338:	0f 90       	pop	r0
 33a:	0f be       	out	0x3f, r0	; 63
 33c:	0f 90       	pop	r0
 33e:	1f 90       	pop	r1
 340:	18 95       	reti

00000342 <delay_ms>:
 342:	18 16       	cp	r1, r24
 344:	19 06       	cpc	r1, r25
 346:	5c f0       	brlt	.+22     	; 0x35e <delay_ms+0x1c>
 348:	08 95       	ret
 34a:	00 00       	nop
 34c:	21 50       	subi	r18, 0x01	; 1
 34e:	31 09       	sbc	r19, r1
 350:	e1 f7       	brne	.-8      	; 0x34a <delay_ms+0x8>
 352:	4f 5f       	subi	r20, 0xFF	; 255
 354:	5f 4f       	sbci	r21, 0xFF	; 255
 356:	84 17       	cp	r24, r20
 358:	95 07       	cpc	r25, r21
 35a:	19 f4       	brne	.+6      	; 0x362 <delay_ms+0x20>
 35c:	08 95       	ret
 35e:	40 e0       	ldi	r20, 0x00	; 0
 360:	50 e0       	ldi	r21, 0x00	; 0
 362:	27 e0       	ldi	r18, 0x07	; 7
 364:	33 e0       	ldi	r19, 0x03	; 3
 366:	f1 cf       	rjmp	.-30     	; 0x34a <delay_ms+0x8>

00000368 <LCD_WriteCommand>:
 368:	10 98       	cbi	0x02, 0	; 2
 36a:	8b b9       	out	0x0b, r24	; 11
 36c:	11 9a       	sbi	0x02, 1	; 2
 36e:	00 00       	nop
 370:	11 98       	cbi	0x02, 1	; 2
 372:	82 e0       	ldi	r24, 0x02	; 2
 374:	90 e0       	ldi	r25, 0x00	; 0
 376:	e5 cf       	rjmp	.-54     	; 0x342 <delay_ms>
 378:	08 95       	ret

0000037a <LCD_ClearScreen>:
 37a:	81 e0       	ldi	r24, 0x01	; 1
 37c:	f5 cf       	rjmp	.-22     	; 0x368 <LCD_WriteCommand>
 37e:	08 95       	ret

00000380 <LCD_Cursor>:
 380:	81 31       	cpi	r24, 0x11	; 17
 382:	18 f4       	brcc	.+6      	; 0x38a <LCD_Cursor+0xa>
 384:	81 58       	subi	r24, 0x81	; 129
 386:	f0 cf       	rjmp	.-32     	; 0x368 <LCD_WriteCommand>
 388:	08 95       	ret
 38a:	81 55       	subi	r24, 0x51	; 81
 38c:	ed cf       	rjmp	.-38     	; 0x368 <LCD_WriteCommand>
 38e:	08 95       	ret

00000390 <LCD_init>:
 390:	84 e6       	ldi	r24, 0x64	; 100
 392:	90 e0       	ldi	r25, 0x00	; 0
 394:	d6 df       	rcall	.-84     	; 0x342 <delay_ms>
 396:	88 e3       	ldi	r24, 0x38	; 56
 398:	e7 df       	rcall	.-50     	; 0x368 <LCD_WriteCommand>
 39a:	86 e0       	ldi	r24, 0x06	; 6
 39c:	e5 df       	rcall	.-54     	; 0x368 <LCD_WriteCommand>
 39e:	8f e0       	ldi	r24, 0x0F	; 15
 3a0:	e3 df       	rcall	.-58     	; 0x368 <LCD_WriteCommand>
 3a2:	81 e0       	ldi	r24, 0x01	; 1
 3a4:	e1 df       	rcall	.-62     	; 0x368 <LCD_WriteCommand>
 3a6:	8a e0       	ldi	r24, 0x0A	; 10
 3a8:	90 e0       	ldi	r25, 0x00	; 0
 3aa:	cb cf       	rjmp	.-106    	; 0x342 <delay_ms>
 3ac:	08 95       	ret

000003ae <LCD_WriteData>:
 3ae:	10 9a       	sbi	0x02, 0	; 2
 3b0:	8b b9       	out	0x0b, r24	; 11
 3b2:	11 9a       	sbi	0x02, 1	; 2
 3b4:	00 00       	nop
 3b6:	11 98       	cbi	0x02, 1	; 2
 3b8:	81 e0       	ldi	r24, 0x01	; 1
 3ba:	90 e0       	ldi	r25, 0x00	; 0
 3bc:	c2 cf       	rjmp	.-124    	; 0x342 <delay_ms>
 3be:	08 95       	ret

000003c0 <LCD_DisplayString>:
 3c0:	0f 93       	push	r16
 3c2:	1f 93       	push	r17
 3c4:	cf 93       	push	r28
 3c6:	df 93       	push	r29
 3c8:	18 2f       	mov	r17, r24
 3ca:	eb 01       	movw	r28, r22
 3cc:	d6 df       	rcall	.-84     	; 0x37a <LCD_ClearScreen>
 3ce:	88 81       	ld	r24, Y
 3d0:	88 23       	and	r24, r24
 3d2:	51 f0       	breq	.+20     	; 0x3e8 <LCD_DisplayString+0x28>
 3d4:	01 e0       	ldi	r16, 0x01	; 1
 3d6:	01 0f       	add	r16, r17
 3d8:	81 2f       	mov	r24, r17
 3da:	d2 df       	rcall	.-92     	; 0x380 <LCD_Cursor>
 3dc:	89 91       	ld	r24, Y+
 3de:	e7 df       	rcall	.-50     	; 0x3ae <LCD_WriteData>
 3e0:	10 2f       	mov	r17, r16
 3e2:	88 81       	ld	r24, Y
 3e4:	81 11       	cpse	r24, r1
 3e6:	f6 cf       	rjmp	.-20     	; 0x3d4 <LCD_DisplayString+0x14>
 3e8:	df 91       	pop	r29
 3ea:	cf 91       	pop	r28
 3ec:	1f 91       	pop	r17
 3ee:	0f 91       	pop	r16
 3f0:	08 95       	ret

000003f2 <display_tick>:
 3f2:	ef 92       	push	r14
 3f4:	ff 92       	push	r15
 3f6:	0f 93       	push	r16
 3f8:	1f 93       	push	r17
 3fa:	cf 93       	push	r28
 3fc:	81 30       	cpi	r24, 0x01	; 1
 3fe:	91 05       	cpc	r25, r1
 400:	51 f0       	breq	.+20     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 402:	82 30       	cpi	r24, 0x02	; 2
 404:	91 05       	cpc	r25, r1
 406:	a9 f0       	breq	.+42     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 408:	00 97       	sbiw	r24, 0x00	; 0
 40a:	e1 f4       	brne	.+56     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 40c:	80 91 16 02 	lds	r24, 0x0216	; 0x800216 <playFlag>
 410:	81 30       	cpi	r24, 0x01	; 1
 412:	11 f5       	brne	.+68     	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
 414:	8a c0       	rjmp	.+276    	; 0x52a <__LOCK_REGION_LENGTH__+0x12a>
 416:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <gameOverFlag>
 41a:	81 11       	cpse	r24, r1
 41c:	04 c0       	rjmp	.+8      	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 41e:	80 91 16 02 	lds	r24, 0x0216	; 0x800216 <playFlag>
 422:	88 23       	and	r24, r24
 424:	c9 f0       	breq	.+50     	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
 426:	80 91 16 02 	lds	r24, 0x0216	; 0x800216 <playFlag>
 42a:	81 30       	cpi	r24, 0x01	; 1
 42c:	09 f4       	brne	.+2      	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 42e:	7d c0       	rjmp	.+250    	; 0x52a <__LOCK_REGION_LENGTH__+0x12a>
 430:	24 c0       	rjmp	.+72     	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 432:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <gameOverFlag>
 436:	81 30       	cpi	r24, 0x01	; 1
 438:	01 f1       	breq	.+64     	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 43a:	80 91 16 02 	lds	r24, 0x0216	; 0x800216 <playFlag>
 43e:	88 23       	and	r24, r24
 440:	59 f0       	breq	.+22     	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
 442:	73 c0       	rjmp	.+230    	; 0x52a <__LOCK_REGION_LENGTH__+0x12a>
 444:	81 30       	cpi	r24, 0x01	; 1
 446:	91 05       	cpc	r25, r1
 448:	c1 f0       	breq	.+48     	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 44a:	82 30       	cpi	r24, 0x02	; 2
 44c:	91 05       	cpc	r25, r1
 44e:	09 f4       	brne	.+2      	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 450:	6c c0       	rjmp	.+216    	; 0x52a <__LOCK_REGION_LENGTH__+0x12a>
 452:	00 97       	sbiw	r24, 0x00	; 0
 454:	09 f0       	breq	.+2      	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
 456:	c0 c0       	rjmp	.+384    	; 0x5d8 <__LOCK_REGION_LENGTH__+0x1d8>
 458:	09 e9       	ldi	r16, 0x99	; 153
 45a:	11 e0       	ldi	r17, 0x01	; 1
 45c:	c0 e0       	ldi	r28, 0x00	; 0
 45e:	cf 5f       	subi	r28, 0xFF	; 255
 460:	8c 2f       	mov	r24, r28
 462:	8e df       	rcall	.-228    	; 0x380 <LCD_Cursor>
 464:	f8 01       	movw	r30, r16
 466:	81 91       	ld	r24, Z+
 468:	8f 01       	movw	r16, r30
 46a:	a1 df       	rcall	.-190    	; 0x3ae <LCD_WriteData>
 46c:	80 e0       	ldi	r24, 0x00	; 0
 46e:	88 df       	rcall	.-240    	; 0x380 <LCD_Cursor>
 470:	c0 32       	cpi	r28, 0x20	; 32
 472:	a9 f7       	brne	.-22     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 474:	80 e0       	ldi	r24, 0x00	; 0
 476:	90 e0       	ldi	r25, 0x00	; 0
 478:	af c0       	rjmp	.+350    	; 0x5d8 <__LOCK_REGION_LENGTH__+0x1d8>
 47a:	7f df       	rcall	.-258    	; 0x37a <LCD_ClearScreen>
 47c:	61 e4       	ldi	r22, 0x41	; 65
 47e:	71 e0       	ldi	r23, 0x01	; 1
 480:	81 e0       	ldi	r24, 0x01	; 1
 482:	9e df       	rcall	.-196    	; 0x3c0 <LCD_DisplayString>
 484:	c0 91 14 02 	lds	r28, 0x0214	; 0x800214 <score>
 488:	0d ec       	ldi	r16, 0xCD	; 205
 48a:	c0 9f       	mul	r28, r16
 48c:	11 2d       	mov	r17, r1
 48e:	11 24       	eor	r1, r1
 490:	16 95       	lsr	r17
 492:	16 95       	lsr	r17
 494:	16 95       	lsr	r17
 496:	11 0f       	add	r17, r17
 498:	81 2f       	mov	r24, r17
 49a:	88 0f       	add	r24, r24
 49c:	88 0f       	add	r24, r24
 49e:	18 0f       	add	r17, r24
 4a0:	fc 2f       	mov	r31, r28
 4a2:	f1 1b       	sub	r31, r17
 4a4:	1f 2f       	mov	r17, r31
 4a6:	cf 1b       	sub	r28, r31
 4a8:	89 e2       	ldi	r24, 0x29	; 41
 4aa:	c8 9f       	mul	r28, r24
 4ac:	81 2d       	mov	r24, r1
 4ae:	11 24       	eor	r1, r1
 4b0:	82 95       	swap	r24
 4b2:	8f 70       	andi	r24, 0x0F	; 15
 4b4:	9c 2f       	mov	r25, r28
 4b6:	24 e6       	ldi	r18, 0x64	; 100
 4b8:	82 9f       	mul	r24, r18
 4ba:	90 19       	sub	r25, r0
 4bc:	11 24       	eor	r1, r1
 4be:	90 9f       	mul	r25, r16
 4c0:	01 2d       	mov	r16, r1
 4c2:	11 24       	eor	r1, r1
 4c4:	06 95       	lsr	r16
 4c6:	06 95       	lsr	r16
 4c8:	06 95       	lsr	r16
 4ca:	88 e0       	ldi	r24, 0x08	; 8
 4cc:	59 df       	rcall	.-334    	; 0x380 <LCD_Cursor>
 4ce:	c0 1b       	sub	r28, r16
 4d0:	8c 2f       	mov	r24, r28
 4d2:	90 e0       	ldi	r25, 0x00	; 0
 4d4:	68 ee       	ldi	r22, 0xE8	; 232
 4d6:	73 e0       	ldi	r23, 0x03	; 3
 4d8:	10 d4       	rcall	.+2080   	; 0xcfa <__divmodhi4>
 4da:	64 e6       	ldi	r22, 0x64	; 100
 4dc:	70 e0       	ldi	r23, 0x00	; 0
 4de:	0d d4       	rcall	.+2074   	; 0xcfa <__divmodhi4>
 4e0:	80 e3       	ldi	r24, 0x30	; 48
 4e2:	86 0f       	add	r24, r22
 4e4:	64 df       	rcall	.-312    	; 0x3ae <LCD_WriteData>
 4e6:	89 e0       	ldi	r24, 0x09	; 9
 4e8:	4b df       	rcall	.-362    	; 0x380 <LCD_Cursor>
 4ea:	80 e3       	ldi	r24, 0x30	; 48
 4ec:	80 0f       	add	r24, r16
 4ee:	5f df       	rcall	.-322    	; 0x3ae <LCD_WriteData>
 4f0:	8a e0       	ldi	r24, 0x0A	; 10
 4f2:	46 df       	rcall	.-372    	; 0x380 <LCD_Cursor>
 4f4:	80 e3       	ldi	r24, 0x30	; 48
 4f6:	81 0f       	add	r24, r17
 4f8:	5a df       	rcall	.-332    	; 0x3ae <LCD_WriteData>
 4fa:	09 e8       	ldi	r16, 0x89	; 137
 4fc:	11 e0       	ldi	r17, 0x01	; 1
 4fe:	0f 2e       	mov	r0, r31
 500:	f9 e9       	ldi	r31, 0x99	; 153
 502:	ef 2e       	mov	r14, r31
 504:	f1 e0       	ldi	r31, 0x01	; 1
 506:	ff 2e       	mov	r15, r31
 508:	f0 2d       	mov	r31, r0
 50a:	c1 e1       	ldi	r28, 0x11	; 17
 50c:	8c 2f       	mov	r24, r28
 50e:	38 df       	rcall	.-400    	; 0x380 <LCD_Cursor>
 510:	f8 01       	movw	r30, r16
 512:	81 91       	ld	r24, Z+
 514:	8f 01       	movw	r16, r30
 516:	4b df       	rcall	.-362    	; 0x3ae <LCD_WriteData>
 518:	80 e0       	ldi	r24, 0x00	; 0
 51a:	32 df       	rcall	.-412    	; 0x380 <LCD_Cursor>
 51c:	cf 5f       	subi	r28, 0xFF	; 255
 51e:	0e 15       	cp	r16, r14
 520:	1f 05       	cpc	r17, r15
 522:	a1 f7       	brne	.-24     	; 0x50c <__LOCK_REGION_LENGTH__+0x10c>
 524:	81 e0       	ldi	r24, 0x01	; 1
 526:	90 e0       	ldi	r25, 0x00	; 0
 528:	57 c0       	rjmp	.+174    	; 0x5d8 <__LOCK_REGION_LENGTH__+0x1d8>
 52a:	80 e2       	ldi	r24, 0x20	; 32
 52c:	e9 e6       	ldi	r30, 0x69	; 105
 52e:	f1 e0       	ldi	r31, 0x01	; 1
 530:	a4 e0       	ldi	r26, 0x04	; 4
 532:	b1 e0       	ldi	r27, 0x01	; 1
 534:	01 90       	ld	r0, Z+
 536:	0d 92       	st	X+, r0
 538:	8a 95       	dec	r24
 53a:	e1 f7       	brne	.-8      	; 0x534 <__LOCK_REGION_LENGTH__+0x134>
 53c:	20 91 13 02 	lds	r18, 0x0213	; 0x800213 <terrainShift>
 540:	a4 e1       	ldi	r26, 0x14	; 20
 542:	b1 e0       	ldi	r27, 0x01	; 1
 544:	44 e2       	ldi	r20, 0x24	; 36
 546:	51 e0       	ldi	r21, 0x01	; 1
 548:	30 e0       	ldi	r19, 0x00	; 0
 54a:	24 51       	subi	r18, 0x14	; 20
 54c:	31 40       	sbci	r19, 0x01	; 1
 54e:	04 e0       	ldi	r16, 0x04	; 4
 550:	11 e0       	ldi	r17, 0x01	; 1
 552:	f9 01       	movw	r30, r18
 554:	ea 0f       	add	r30, r26
 556:	fb 1f       	adc	r31, r27
 558:	ef 71       	andi	r30, 0x1F	; 31
 55a:	ff 27       	eor	r31, r31
 55c:	e7 5b       	subi	r30, 0xB7	; 183
 55e:	fe 4f       	sbci	r31, 0xFE	; 254
 560:	80 81       	ld	r24, Z
 562:	8d 93       	st	X+, r24
 564:	a4 17       	cp	r26, r20
 566:	b5 07       	cpc	r27, r21
 568:	91 f7       	brne	.-28     	; 0x54e <__LOCK_REGION_LENGTH__+0x14e>
 56a:	a4 e2       	ldi	r26, 0x24	; 36
 56c:	b1 e0       	ldi	r27, 0x01	; 1
 56e:	ec 91       	ld	r30, X
 570:	f0 e0       	ldi	r31, 0x00	; 0
 572:	ec 5f       	subi	r30, 0xFC	; 252
 574:	fe 4f       	sbci	r31, 0xFE	; 254
 576:	80 e4       	ldi	r24, 0x40	; 64
 578:	80 83       	st	Z, r24
 57a:	11 96       	adiw	r26, 0x01	; 1
 57c:	ec 91       	ld	r30, X
 57e:	11 97       	sbiw	r26, 0x01	; 1
 580:	f0 e0       	ldi	r31, 0x00	; 0
 582:	ec 5f       	subi	r30, 0xFC	; 252
 584:	fe 4f       	sbci	r31, 0xFE	; 254
 586:	80 83       	st	Z, r24
 588:	12 96       	adiw	r26, 0x02	; 2
 58a:	ec 91       	ld	r30, X
 58c:	f0 e0       	ldi	r31, 0x00	; 0
 58e:	ec 5f       	subi	r30, 0xFC	; 252
 590:	fe 4f       	sbci	r31, 0xFE	; 254
 592:	80 83       	st	Z, r24
 594:	a7 e2       	ldi	r26, 0x27	; 39
 596:	b1 e0       	ldi	r27, 0x01	; 1
 598:	2c e2       	ldi	r18, 0x2C	; 44
 59a:	31 e0       	ldi	r19, 0x01	; 1
 59c:	8d e2       	ldi	r24, 0x2D	; 45
 59e:	ed 91       	ld	r30, X+
 5a0:	f0 e0       	ldi	r31, 0x00	; 0
 5a2:	ec 5f       	subi	r30, 0xFC	; 252
 5a4:	fe 4f       	sbci	r31, 0xFE	; 254
 5a6:	80 83       	st	Z, r24
 5a8:	a2 17       	cp	r26, r18
 5aa:	b3 07       	cpc	r27, r19
 5ac:	c1 f7       	brne	.-16     	; 0x59e <__LOCK_REGION_LENGTH__+0x19e>
 5ae:	e0 91 12 02 	lds	r30, 0x0212	; 0x800212 <player_one_location>
 5b2:	f0 e0       	ldi	r31, 0x00	; 0
 5b4:	ec 5f       	subi	r30, 0xFC	; 252
 5b6:	fe 4f       	sbci	r31, 0xFE	; 254
 5b8:	8e e3       	ldi	r24, 0x3E	; 62
 5ba:	80 83       	st	Z, r24
 5bc:	c0 e0       	ldi	r28, 0x00	; 0
 5be:	cf 5f       	subi	r28, 0xFF	; 255
 5c0:	8c 2f       	mov	r24, r28
 5c2:	de de       	rcall	.-580    	; 0x380 <LCD_Cursor>
 5c4:	f8 01       	movw	r30, r16
 5c6:	81 91       	ld	r24, Z+
 5c8:	8f 01       	movw	r16, r30
 5ca:	f1 de       	rcall	.-542    	; 0x3ae <LCD_WriteData>
 5cc:	80 e0       	ldi	r24, 0x00	; 0
 5ce:	d8 de       	rcall	.-592    	; 0x380 <LCD_Cursor>
 5d0:	c0 32       	cpi	r28, 0x20	; 32
 5d2:	a9 f7       	brne	.-22     	; 0x5be <__LOCK_REGION_LENGTH__+0x1be>
 5d4:	82 e0       	ldi	r24, 0x02	; 2
 5d6:	90 e0       	ldi	r25, 0x00	; 0
 5d8:	cf 91       	pop	r28
 5da:	1f 91       	pop	r17
 5dc:	0f 91       	pop	r16
 5de:	ff 90       	pop	r15
 5e0:	ef 90       	pop	r14
 5e2:	08 95       	ret

000005e4 <GetKeypadKey>:
 5e4:	8f ee       	ldi	r24, 0xEF	; 239
 5e6:	88 b9       	out	0x08, r24	; 8
 5e8:	00 00       	nop
 5ea:	30 9b       	sbis	0x06, 0	; 6
 5ec:	29 c0       	rjmp	.+82     	; 0x640 <GetKeypadKey+0x5c>
 5ee:	31 9b       	sbis	0x06, 1	; 6
 5f0:	29 c0       	rjmp	.+82     	; 0x644 <GetKeypadKey+0x60>
 5f2:	32 9b       	sbis	0x06, 2	; 6
 5f4:	29 c0       	rjmp	.+82     	; 0x648 <GetKeypadKey+0x64>
 5f6:	33 9b       	sbis	0x06, 3	; 6
 5f8:	29 c0       	rjmp	.+82     	; 0x64c <GetKeypadKey+0x68>
 5fa:	8f ed       	ldi	r24, 0xDF	; 223
 5fc:	88 b9       	out	0x08, r24	; 8
 5fe:	00 00       	nop
 600:	30 9b       	sbis	0x06, 0	; 6
 602:	26 c0       	rjmp	.+76     	; 0x650 <GetKeypadKey+0x6c>
 604:	31 9b       	sbis	0x06, 1	; 6
 606:	26 c0       	rjmp	.+76     	; 0x654 <GetKeypadKey+0x70>
 608:	32 9b       	sbis	0x06, 2	; 6
 60a:	26 c0       	rjmp	.+76     	; 0x658 <GetKeypadKey+0x74>
 60c:	33 9b       	sbis	0x06, 3	; 6
 60e:	26 c0       	rjmp	.+76     	; 0x65c <GetKeypadKey+0x78>
 610:	8f eb       	ldi	r24, 0xBF	; 191
 612:	88 b9       	out	0x08, r24	; 8
 614:	00 00       	nop
 616:	30 9b       	sbis	0x06, 0	; 6
 618:	23 c0       	rjmp	.+70     	; 0x660 <GetKeypadKey+0x7c>
 61a:	31 9b       	sbis	0x06, 1	; 6
 61c:	23 c0       	rjmp	.+70     	; 0x664 <GetKeypadKey+0x80>
 61e:	32 9b       	sbis	0x06, 2	; 6
 620:	23 c0       	rjmp	.+70     	; 0x668 <GetKeypadKey+0x84>
 622:	33 9b       	sbis	0x06, 3	; 6
 624:	23 c0       	rjmp	.+70     	; 0x66c <GetKeypadKey+0x88>
 626:	8f e7       	ldi	r24, 0x7F	; 127
 628:	88 b9       	out	0x08, r24	; 8
 62a:	00 00       	nop
 62c:	30 9b       	sbis	0x06, 0	; 6
 62e:	20 c0       	rjmp	.+64     	; 0x670 <GetKeypadKey+0x8c>
 630:	31 9b       	sbis	0x06, 1	; 6
 632:	20 c0       	rjmp	.+64     	; 0x674 <GetKeypadKey+0x90>
 634:	32 9b       	sbis	0x06, 2	; 6
 636:	20 c0       	rjmp	.+64     	; 0x678 <GetKeypadKey+0x94>
 638:	33 9b       	sbis	0x06, 3	; 6
 63a:	20 c0       	rjmp	.+64     	; 0x67c <GetKeypadKey+0x98>
 63c:	80 e0       	ldi	r24, 0x00	; 0
 63e:	08 95       	ret
 640:	80 e2       	ldi	r24, 0x20	; 32
 642:	08 95       	ret
 644:	84 e3       	ldi	r24, 0x34	; 52
 646:	08 95       	ret
 648:	87 e3       	ldi	r24, 0x37	; 55
 64a:	08 95       	ret
 64c:	8a e2       	ldi	r24, 0x2A	; 42
 64e:	08 95       	ret
 650:	82 e3       	ldi	r24, 0x32	; 50
 652:	08 95       	ret
 654:	85 e3       	ldi	r24, 0x35	; 53
 656:	08 95       	ret
 658:	88 e3       	ldi	r24, 0x38	; 56
 65a:	08 95       	ret
 65c:	80 e3       	ldi	r24, 0x30	; 48
 65e:	08 95       	ret
 660:	83 e3       	ldi	r24, 0x33	; 51
 662:	08 95       	ret
 664:	86 e3       	ldi	r24, 0x36	; 54
 666:	08 95       	ret
 668:	89 e3       	ldi	r24, 0x39	; 57
 66a:	08 95       	ret
 66c:	83 e2       	ldi	r24, 0x23	; 35
 66e:	08 95       	ret
 670:	81 e4       	ldi	r24, 0x41	; 65
 672:	08 95       	ret
 674:	82 e4       	ldi	r24, 0x42	; 66
 676:	08 95       	ret
 678:	83 e4       	ldi	r24, 0x43	; 67
 67a:	08 95       	ret
 67c:	84 e4       	ldi	r24, 0x44	; 68
 67e:	08 95       	ret

00000680 <key_tick>:
 680:	cf 93       	push	r28
 682:	df 93       	push	r29
 684:	ec 01       	movw	r28, r24
 686:	ae df       	rcall	.-164    	; 0x5e4 <GetKeypadKey>
 688:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <key>
 68c:	ce 01       	movw	r24, r28
 68e:	df 91       	pop	r29
 690:	cf 91       	pop	r28
 692:	08 95       	ret

00000694 <moveLeft>:
 694:	98 2f       	mov	r25, r24
 696:	9f 7e       	andi	r25, 0xEF	; 239
 698:	91 50       	subi	r25, 0x01	; 1
 69a:	9f 30       	cpi	r25, 0x0F	; 15
 69c:	08 f4       	brcc	.+2      	; 0x6a0 <moveLeft+0xc>
 69e:	81 50       	subi	r24, 0x01	; 1
 6a0:	08 95       	ret

000006a2 <moveRight>:
 6a2:	8f 30       	cpi	r24, 0x0F	; 15
 6a4:	10 f4       	brcc	.+4      	; 0x6aa <moveRight+0x8>
 6a6:	8f 5f       	subi	r24, 0xFF	; 255
 6a8:	08 95       	ret
 6aa:	90 ef       	ldi	r25, 0xF0	; 240
 6ac:	98 0f       	add	r25, r24
 6ae:	9f 30       	cpi	r25, 0x0F	; 15
 6b0:	08 f4       	brcc	.+2      	; 0x6b4 <moveRight+0x12>
 6b2:	8f 5f       	subi	r24, 0xFF	; 255
 6b4:	08 95       	ret

000006b6 <player_one_tick>:
 6b6:	00 97       	sbiw	r24, 0x00	; 0
 6b8:	21 f0       	breq	.+8      	; 0x6c2 <player_one_tick+0xc>
 6ba:	81 30       	cpi	r24, 0x01	; 1
 6bc:	91 05       	cpc	r25, r1
 6be:	31 f0       	breq	.+12     	; 0x6cc <player_one_tick+0x16>
 6c0:	0a c0       	rjmp	.+20     	; 0x6d6 <player_one_tick+0x20>
 6c2:	80 91 16 02 	lds	r24, 0x0216	; 0x800216 <playFlag>
 6c6:	81 30       	cpi	r24, 0x01	; 1
 6c8:	61 f4       	brne	.+24     	; 0x6e2 <player_one_tick+0x2c>
 6ca:	10 c0       	rjmp	.+32     	; 0x6ec <player_one_tick+0x36>
 6cc:	80 91 16 02 	lds	r24, 0x0216	; 0x800216 <playFlag>
 6d0:	88 23       	and	r24, r24
 6d2:	39 f0       	breq	.+14     	; 0x6e2 <player_one_tick+0x2c>
 6d4:	0b c0       	rjmp	.+22     	; 0x6ec <player_one_tick+0x36>
 6d6:	00 97       	sbiw	r24, 0x00	; 0
 6d8:	21 f0       	breq	.+8      	; 0x6e2 <player_one_tick+0x2c>
 6da:	81 30       	cpi	r24, 0x01	; 1
 6dc:	91 05       	cpc	r25, r1
 6de:	c1 f5       	brne	.+112    	; 0x750 <player_one_tick+0x9a>
 6e0:	05 c0       	rjmp	.+10     	; 0x6ec <player_one_tick+0x36>
 6e2:	10 92 12 02 	sts	0x0212, r1	; 0x800212 <player_one_location>
 6e6:	80 e0       	ldi	r24, 0x00	; 0
 6e8:	90 e0       	ldi	r25, 0x00	; 0
 6ea:	08 95       	ret
 6ec:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <key>
 6f0:	82 33       	cpi	r24, 0x32	; 50
 6f2:	61 f4       	brne	.+24     	; 0x70c <player_one_tick+0x56>
 6f4:	90 91 12 02 	lds	r25, 0x0212	; 0x800212 <player_one_location>
 6f8:	80 ef       	ldi	r24, 0xF0	; 240
 6fa:	89 0f       	add	r24, r25
 6fc:	80 31       	cpi	r24, 0x10	; 16
 6fe:	08 f0       	brcs	.+2      	; 0x702 <player_one_tick+0x4c>
 700:	89 2f       	mov	r24, r25
 702:	80 93 12 02 	sts	0x0212, r24	; 0x800212 <player_one_location>
 706:	81 e0       	ldi	r24, 0x01	; 1
 708:	90 e0       	ldi	r25, 0x00	; 0
 70a:	08 95       	ret
 70c:	88 33       	cpi	r24, 0x38	; 56
 70e:	51 f4       	brne	.+20     	; 0x724 <player_one_tick+0x6e>
 710:	80 91 12 02 	lds	r24, 0x0212	; 0x800212 <player_one_location>
 714:	80 31       	cpi	r24, 0x10	; 16
 716:	08 f4       	brcc	.+2      	; 0x71a <player_one_tick+0x64>
 718:	80 5f       	subi	r24, 0xF0	; 240
 71a:	80 93 12 02 	sts	0x0212, r24	; 0x800212 <player_one_location>
 71e:	81 e0       	ldi	r24, 0x01	; 1
 720:	90 e0       	ldi	r25, 0x00	; 0
 722:	08 95       	ret
 724:	84 33       	cpi	r24, 0x34	; 52
 726:	41 f4       	brne	.+16     	; 0x738 <player_one_tick+0x82>
 728:	80 91 12 02 	lds	r24, 0x0212	; 0x800212 <player_one_location>
 72c:	b3 df       	rcall	.-154    	; 0x694 <moveLeft>
 72e:	80 93 12 02 	sts	0x0212, r24	; 0x800212 <player_one_location>
 732:	81 e0       	ldi	r24, 0x01	; 1
 734:	90 e0       	ldi	r25, 0x00	; 0
 736:	08 95       	ret
 738:	86 33       	cpi	r24, 0x36	; 54
 73a:	41 f4       	brne	.+16     	; 0x74c <player_one_tick+0x96>
 73c:	80 91 12 02 	lds	r24, 0x0212	; 0x800212 <player_one_location>
 740:	b0 df       	rcall	.-160    	; 0x6a2 <moveRight>
 742:	80 93 12 02 	sts	0x0212, r24	; 0x800212 <player_one_location>
 746:	81 e0       	ldi	r24, 0x01	; 1
 748:	90 e0       	ldi	r25, 0x00	; 0
 74a:	08 95       	ret
 74c:	81 e0       	ldi	r24, 0x01	; 1
 74e:	90 e0       	ldi	r25, 0x00	; 0
 750:	08 95       	ret

00000752 <player_one_projectile_tick>:
 752:	bf 92       	push	r11
 754:	cf 92       	push	r12
 756:	df 92       	push	r13
 758:	ef 92       	push	r14
 75a:	ff 92       	push	r15
 75c:	0f 93       	push	r16
 75e:	1f 93       	push	r17
 760:	cf 93       	push	r28
 762:	df 93       	push	r29
 764:	00 97       	sbiw	r24, 0x00	; 0
 766:	21 f0       	breq	.+8      	; 0x770 <player_one_projectile_tick+0x1e>
 768:	81 30       	cpi	r24, 0x01	; 1
 76a:	91 05       	cpc	r25, r1
 76c:	31 f0       	breq	.+12     	; 0x77a <player_one_projectile_tick+0x28>
 76e:	0a c0       	rjmp	.+20     	; 0x784 <player_one_projectile_tick+0x32>
 770:	80 91 16 02 	lds	r24, 0x0216	; 0x800216 <playFlag>
 774:	81 30       	cpi	r24, 0x01	; 1
 776:	69 f4       	brne	.+26     	; 0x792 <player_one_projectile_tick+0x40>
 778:	18 c0       	rjmp	.+48     	; 0x7aa <player_one_projectile_tick+0x58>
 77a:	80 91 16 02 	lds	r24, 0x0216	; 0x800216 <playFlag>
 77e:	88 23       	and	r24, r24
 780:	41 f0       	breq	.+16     	; 0x792 <player_one_projectile_tick+0x40>
 782:	13 c0       	rjmp	.+38     	; 0x7aa <player_one_projectile_tick+0x58>
 784:	00 97       	sbiw	r24, 0x00	; 0
 786:	29 f0       	breq	.+10     	; 0x792 <player_one_projectile_tick+0x40>
 788:	81 30       	cpi	r24, 0x01	; 1
 78a:	91 05       	cpc	r25, r1
 78c:	09 f0       	breq	.+2      	; 0x790 <player_one_projectile_tick+0x3e>
 78e:	56 c0       	rjmp	.+172    	; 0x83c <player_one_projectile_tick+0xea>
 790:	0c c0       	rjmp	.+24     	; 0x7aa <player_one_projectile_tick+0x58>
 792:	e7 e2       	ldi	r30, 0x27	; 39
 794:	f1 e0       	ldi	r31, 0x01	; 1
 796:	8f ef       	ldi	r24, 0xFF	; 255
 798:	80 83       	st	Z, r24
 79a:	81 83       	std	Z+1, r24	; 0x01
 79c:	82 83       	std	Z+2, r24	; 0x02
 79e:	83 83       	std	Z+3, r24	; 0x03
 7a0:	84 83       	std	Z+4, r24	; 0x04
 7a2:	15 b8       	out	0x05, r1	; 5
 7a4:	80 e0       	ldi	r24, 0x00	; 0
 7a6:	90 e0       	ldi	r25, 0x00	; 0
 7a8:	49 c0       	rjmp	.+146    	; 0x83c <player_one_projectile_tick+0xea>
 7aa:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <key>
 7ae:	85 33       	cpi	r24, 0x35	; 53
 7b0:	c9 f5       	brne	.+114    	; 0x824 <player_one_projectile_tick+0xd2>
 7b2:	80 91 27 01 	lds	r24, 0x0127	; 0x800127 <player_one_projectile_location>
 7b6:	8f 3f       	cpi	r24, 0xFF	; 255
 7b8:	49 f0       	breq	.+18     	; 0x7cc <player_one_projectile_tick+0x7a>
 7ba:	e8 e2       	ldi	r30, 0x28	; 40
 7bc:	f1 e0       	ldi	r31, 0x01	; 1
 7be:	81 e0       	ldi	r24, 0x01	; 1
 7c0:	90 e0       	ldi	r25, 0x00	; 0
 7c2:	ac 01       	movw	r20, r24
 7c4:	21 91       	ld	r18, Z+
 7c6:	2f 3f       	cpi	r18, 0xFF	; 255
 7c8:	51 f4       	brne	.+20     	; 0x7de <player_one_projectile_tick+0x8c>
 7ca:	02 c0       	rjmp	.+4      	; 0x7d0 <player_one_projectile_tick+0x7e>
 7cc:	40 e0       	ldi	r20, 0x00	; 0
 7ce:	50 e0       	ldi	r21, 0x00	; 0
 7d0:	fa 01       	movw	r30, r20
 7d2:	e9 5d       	subi	r30, 0xD9	; 217
 7d4:	fe 4f       	sbci	r31, 0xFE	; 254
 7d6:	80 91 12 02 	lds	r24, 0x0212	; 0x800212 <player_one_location>
 7da:	80 83       	st	Z, r24
 7dc:	23 c0       	rjmp	.+70     	; 0x824 <player_one_projectile_tick+0xd2>
 7de:	01 96       	adiw	r24, 0x01	; 1
 7e0:	85 30       	cpi	r24, 0x05	; 5
 7e2:	91 05       	cpc	r25, r1
 7e4:	71 f7       	brne	.-36     	; 0x7c2 <player_one_projectile_tick+0x70>
 7e6:	1e c0       	rjmp	.+60     	; 0x824 <player_one_projectile_tick+0xd2>
 7e8:	88 81       	ld	r24, Y
 7ea:	8f 3f       	cpi	r24, 0xFF	; 255
 7ec:	41 f0       	breq	.+16     	; 0x7fe <player_one_projectile_tick+0xac>
 7ee:	98 2f       	mov	r25, r24
 7f0:	9f 7e       	andi	r25, 0xEF	; 239
 7f2:	9f 30       	cpi	r25, 0x0F	; 15
 7f4:	11 f4       	brne	.+4      	; 0x7fa <player_one_projectile_tick+0xa8>
 7f6:	b8 82       	st	Y, r11
 7f8:	02 c0       	rjmp	.+4      	; 0x7fe <player_one_projectile_tick+0xac>
 7fa:	53 df       	rcall	.-346    	; 0x6a2 <moveRight>
 7fc:	88 83       	st	Y, r24
 7fe:	21 96       	adiw	r28, 0x01	; 1
 800:	ce 15       	cp	r28, r14
 802:	df 05       	cpc	r29, r15
 804:	89 f7       	brne	.-30     	; 0x7e8 <player_one_projectile_tick+0x96>
 806:	90 e0       	ldi	r25, 0x00	; 0
 808:	f8 01       	movw	r30, r16
 80a:	81 91       	ld	r24, Z+
 80c:	8f 01       	movw	r16, r30
 80e:	8f 3f       	cpi	r24, 0xFF	; 255
 810:	11 f4       	brne	.+4      	; 0x816 <player_one_projectile_tick+0xc4>
 812:	99 0f       	add	r25, r25
 814:	9f 5f       	subi	r25, 0xFF	; 255
 816:	0e 15       	cp	r16, r14
 818:	1f 05       	cpc	r17, r15
 81a:	b1 f7       	brne	.-20     	; 0x808 <player_one_projectile_tick+0xb6>
 81c:	95 b9       	out	0x05, r25	; 5
 81e:	81 e0       	ldi	r24, 0x01	; 1
 820:	90 e0       	ldi	r25, 0x00	; 0
 822:	0c c0       	rjmp	.+24     	; 0x83c <player_one_projectile_tick+0xea>
 824:	07 e2       	ldi	r16, 0x27	; 39
 826:	11 e0       	ldi	r17, 0x01	; 1
 828:	0f 2e       	mov	r0, r31
 82a:	fc e2       	ldi	r31, 0x2C	; 44
 82c:	ef 2e       	mov	r14, r31
 82e:	f1 e0       	ldi	r31, 0x01	; 1
 830:	ff 2e       	mov	r15, r31
 832:	f0 2d       	mov	r31, r0
 834:	e8 01       	movw	r28, r16
 836:	bb 24       	eor	r11, r11
 838:	ba 94       	dec	r11
 83a:	d6 cf       	rjmp	.-84     	; 0x7e8 <player_one_projectile_tick+0x96>
 83c:	df 91       	pop	r29
 83e:	cf 91       	pop	r28
 840:	1f 91       	pop	r17
 842:	0f 91       	pop	r16
 844:	ff 90       	pop	r15
 846:	ef 90       	pop	r14
 848:	df 90       	pop	r13
 84a:	cf 90       	pop	r12
 84c:	bf 90       	pop	r11
 84e:	08 95       	ret

00000850 <enemyMoveLeft>:
 850:	98 2f       	mov	r25, r24
 852:	9f 7e       	andi	r25, 0xEF	; 239
 854:	29 f0       	breq	.+10     	; 0x860 <enemyMoveLeft+0x10>
 856:	91 50       	subi	r25, 0x01	; 1
 858:	9f 30       	cpi	r25, 0x0F	; 15
 85a:	18 f4       	brcc	.+6      	; 0x862 <enemyMoveLeft+0x12>
 85c:	81 50       	subi	r24, 0x01	; 1
 85e:	08 95       	ret
 860:	8f ef       	ldi	r24, 0xFF	; 255
 862:	08 95       	ret

00000864 <enemy_tick>:
 864:	cf 92       	push	r12
 866:	df 92       	push	r13
 868:	ef 92       	push	r14
 86a:	ff 92       	push	r15
 86c:	0f 93       	push	r16
 86e:	1f 93       	push	r17
 870:	cf 93       	push	r28
 872:	df 93       	push	r29
 874:	ec 01       	movw	r28, r24
 876:	d1 d2       	rcall	.+1442   	; 0xe1a <rand>
 878:	20 97       	sbiw	r28, 0x00	; 0
 87a:	21 f0       	breq	.+8      	; 0x884 <enemy_tick+0x20>
 87c:	c1 30       	cpi	r28, 0x01	; 1
 87e:	d1 05       	cpc	r29, r1
 880:	31 f0       	breq	.+12     	; 0x88e <enemy_tick+0x2a>
 882:	0a c0       	rjmp	.+20     	; 0x898 <enemy_tick+0x34>
 884:	20 91 16 02 	lds	r18, 0x0216	; 0x800216 <playFlag>
 888:	21 30       	cpi	r18, 0x01	; 1
 88a:	69 f4       	brne	.+26     	; 0x8a6 <enemy_tick+0x42>
 88c:	15 c0       	rjmp	.+42     	; 0x8b8 <enemy_tick+0x54>
 88e:	20 91 16 02 	lds	r18, 0x0216	; 0x800216 <playFlag>
 892:	22 23       	and	r18, r18
 894:	41 f0       	breq	.+16     	; 0x8a6 <enemy_tick+0x42>
 896:	10 c0       	rjmp	.+32     	; 0x8b8 <enemy_tick+0x54>
 898:	20 97       	sbiw	r28, 0x00	; 0
 89a:	29 f0       	breq	.+10     	; 0x8a6 <enemy_tick+0x42>
 89c:	c1 30       	cpi	r28, 0x01	; 1
 89e:	d1 05       	cpc	r29, r1
 8a0:	09 f0       	breq	.+2      	; 0x8a4 <enemy_tick+0x40>
 8a2:	77 c0       	rjmp	.+238    	; 0x992 <enemy_tick+0x12e>
 8a4:	09 c0       	rjmp	.+18     	; 0x8b8 <enemy_tick+0x54>
 8a6:	e4 e2       	ldi	r30, 0x24	; 36
 8a8:	f1 e0       	ldi	r31, 0x01	; 1
 8aa:	8f ef       	ldi	r24, 0xFF	; 255
 8ac:	80 83       	st	Z, r24
 8ae:	81 83       	std	Z+1, r24	; 0x01
 8b0:	82 83       	std	Z+2, r24	; 0x02
 8b2:	c0 e0       	ldi	r28, 0x00	; 0
 8b4:	d0 e0       	ldi	r29, 0x00	; 0
 8b6:	6d c0       	rjmp	.+218    	; 0x992 <enemy_tick+0x12e>
 8b8:	81 70       	andi	r24, 0x01	; 1
 8ba:	90 78       	andi	r25, 0x80	; 128
 8bc:	99 23       	and	r25, r25
 8be:	24 f4       	brge	.+8      	; 0x8c8 <enemy_tick+0x64>
 8c0:	01 97       	sbiw	r24, 0x01	; 1
 8c2:	8e 6f       	ori	r24, 0xFE	; 254
 8c4:	9f 6f       	ori	r25, 0xFF	; 255
 8c6:	01 96       	adiw	r24, 0x01	; 1
 8c8:	81 30       	cpi	r24, 0x01	; 1
 8ca:	09 f0       	breq	.+2      	; 0x8ce <enemy_tick+0x6a>
 8cc:	54 c0       	rjmp	.+168    	; 0x976 <enemy_tick+0x112>
 8ce:	c4 e2       	ldi	r28, 0x24	; 36
 8d0:	d1 e0       	ldi	r29, 0x01	; 1
 8d2:	07 e2       	ldi	r16, 0x27	; 39
 8d4:	11 e0       	ldi	r17, 0x01	; 1
 8d6:	0f 2e       	mov	r0, r31
 8d8:	ff e0       	ldi	r31, 0x0F	; 15
 8da:	cf 2e       	mov	r12, r31
 8dc:	f0 2d       	mov	r31, r0
 8de:	0f 2e       	mov	r0, r31
 8e0:	ff e1       	ldi	r31, 0x1F	; 31
 8e2:	df 2e       	mov	r13, r31
 8e4:	f0 2d       	mov	r31, r0
 8e6:	7e 01       	movw	r14, r28
 8e8:	88 81       	ld	r24, Y
 8ea:	8f 3f       	cpi	r24, 0xFF	; 255
 8ec:	a9 f4       	brne	.+42     	; 0x918 <enemy_tick+0xb4>
 8ee:	95 d2       	rcall	.+1322   	; 0xe1a <rand>
 8f0:	81 70       	andi	r24, 0x01	; 1
 8f2:	90 78       	andi	r25, 0x80	; 128
 8f4:	99 23       	and	r25, r25
 8f6:	24 f4       	brge	.+8      	; 0x900 <enemy_tick+0x9c>
 8f8:	01 97       	sbiw	r24, 0x01	; 1
 8fa:	8e 6f       	ori	r24, 0xFE	; 254
 8fc:	9f 6f       	ori	r25, 0xFF	; 255
 8fe:	01 96       	adiw	r24, 0x01	; 1
 900:	99 27       	eor	r25, r25
 902:	81 30       	cpi	r24, 0x01	; 1
 904:	91 05       	cpc	r25, r1
 906:	19 f0       	breq	.+6      	; 0x90e <enemy_tick+0xaa>
 908:	02 97       	sbiw	r24, 0x02	; 2
 90a:	21 f0       	breq	.+8      	; 0x914 <enemy_tick+0xb0>
 90c:	05 c0       	rjmp	.+10     	; 0x918 <enemy_tick+0xb4>
 90e:	f7 01       	movw	r30, r14
 910:	c0 82       	st	Z, r12
 912:	02 c0       	rjmp	.+4      	; 0x918 <enemy_tick+0xb4>
 914:	f7 01       	movw	r30, r14
 916:	d0 82       	st	Z, r13
 918:	21 96       	adiw	r28, 0x01	; 1
 91a:	c0 17       	cp	r28, r16
 91c:	d1 07       	cpc	r29, r17
 91e:	19 f7       	brne	.-58     	; 0x8e6 <enemy_tick+0x82>
 920:	2a c0       	rjmp	.+84     	; 0x976 <enemy_tick+0x112>
 922:	8e 01       	movw	r16, r28
 924:	88 81       	ld	r24, Y
 926:	8f 3f       	cpi	r24, 0xFF	; 255
 928:	f9 f0       	breq	.+62     	; 0x968 <enemy_tick+0x104>
 92a:	77 d2       	rcall	.+1262   	; 0xe1a <rand>
 92c:	b6 01       	movw	r22, r12
 92e:	e5 d1       	rcall	.+970    	; 0xcfa <__divmodhi4>
 930:	99 27       	eor	r25, r25
 932:	81 30       	cpi	r24, 0x01	; 1
 934:	91 05       	cpc	r25, r1
 936:	71 f0       	breq	.+28     	; 0x954 <enemy_tick+0xf0>
 938:	82 30       	cpi	r24, 0x02	; 2
 93a:	91 05       	cpc	r25, r1
 93c:	91 f0       	breq	.+36     	; 0x962 <enemy_tick+0xfe>
 93e:	89 2b       	or	r24, r25
 940:	99 f4       	brne	.+38     	; 0x968 <enemy_tick+0x104>
 942:	98 81       	ld	r25, Y
 944:	80 ef       	ldi	r24, 0xF0	; 240
 946:	89 0f       	add	r24, r25
 948:	80 31       	cpi	r24, 0x10	; 16
 94a:	08 f0       	brcs	.+2      	; 0x94e <enemy_tick+0xea>
 94c:	89 2f       	mov	r24, r25
 94e:	f8 01       	movw	r30, r16
 950:	80 83       	st	Z, r24
 952:	0a c0       	rjmp	.+20     	; 0x968 <enemy_tick+0x104>
 954:	88 81       	ld	r24, Y
 956:	80 31       	cpi	r24, 0x10	; 16
 958:	08 f4       	brcc	.+2      	; 0x95c <enemy_tick+0xf8>
 95a:	80 5f       	subi	r24, 0xF0	; 240
 95c:	f8 01       	movw	r30, r16
 95e:	80 83       	st	Z, r24
 960:	03 c0       	rjmp	.+6      	; 0x968 <enemy_tick+0x104>
 962:	88 81       	ld	r24, Y
 964:	75 df       	rcall	.-278    	; 0x850 <enemyMoveLeft>
 966:	88 83       	st	Y, r24
 968:	21 96       	adiw	r28, 0x01	; 1
 96a:	ec 16       	cp	r14, r28
 96c:	fd 06       	cpc	r15, r29
 96e:	c9 f6       	brne	.-78     	; 0x922 <enemy_tick+0xbe>
 970:	c1 e0       	ldi	r28, 0x01	; 1
 972:	d0 e0       	ldi	r29, 0x00	; 0
 974:	0e c0       	rjmp	.+28     	; 0x992 <enemy_tick+0x12e>
 976:	c4 e2       	ldi	r28, 0x24	; 36
 978:	d1 e0       	ldi	r29, 0x01	; 1
 97a:	0f 2e       	mov	r0, r31
 97c:	f7 e2       	ldi	r31, 0x27	; 39
 97e:	ef 2e       	mov	r14, r31
 980:	f1 e0       	ldi	r31, 0x01	; 1
 982:	ff 2e       	mov	r15, r31
 984:	f0 2d       	mov	r31, r0
 986:	0f 2e       	mov	r0, r31
 988:	f3 e0       	ldi	r31, 0x03	; 3
 98a:	cf 2e       	mov	r12, r31
 98c:	d1 2c       	mov	r13, r1
 98e:	f0 2d       	mov	r31, r0
 990:	c8 cf       	rjmp	.-112    	; 0x922 <enemy_tick+0xbe>
 992:	ce 01       	movw	r24, r28
 994:	df 91       	pop	r29
 996:	cf 91       	pop	r28
 998:	1f 91       	pop	r17
 99a:	0f 91       	pop	r16
 99c:	ff 90       	pop	r15
 99e:	ef 90       	pop	r14
 9a0:	df 90       	pop	r13
 9a2:	cf 90       	pop	r12
 9a4:	08 95       	ret

000009a6 <main>:
			break;
 	}
	return state;
}

int main() {
 9a6:	cf 93       	push	r28
 9a8:	df 93       	push	r29
 9aa:	cd b7       	in	r28, 0x3d	; 61
 9ac:	de b7       	in	r29, 0x3e	; 62
 9ae:	60 97       	sbiw	r28, 0x10	; 16
 9b0:	0f b6       	in	r0, 0x3f	; 63
 9b2:	f8 94       	cli
 9b4:	de bf       	out	0x3e, r29	; 62
 9b6:	0f be       	out	0x3f, r0	; 63
 9b8:	cd bf       	out	0x3d, r28	; 61
	// Set Data Direction Registers
	DDRA = 0xFF; PORTA = 0x00; //output
 9ba:	8f ef       	ldi	r24, 0xFF	; 255
 9bc:	81 b9       	out	0x01, r24	; 1
 9be:	12 b8       	out	0x02, r1	; 2
	DDRB = 0xFF; PORTB = 0x00; //output
 9c0:	84 b9       	out	0x04, r24	; 4
 9c2:	15 b8       	out	0x05, r1	; 5
	DDRC = 0xF0; PORTC = 0x0F; // PC7..4 outputs init 0s, PC3..0 inputs init 1
 9c4:	90 ef       	ldi	r25, 0xF0	; 240
 9c6:	97 b9       	out	0x07, r25	; 7
 9c8:	9f e0       	ldi	r25, 0x0F	; 15
 9ca:	98 b9       	out	0x08, r25	; 8
	DDRD = 0xFF; PORTD = 0x00; //output
 9cc:	8a b9       	out	0x0a, r24	; 10
 9ce:	1b b8       	out	0x0b, r1	; 11
 9d0:	18 ec       	ldi	r17, 0xC8	; 200
 9d2:	00 e0       	ldi	r16, 0x00	; 0
 9d4:	f1 2c       	mov	r15, r1
 9d6:	e1 2c       	mov	r14, r1
 9d8:	54 e6       	ldi	r21, 0x64	; 100
 9da:	40 e0       	ldi	r20, 0x00	; 0
 9dc:	30 e0       	ldi	r19, 0x00	; 0
 9de:	20 e0       	ldi	r18, 0x00	; 0
 9e0:	04 c0       	rjmp	.+8      	; 0x9ea <main+0x44>
	unsigned long int c;
	while(1){
		c = a%b;
		if(c==0){return b;}
		a = b;
		b = c;
 9e2:	16 2f       	mov	r17, r22
 9e4:	07 2f       	mov	r16, r23
 9e6:	f8 2e       	mov	r15, r24
 9e8:	e9 2e       	mov	r14, r25
//--------Find GCD function --------------------------------------------------
unsigned long int findGCD(unsigned long int a, unsigned long int b)
{
	unsigned long int c;
	while(1){
		c = a%b;
 9ea:	65 2f       	mov	r22, r21
 9ec:	74 2f       	mov	r23, r20
 9ee:	83 2f       	mov	r24, r19
 9f0:	92 2f       	mov	r25, r18
 9f2:	21 2f       	mov	r18, r17
 9f4:	30 2f       	mov	r19, r16
 9f6:	4f 2d       	mov	r20, r15
 9f8:	5e 2d       	mov	r21, r14
 9fa:	92 d1       	rcall	.+804    	; 0xd20 <__udivmodsi4>
 9fc:	51 2f       	mov	r21, r17
 9fe:	40 2f       	mov	r20, r16
 a00:	3f 2d       	mov	r19, r15
 a02:	2e 2d       	mov	r18, r14
		if(c==0){return b;}
 a04:	61 15       	cp	r22, r1
 a06:	71 05       	cpc	r23, r1
 a08:	81 05       	cpc	r24, r1
 a0a:	91 05       	cpc	r25, r1
 a0c:	51 f7       	brne	.-44     	; 0x9e2 <main+0x3c>
 a0e:	0f 2e       	mov	r0, r31
 a10:	f8 ec       	ldi	r31, 0xC8	; 200
 a12:	df 2e       	mov	r13, r31
 a14:	f0 2d       	mov	r31, r0
 a16:	c1 2c       	mov	r12, r1
 a18:	b1 2c       	mov	r11, r1
 a1a:	a1 2c       	mov	r10, r1
 a1c:	04 c0       	rjmp	.+8      	; 0xa26 <main+0x80>
		a = b;
		b = c;
 a1e:	d6 2e       	mov	r13, r22
 a20:	c7 2e       	mov	r12, r23
 a22:	b8 2e       	mov	r11, r24
 a24:	a9 2e       	mov	r10, r25
//--------Find GCD function --------------------------------------------------
unsigned long int findGCD(unsigned long int a, unsigned long int b)
{
	unsigned long int c;
	while(1){
		c = a%b;
 a26:	61 2f       	mov	r22, r17
 a28:	70 2f       	mov	r23, r16
 a2a:	8f 2d       	mov	r24, r15
 a2c:	9e 2d       	mov	r25, r14
 a2e:	2d 2d       	mov	r18, r13
 a30:	3c 2d       	mov	r19, r12
 a32:	4b 2d       	mov	r20, r11
 a34:	5a 2d       	mov	r21, r10
 a36:	74 d1       	rcall	.+744    	; 0xd20 <__udivmodsi4>
 a38:	1d 2d       	mov	r17, r13
 a3a:	0c 2d       	mov	r16, r12
 a3c:	fb 2c       	mov	r15, r11
 a3e:	ea 2c       	mov	r14, r10
		if(c==0){return b;}
 a40:	61 15       	cp	r22, r1
 a42:	71 05       	cpc	r23, r1
 a44:	81 05       	cpc	r24, r1
 a46:	91 05       	cpc	r25, r1
 a48:	51 f7       	brne	.-44     	; 0xa1e <main+0x78>
 a4a:	10 e9       	ldi	r17, 0x90	; 144
 a4c:	01 e0       	ldi	r16, 0x01	; 1
 a4e:	f1 2c       	mov	r15, r1
 a50:	e1 2c       	mov	r14, r1
 a52:	04 c0       	rjmp	.+8      	; 0xa5c <main+0xb6>
		a = b;
		b = c;
 a54:	16 2f       	mov	r17, r22
 a56:	07 2f       	mov	r16, r23
 a58:	f8 2e       	mov	r15, r24
 a5a:	e9 2e       	mov	r14, r25
//--------Find GCD function --------------------------------------------------
unsigned long int findGCD(unsigned long int a, unsigned long int b)
{
	unsigned long int c;
	while(1){
		c = a%b;
 a5c:	6d 2d       	mov	r22, r13
 a5e:	7c 2d       	mov	r23, r12
 a60:	8b 2d       	mov	r24, r11
 a62:	9a 2d       	mov	r25, r10
 a64:	21 2f       	mov	r18, r17
 a66:	30 2f       	mov	r19, r16
 a68:	4f 2d       	mov	r20, r15
 a6a:	5e 2d       	mov	r21, r14
 a6c:	59 d1       	rcall	.+690    	; 0xd20 <__udivmodsi4>
 a6e:	d1 2e       	mov	r13, r17
 a70:	c0 2e       	mov	r12, r16
 a72:	bf 2c       	mov	r11, r15
 a74:	ae 2c       	mov	r10, r14
		if(c==0){return b;}
 a76:	61 15       	cp	r22, r1
 a78:	71 05       	cpc	r23, r1
 a7a:	81 05       	cpc	r24, r1
 a7c:	91 05       	cpc	r25, r1
 a7e:	51 f7       	brne	.-44     	; 0xa54 <main+0xae>
 a80:	0f 2e       	mov	r0, r31
 a82:	f4 ef       	ldi	r31, 0xF4	; 244
 a84:	df 2e       	mov	r13, r31
 a86:	f0 2d       	mov	r31, r0
 a88:	cc 24       	eor	r12, r12
 a8a:	c3 94       	inc	r12
 a8c:	b1 2c       	mov	r11, r1
 a8e:	a1 2c       	mov	r10, r1
 a90:	04 c0       	rjmp	.+8      	; 0xa9a <main+0xf4>
		a = b;
		b = c;
 a92:	d6 2e       	mov	r13, r22
 a94:	c7 2e       	mov	r12, r23
 a96:	b8 2e       	mov	r11, r24
 a98:	a9 2e       	mov	r10, r25
//--------Find GCD function --------------------------------------------------
unsigned long int findGCD(unsigned long int a, unsigned long int b)
{
	unsigned long int c;
	while(1){
		c = a%b;
 a9a:	61 2f       	mov	r22, r17
 a9c:	70 2f       	mov	r23, r16
 a9e:	8f 2d       	mov	r24, r15
 aa0:	9e 2d       	mov	r25, r14
 aa2:	2d 2d       	mov	r18, r13
 aa4:	3c 2d       	mov	r19, r12
 aa6:	4b 2d       	mov	r20, r11
 aa8:	5a 2d       	mov	r21, r10
 aaa:	3a d1       	rcall	.+628    	; 0xd20 <__udivmodsi4>
 aac:	1d 2d       	mov	r17, r13
 aae:	0c 2d       	mov	r16, r12
 ab0:	fb 2c       	mov	r15, r11
 ab2:	ea 2c       	mov	r14, r10
		if(c==0){return b;}
 ab4:	61 15       	cp	r22, r1
 ab6:	71 05       	cpc	r23, r1
 ab8:	81 05       	cpc	r24, r1
 aba:	91 05       	cpc	r25, r1
 abc:	51 f7       	brne	.-44     	; 0xa92 <main+0xec>
 abe:	0f 2e       	mov	r0, r31
 ac0:	f8 ec       	ldi	r31, 0xC8	; 200
 ac2:	ef 2e       	mov	r14, r31
 ac4:	f0 2d       	mov	r31, r0
 ac6:	f1 2c       	mov	r15, r1
 ac8:	00 e0       	ldi	r16, 0x00	; 0
 aca:	10 e0       	ldi	r17, 0x00	; 0
 acc:	04 c0       	rjmp	.+8      	; 0xad6 <main+0x130>
		a = b;
		b = c;
 ace:	e6 2e       	mov	r14, r22
 ad0:	f7 2e       	mov	r15, r23
 ad2:	08 2f       	mov	r16, r24
 ad4:	19 2f       	mov	r17, r25
//--------Find GCD function --------------------------------------------------
unsigned long int findGCD(unsigned long int a, unsigned long int b)
{
	unsigned long int c;
	while(1){
		c = a%b;
 ad6:	6d 2d       	mov	r22, r13
 ad8:	7c 2d       	mov	r23, r12
 ada:	8b 2d       	mov	r24, r11
 adc:	9a 2d       	mov	r25, r10
 ade:	2e 2d       	mov	r18, r14
 ae0:	3f 2d       	mov	r19, r15
 ae2:	40 2f       	mov	r20, r16
 ae4:	51 2f       	mov	r21, r17
 ae6:	1c d1       	rcall	.+568    	; 0xd20 <__udivmodsi4>
 ae8:	de 2c       	mov	r13, r14
 aea:	cf 2c       	mov	r12, r15
 aec:	b0 2e       	mov	r11, r16
 aee:	a1 2e       	mov	r10, r17
		if(c==0){return b;}
 af0:	61 15       	cp	r22, r1
 af2:	71 05       	cpc	r23, r1
 af4:	81 05       	cpc	r24, r1
 af6:	91 05       	cpc	r25, r1
 af8:	51 f7       	brne	.-44     	; 0xace <main+0x128>

	//Greatest common divisor for all tasks or smallest time unit for tasks.
	unsigned long int GCD = tmpGCD;

	//Recalculate GCD periods for scheduler
	unsigned long int key_tick_period = key_tick_calc/GCD;
 afa:	68 ec       	ldi	r22, 0xC8	; 200
 afc:	70 e0       	ldi	r23, 0x00	; 0
 afe:	80 e0       	ldi	r24, 0x00	; 0
 b00:	90 e0       	ldi	r25, 0x00	; 0
 b02:	2e 2d       	mov	r18, r14
 b04:	3f 2d       	mov	r19, r15
 b06:	40 2f       	mov	r20, r16
 b08:	51 2f       	mov	r21, r17
 b0a:	0a d1       	rcall	.+532    	; 0xd20 <__udivmodsi4>
 b0c:	49 01       	movw	r8, r18
 b0e:	5a 01       	movw	r10, r20
	unsigned long int display_tick_period = display_tick_calc/GCD;
 b10:	64 e6       	ldi	r22, 0x64	; 100
 b12:	70 e0       	ldi	r23, 0x00	; 0
 b14:	80 e0       	ldi	r24, 0x00	; 0
 b16:	90 e0       	ldi	r25, 0x00	; 0
 b18:	2e 2d       	mov	r18, r14
 b1a:	3f 2d       	mov	r19, r15
 b1c:	40 2f       	mov	r20, r16
 b1e:	51 2f       	mov	r21, r17
 b20:	ff d0       	rcall	.+510    	; 0xd20 <__udivmodsi4>
	unsigned long int enemy_tick_period = enemy_tick_calc/GCD;
	unsigned long int collision_tick_period = collision_tick_calc/GCD;

	//Declare an array of tasks 
	static task task1, task2, task3, task4, task5, task6, task7, task8;
	task *tasks[] = { &task1, &task2, &task3, &task4, &task5, &task6, &task7, &task8};
 b22:	80 e1       	ldi	r24, 0x10	; 16
 b24:	e1 e3       	ldi	r30, 0x31	; 49
 b26:	f1 e0       	ldi	r31, 0x01	; 1
 b28:	de 01       	movw	r26, r28
 b2a:	11 96       	adiw	r26, 0x01	; 1
 b2c:	01 90       	ld	r0, Z+
 b2e:	0d 92       	st	X+, r0
 b30:	8a 95       	dec	r24
 b32:	e1 f7       	brne	.-8      	; 0xb2c <main+0x186>
	const unsigned short numTasks = sizeof(tasks)/sizeof(task*);

	// Task 1
	task1.state = FETCHKEY;//Task initial state.
 b34:	e7 e0       	ldi	r30, 0x07	; 7
 b36:	f2 e0       	ldi	r31, 0x02	; 2
 b38:	10 82       	st	Z, r1
	task1.period = key_tick_period;//Task Period.
 b3a:	81 82       	std	Z+1, r8	; 0x01
 b3c:	92 82       	std	Z+2, r9	; 0x02
 b3e:	a3 82       	std	Z+3, r10	; 0x03
 b40:	b4 82       	std	Z+4, r11	; 0x04
	task1.elapsedTime = 0;//Task current elapsed time.
 b42:	15 82       	std	Z+5, r1	; 0x05
 b44:	16 82       	std	Z+6, r1	; 0x06
 b46:	17 82       	std	Z+7, r1	; 0x07
 b48:	10 86       	std	Z+8, r1	; 0x08
	task1.TickFct = &key_tick;//Function pointer for the tick.
 b4a:	80 e4       	ldi	r24, 0x40	; 64
 b4c:	93 e0       	ldi	r25, 0x03	; 3
 b4e:	92 87       	std	Z+10, r25	; 0x0a
 b50:	81 87       	std	Z+9, r24	; 0x09

	// Task 2
	task2.state = DISPLAY_START_MESSAGE;//Task initial state.
 b52:	ec ef       	ldi	r30, 0xFC	; 252
 b54:	f1 e0       	ldi	r31, 0x01	; 1
 b56:	10 82       	st	Z, r1
	task2.period = display_tick_period;//Task Period.
 b58:	21 83       	std	Z+1, r18	; 0x01
 b5a:	32 83       	std	Z+2, r19	; 0x02
 b5c:	43 83       	std	Z+3, r20	; 0x03
 b5e:	54 83       	std	Z+4, r21	; 0x04
	task2.elapsedTime = 0;//Task current elapsed time.
 b60:	15 82       	std	Z+5, r1	; 0x05
 b62:	16 82       	std	Z+6, r1	; 0x06
 b64:	17 82       	std	Z+7, r1	; 0x07
 b66:	10 86       	std	Z+8, r1	; 0x08
	task2.TickFct = &display_tick;//Function pointer for the tick.
 b68:	89 ef       	ldi	r24, 0xF9	; 249
 b6a:	91 e0       	ldi	r25, 0x01	; 1
 b6c:	92 87       	std	Z+10, r25	; 0x0a
 b6e:	81 87       	std	Z+9, r24	; 0x09

	// Task 3
	task3.state = GAME_INIT;//Task initial state.
 b70:	e1 ef       	ldi	r30, 0xF1	; 241
 b72:	f1 e0       	ldi	r31, 0x01	; 1
 b74:	10 82       	st	Z, r1
	task3.period = game_start_tick_period;//Task Period.
 b76:	21 83       	std	Z+1, r18	; 0x01
 b78:	32 83       	std	Z+2, r19	; 0x02
 b7a:	43 83       	std	Z+3, r20	; 0x03
 b7c:	54 83       	std	Z+4, r21	; 0x04
	task3.elapsedTime = 0;//Task current elapsed time.
 b7e:	15 82       	std	Z+5, r1	; 0x05
 b80:	16 82       	std	Z+6, r1	; 0x06
 b82:	17 82       	std	Z+7, r1	; 0x07
 b84:	10 86       	std	Z+8, r1	; 0x08
	task3.TickFct = &game_start_tick;//Function pointer for the tick.
 b86:	87 e7       	ldi	r24, 0x77	; 119
 b88:	90 e0       	ldi	r25, 0x00	; 0
 b8a:	92 87       	std	Z+10, r25	; 0x0a
 b8c:	81 87       	std	Z+9, r24	; 0x09

	// Task 4
	task4.state = TERRAIN_INIT;//Task initial state.
 b8e:	0f 2e       	mov	r0, r31
 b90:	f6 ee       	ldi	r31, 0xE6	; 230
 b92:	cf 2e       	mov	r12, r31
 b94:	f1 e0       	ldi	r31, 0x01	; 1
 b96:	df 2e       	mov	r13, r31
 b98:	f0 2d       	mov	r31, r0
 b9a:	d6 01       	movw	r26, r12
 b9c:	1c 92       	st	X, r1
	task4.period = terrain_tick_period;//Task Period.
 b9e:	60 e9       	ldi	r22, 0x90	; 144
 ba0:	71 e0       	ldi	r23, 0x01	; 1
 ba2:	80 e0       	ldi	r24, 0x00	; 0
 ba4:	90 e0       	ldi	r25, 0x00	; 0
 ba6:	2e 2d       	mov	r18, r14
 ba8:	3f 2d       	mov	r19, r15
 baa:	40 2f       	mov	r20, r16
 bac:	51 2f       	mov	r21, r17
 bae:	b8 d0       	rcall	.+368    	; 0xd20 <__udivmodsi4>
 bb0:	f6 01       	movw	r30, r12
 bb2:	21 83       	std	Z+1, r18	; 0x01
 bb4:	32 83       	std	Z+2, r19	; 0x02
 bb6:	43 83       	std	Z+3, r20	; 0x03
 bb8:	54 83       	std	Z+4, r21	; 0x04
	task4.elapsedTime = 0;//Task current elapsed time.
 bba:	15 82       	std	Z+5, r1	; 0x05
 bbc:	16 82       	std	Z+6, r1	; 0x06
 bbe:	17 82       	std	Z+7, r1	; 0x07
 bc0:	10 86       	std	Z+8, r1	; 0x08
	task4.TickFct = &terrain_tick;//Function pointer for the tick.
 bc2:	8c ea       	ldi	r24, 0xAC	; 172
 bc4:	90 e0       	ldi	r25, 0x00	; 0
 bc6:	92 87       	std	Z+10, r25	; 0x0a
 bc8:	81 87       	std	Z+9, r24	; 0x09

	// Task 5
	task5.state = PLAYER_ONE_INIT;//Task initial state.
 bca:	eb ed       	ldi	r30, 0xDB	; 219
 bcc:	f1 e0       	ldi	r31, 0x01	; 1
 bce:	10 82       	st	Z, r1
	task5.period = player_one_tick_period;//Task Period.
 bd0:	81 82       	std	Z+1, r8	; 0x01
 bd2:	92 82       	std	Z+2, r9	; 0x02
 bd4:	a3 82       	std	Z+3, r10	; 0x03
 bd6:	b4 82       	std	Z+4, r11	; 0x04
	task5.elapsedTime = 0;//Task current elapsed time.
 bd8:	15 82       	std	Z+5, r1	; 0x05
 bda:	16 82       	std	Z+6, r1	; 0x06
 bdc:	17 82       	std	Z+7, r1	; 0x07
 bde:	10 86       	std	Z+8, r1	; 0x08
	task5.TickFct = &player_one_tick;//Function pointer for the tick.
 be0:	8b e5       	ldi	r24, 0x5B	; 91
 be2:	93 e0       	ldi	r25, 0x03	; 3
 be4:	92 87       	std	Z+10, r25	; 0x0a
 be6:	81 87       	std	Z+9, r24	; 0x09

	// Task 6
	task6.state = PLAYER_ONE_PROJECTILE_INIT;//Task initial state.
 be8:	e0 ed       	ldi	r30, 0xD0	; 208
 bea:	f1 e0       	ldi	r31, 0x01	; 1
 bec:	10 82       	st	Z, r1
	task6.period = player_one_projectile_tick_period;//Task Period.
 bee:	81 82       	std	Z+1, r8	; 0x01
 bf0:	92 82       	std	Z+2, r9	; 0x02
 bf2:	a3 82       	std	Z+3, r10	; 0x03
 bf4:	b4 82       	std	Z+4, r11	; 0x04
	task6.elapsedTime = 0;//Task current elapsed time.
 bf6:	15 82       	std	Z+5, r1	; 0x05
 bf8:	16 82       	std	Z+6, r1	; 0x06
 bfa:	17 82       	std	Z+7, r1	; 0x07
 bfc:	10 86       	std	Z+8, r1	; 0x08
	task6.TickFct = &player_one_projectile_tick;//Function pointer for the tick.
 bfe:	89 ea       	ldi	r24, 0xA9	; 169
 c00:	93 e0       	ldi	r25, 0x03	; 3
 c02:	92 87       	std	Z+10, r25	; 0x0a
 c04:	81 87       	std	Z+9, r24	; 0x09
	
	// Task 7
	task7.state = ENEMY_INIT;//Task initial state.
 c06:	0f 2e       	mov	r0, r31
 c08:	f5 ec       	ldi	r31, 0xC5	; 197
 c0a:	cf 2e       	mov	r12, r31
 c0c:	f1 e0       	ldi	r31, 0x01	; 1
 c0e:	df 2e       	mov	r13, r31
 c10:	f0 2d       	mov	r31, r0
 c12:	f6 01       	movw	r30, r12
 c14:	10 82       	st	Z, r1
	task7.period = enemy_tick_period;//Task Period.
 c16:	64 ef       	ldi	r22, 0xF4	; 244
 c18:	71 e0       	ldi	r23, 0x01	; 1
 c1a:	80 e0       	ldi	r24, 0x00	; 0
 c1c:	90 e0       	ldi	r25, 0x00	; 0
 c1e:	2e 2d       	mov	r18, r14
 c20:	3f 2d       	mov	r19, r15
 c22:	40 2f       	mov	r20, r16
 c24:	51 2f       	mov	r21, r17
 c26:	7c d0       	rcall	.+248    	; 0xd20 <__udivmodsi4>
 c28:	d6 01       	movw	r26, r12
 c2a:	11 96       	adiw	r26, 0x01	; 1
 c2c:	2d 93       	st	X+, r18
 c2e:	3d 93       	st	X+, r19
 c30:	4d 93       	st	X+, r20
 c32:	5c 93       	st	X, r21
 c34:	14 97       	sbiw	r26, 0x04	; 4
	task7.elapsedTime = 0;//Task current elapsed time.
 c36:	f6 01       	movw	r30, r12
 c38:	15 82       	std	Z+5, r1	; 0x05
 c3a:	16 82       	std	Z+6, r1	; 0x06
 c3c:	17 82       	std	Z+7, r1	; 0x07
 c3e:	10 86       	std	Z+8, r1	; 0x08
	task7.TickFct = &enemy_tick;//Function pointer for the tick.
 c40:	82 e3       	ldi	r24, 0x32	; 50
 c42:	94 e0       	ldi	r25, 0x04	; 4
 c44:	92 87       	std	Z+10, r25	; 0x0a
 c46:	81 87       	std	Z+9, r24	; 0x09
		
	// Task 8
	task8.state = COLLISION_INIT;//Task initial state.
 c48:	ea eb       	ldi	r30, 0xBA	; 186
 c4a:	f1 e0       	ldi	r31, 0x01	; 1
 c4c:	10 82       	st	Z, r1
	task8.period = collision_tick_period;//Task Period.
 c4e:	81 82       	std	Z+1, r8	; 0x01
 c50:	92 82       	std	Z+2, r9	; 0x02
 c52:	a3 82       	std	Z+3, r10	; 0x03
 c54:	b4 82       	std	Z+4, r11	; 0x04
	task8.elapsedTime = 0;//Task current elapsed time.
 c56:	15 82       	std	Z+5, r1	; 0x05
 c58:	16 82       	std	Z+6, r1	; 0x06
 c5a:	17 82       	std	Z+7, r1	; 0x07
	task8.TickFct = &collision_tick;//Function pointer for the tick.
 c5c:	10 86       	std	Z+8, r1	; 0x08
 c5e:	8f ec       	ldi	r24, 0xCF	; 207

	// Set the timer and turn it on
	TimerSet(GCD);
 c60:	90 e0       	ldi	r25, 0x00	; 0
 c62:	92 87       	std	Z+10, r25	; 0x0a
 c64:	81 87       	std	Z+9, r24	; 0x09
 c66:	6e 2d       	mov	r22, r14
	TimerOn();
 c68:	7f 2d       	mov	r23, r15
 c6a:	80 2f       	mov	r24, r16

	// initialize LCD
	LCD_init();
 c6c:	91 2f       	mov	r25, r17
 c6e:	f8 da       	rcall	.-2576   	; 0x260 <TimerSet>

	// initialize RNG
	srand(time(NULL));
 c70:	08 db       	rcall	.-2544   	; 0x282 <TimerOn>
 c72:	8e db       	rcall	.-2276   	; 0x390 <LCD_init>
 c74:	80 e0       	ldi	r24, 0x00	; 0
 c76:	90 e0       	ldi	r25, 0x00	; 0
 c78:	27 da       	rcall	.-2994   	; 0xc8 <time>
 c7a:	cb 01       	movw	r24, r22
 c7c:	d1 d0       	rcall	.+418    	; 0xe20 <srand>
 c7e:	6e 01       	movw	r12, r28
 c80:	f1 e1       	ldi	r31, 0x11	; 17
 c82:	cf 0e       	add	r12, r31
 c84:	d1 1c       	adc	r13, r1
 c86:	ce 01       	movw	r24, r28
 c88:	01 96       	adiw	r24, 0x01	; 1
 c8a:	7c 01       	movw	r14, r24
	unsigned short i; // Scheduler for-loop iterator
	while(1) {
		// Scheduler code
		for ( i = 0; i < numTasks; i++ ) {
			// Task is ready to tick
			if ( tasks[i]->elapsedTime == tasks[i]->period ) {
 c8c:	d7 01       	movw	r26, r14
 c8e:	0d 91       	ld	r16, X+
 c90:	1d 91       	ld	r17, X+
 c92:	7d 01       	movw	r14, r26
 c94:	f8 01       	movw	r30, r16
 c96:	45 81       	ldd	r20, Z+5	; 0x05
 c98:	56 81       	ldd	r21, Z+6	; 0x06
 c9a:	67 81       	ldd	r22, Z+7	; 0x07
 c9c:	70 85       	ldd	r23, Z+8	; 0x08
 c9e:	81 81       	ldd	r24, Z+1	; 0x01
 ca0:	92 81       	ldd	r25, Z+2	; 0x02
 ca2:	a3 81       	ldd	r26, Z+3	; 0x03
 ca4:	b4 81       	ldd	r27, Z+4	; 0x04
 ca6:	48 17       	cp	r20, r24
 ca8:	59 07       	cpc	r21, r25
 caa:	6a 07       	cpc	r22, r26
 cac:	7b 07       	cpc	r23, r27
 cae:	79 f4       	brne	.+30     	; 0xcce <main+0x328>
				// Setting next state for task
				tasks[i]->state = tasks[i]->TickFct(tasks[i]->state);
 cb0:	80 81       	ld	r24, Z
 cb2:	01 84       	ldd	r0, Z+9	; 0x09
 cb4:	f2 85       	ldd	r31, Z+10	; 0x0a
 cb6:	e0 2d       	mov	r30, r0
 cb8:	08 2e       	mov	r0, r24
 cba:	00 0c       	add	r0, r0
 cbc:	99 0b       	sbc	r25, r25
 cbe:	09 95       	icall
 cc0:	d8 01       	movw	r26, r16
 cc2:	8c 93       	st	X, r24
				// Reset the elapsed time for next tick.
				tasks[i]->elapsedTime = 0;
 cc4:	f8 01       	movw	r30, r16
 cc6:	15 82       	std	Z+5, r1	; 0x05
 cc8:	16 82       	std	Z+6, r1	; 0x06
 cca:	17 82       	std	Z+7, r1	; 0x07
 ccc:	10 86       	std	Z+8, r1	; 0x08
			}
			tasks[i]->elapsedTime += 1;
 cce:	f8 01       	movw	r30, r16
 cd0:	85 81       	ldd	r24, Z+5	; 0x05
 cd2:	96 81       	ldd	r25, Z+6	; 0x06
 cd4:	a7 81       	ldd	r26, Z+7	; 0x07
 cd6:	b0 85       	ldd	r27, Z+8	; 0x08
 cd8:	01 96       	adiw	r24, 0x01	; 1
 cda:	a1 1d       	adc	r26, r1
 cdc:	b1 1d       	adc	r27, r1
 cde:	85 83       	std	Z+5, r24	; 0x05
 ce0:	96 83       	std	Z+6, r25	; 0x06
 ce2:	a7 83       	std	Z+7, r26	; 0x07
 ce4:	b0 87       	std	Z+8, r27	; 0x08
	srand(time(NULL));

	unsigned short i; // Scheduler for-loop iterator
	while(1) {
		// Scheduler code
		for ( i = 0; i < numTasks; i++ ) {
 ce6:	ce 14       	cp	r12, r14
 ce8:	df 04       	cpc	r13, r15
 cea:	81 f6       	brne	.-96     	; 0xc8c <main+0x2e6>
				// Reset the elapsed time for next tick.
				tasks[i]->elapsedTime = 0;
			}
			tasks[i]->elapsedTime += 1;
		}
		while(!TimerFlag);
 cec:	80 91 1b 02 	lds	r24, 0x021B	; 0x80021b <TimerFlag>
 cf0:	88 23       	and	r24, r24
 cf2:	e1 f3       	breq	.-8      	; 0xcec <main+0x346>
		TimerFlag = 0;
 cf4:	10 92 1b 02 	sts	0x021B, r1	; 0x80021b <TimerFlag>
	}
 cf8:	c6 cf       	rjmp	.-116    	; 0xc86 <main+0x2e0>

00000cfa <__divmodhi4>:
 cfa:	97 fb       	bst	r25, 7
 cfc:	07 2e       	mov	r0, r23
 cfe:	16 f4       	brtc	.+4      	; 0xd04 <__divmodhi4+0xa>
 d00:	00 94       	com	r0
 d02:	06 d0       	rcall	.+12     	; 0xd10 <__divmodhi4_neg1>
 d04:	77 fd       	sbrc	r23, 7
 d06:	08 d0       	rcall	.+16     	; 0xd18 <__divmodhi4_neg2>
 d08:	2d d0       	rcall	.+90     	; 0xd64 <__udivmodhi4>
 d0a:	07 fc       	sbrc	r0, 7
 d0c:	05 d0       	rcall	.+10     	; 0xd18 <__divmodhi4_neg2>
 d0e:	3e f4       	brtc	.+14     	; 0xd1e <__divmodhi4_exit>

00000d10 <__divmodhi4_neg1>:
 d10:	90 95       	com	r25
 d12:	81 95       	neg	r24
 d14:	9f 4f       	sbci	r25, 0xFF	; 255
 d16:	08 95       	ret

00000d18 <__divmodhi4_neg2>:
 d18:	70 95       	com	r23
 d1a:	61 95       	neg	r22
 d1c:	7f 4f       	sbci	r23, 0xFF	; 255

00000d1e <__divmodhi4_exit>:
 d1e:	08 95       	ret

00000d20 <__udivmodsi4>:
 d20:	a1 e2       	ldi	r26, 0x21	; 33
 d22:	1a 2e       	mov	r1, r26
 d24:	aa 1b       	sub	r26, r26
 d26:	bb 1b       	sub	r27, r27
 d28:	fd 01       	movw	r30, r26
 d2a:	0d c0       	rjmp	.+26     	; 0xd46 <__udivmodsi4_ep>

00000d2c <__udivmodsi4_loop>:
 d2c:	aa 1f       	adc	r26, r26
 d2e:	bb 1f       	adc	r27, r27
 d30:	ee 1f       	adc	r30, r30
 d32:	ff 1f       	adc	r31, r31
 d34:	a2 17       	cp	r26, r18
 d36:	b3 07       	cpc	r27, r19
 d38:	e4 07       	cpc	r30, r20
 d3a:	f5 07       	cpc	r31, r21
 d3c:	20 f0       	brcs	.+8      	; 0xd46 <__udivmodsi4_ep>
 d3e:	a2 1b       	sub	r26, r18
 d40:	b3 0b       	sbc	r27, r19
 d42:	e4 0b       	sbc	r30, r20
 d44:	f5 0b       	sbc	r31, r21

00000d46 <__udivmodsi4_ep>:
 d46:	66 1f       	adc	r22, r22
 d48:	77 1f       	adc	r23, r23
 d4a:	88 1f       	adc	r24, r24
 d4c:	99 1f       	adc	r25, r25
 d4e:	1a 94       	dec	r1
 d50:	69 f7       	brne	.-38     	; 0xd2c <__udivmodsi4_loop>
 d52:	60 95       	com	r22
 d54:	70 95       	com	r23
 d56:	80 95       	com	r24
 d58:	90 95       	com	r25
 d5a:	9b 01       	movw	r18, r22
 d5c:	ac 01       	movw	r20, r24
 d5e:	bd 01       	movw	r22, r26
 d60:	cf 01       	movw	r24, r30
 d62:	08 95       	ret

00000d64 <__udivmodhi4>:
 d64:	aa 1b       	sub	r26, r26
 d66:	bb 1b       	sub	r27, r27
 d68:	51 e1       	ldi	r21, 0x11	; 17
 d6a:	07 c0       	rjmp	.+14     	; 0xd7a <__udivmodhi4_ep>

00000d6c <__udivmodhi4_loop>:
 d6c:	aa 1f       	adc	r26, r26
 d6e:	bb 1f       	adc	r27, r27
 d70:	a6 17       	cp	r26, r22
 d72:	b7 07       	cpc	r27, r23
 d74:	10 f0       	brcs	.+4      	; 0xd7a <__udivmodhi4_ep>
 d76:	a6 1b       	sub	r26, r22
 d78:	b7 0b       	sbc	r27, r23

00000d7a <__udivmodhi4_ep>:
 d7a:	88 1f       	adc	r24, r24
 d7c:	99 1f       	adc	r25, r25
 d7e:	5a 95       	dec	r21
 d80:	a9 f7       	brne	.-22     	; 0xd6c <__udivmodhi4_loop>
 d82:	80 95       	com	r24
 d84:	90 95       	com	r25
 d86:	bc 01       	movw	r22, r24
 d88:	cd 01       	movw	r24, r26
 d8a:	08 95       	ret

00000d8c <do_rand>:
 d8c:	8f 92       	push	r8
 d8e:	9f 92       	push	r9
 d90:	af 92       	push	r10
 d92:	bf 92       	push	r11
 d94:	cf 92       	push	r12
 d96:	df 92       	push	r13
 d98:	ef 92       	push	r14
 d9a:	ff 92       	push	r15
 d9c:	cf 93       	push	r28
 d9e:	df 93       	push	r29
 da0:	ec 01       	movw	r28, r24
 da2:	68 81       	ld	r22, Y
 da4:	79 81       	ldd	r23, Y+1	; 0x01
 da6:	8a 81       	ldd	r24, Y+2	; 0x02
 da8:	9b 81       	ldd	r25, Y+3	; 0x03
 daa:	61 15       	cp	r22, r1
 dac:	71 05       	cpc	r23, r1
 dae:	81 05       	cpc	r24, r1
 db0:	91 05       	cpc	r25, r1
 db2:	21 f4       	brne	.+8      	; 0xdbc <do_rand+0x30>
 db4:	64 e2       	ldi	r22, 0x24	; 36
 db6:	79 ed       	ldi	r23, 0xD9	; 217
 db8:	8b e5       	ldi	r24, 0x5B	; 91
 dba:	97 e0       	ldi	r25, 0x07	; 7
 dbc:	2d e1       	ldi	r18, 0x1D	; 29
 dbe:	33 ef       	ldi	r19, 0xF3	; 243
 dc0:	41 e0       	ldi	r20, 0x01	; 1
 dc2:	50 e0       	ldi	r21, 0x00	; 0
 dc4:	38 d0       	rcall	.+112    	; 0xe36 <__divmodsi4>
 dc6:	49 01       	movw	r8, r18
 dc8:	5a 01       	movw	r10, r20
 dca:	9b 01       	movw	r18, r22
 dcc:	ac 01       	movw	r20, r24
 dce:	a7 ea       	ldi	r26, 0xA7	; 167
 dd0:	b1 e4       	ldi	r27, 0x41	; 65
 dd2:	4d d0       	rcall	.+154    	; 0xe6e <__muluhisi3>
 dd4:	6b 01       	movw	r12, r22
 dd6:	7c 01       	movw	r14, r24
 dd8:	ac ee       	ldi	r26, 0xEC	; 236
 dda:	b4 ef       	ldi	r27, 0xF4	; 244
 ddc:	a5 01       	movw	r20, r10
 dde:	94 01       	movw	r18, r8
 de0:	52 d0       	rcall	.+164    	; 0xe86 <__mulohisi3>
 de2:	dc 01       	movw	r26, r24
 de4:	cb 01       	movw	r24, r22
 de6:	8c 0d       	add	r24, r12
 de8:	9d 1d       	adc	r25, r13
 dea:	ae 1d       	adc	r26, r14
 dec:	bf 1d       	adc	r27, r15
 dee:	b7 ff       	sbrs	r27, 7
 df0:	03 c0       	rjmp	.+6      	; 0xdf8 <do_rand+0x6c>
 df2:	01 97       	sbiw	r24, 0x01	; 1
 df4:	a1 09       	sbc	r26, r1
 df6:	b0 48       	sbci	r27, 0x80	; 128
 df8:	88 83       	st	Y, r24
 dfa:	99 83       	std	Y+1, r25	; 0x01
 dfc:	aa 83       	std	Y+2, r26	; 0x02
 dfe:	bb 83       	std	Y+3, r27	; 0x03
 e00:	9f 77       	andi	r25, 0x7F	; 127
 e02:	df 91       	pop	r29
 e04:	cf 91       	pop	r28
 e06:	ff 90       	pop	r15
 e08:	ef 90       	pop	r14
 e0a:	df 90       	pop	r13
 e0c:	cf 90       	pop	r12
 e0e:	bf 90       	pop	r11
 e10:	af 90       	pop	r10
 e12:	9f 90       	pop	r9
 e14:	8f 90       	pop	r8
 e16:	08 95       	ret

00000e18 <rand_r>:
 e18:	b9 cf       	rjmp	.-142    	; 0xd8c <do_rand>

00000e1a <rand>:
 e1a:	80 e0       	ldi	r24, 0x00	; 0
 e1c:	91 e0       	ldi	r25, 0x01	; 1
 e1e:	b6 cf       	rjmp	.-148    	; 0xd8c <do_rand>

00000e20 <srand>:
 e20:	a0 e0       	ldi	r26, 0x00	; 0
 e22:	b0 e0       	ldi	r27, 0x00	; 0
 e24:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 e28:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 e2c:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
 e30:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
 e34:	08 95       	ret

00000e36 <__divmodsi4>:
 e36:	05 2e       	mov	r0, r21
 e38:	97 fb       	bst	r25, 7
 e3a:	16 f4       	brtc	.+4      	; 0xe40 <__divmodsi4+0xa>
 e3c:	00 94       	com	r0
 e3e:	0f d0       	rcall	.+30     	; 0xe5e <__negsi2>
 e40:	57 fd       	sbrc	r21, 7
 e42:	05 d0       	rcall	.+10     	; 0xe4e <__divmodsi4_neg2>
 e44:	6d df       	rcall	.-294    	; 0xd20 <__udivmodsi4>
 e46:	07 fc       	sbrc	r0, 7
 e48:	02 d0       	rcall	.+4      	; 0xe4e <__divmodsi4_neg2>
 e4a:	46 f4       	brtc	.+16     	; 0xe5c <__divmodsi4_exit>
 e4c:	08 c0       	rjmp	.+16     	; 0xe5e <__negsi2>

00000e4e <__divmodsi4_neg2>:
 e4e:	50 95       	com	r21
 e50:	40 95       	com	r20
 e52:	30 95       	com	r19
 e54:	21 95       	neg	r18
 e56:	3f 4f       	sbci	r19, 0xFF	; 255
 e58:	4f 4f       	sbci	r20, 0xFF	; 255
 e5a:	5f 4f       	sbci	r21, 0xFF	; 255

00000e5c <__divmodsi4_exit>:
 e5c:	08 95       	ret

00000e5e <__negsi2>:
 e5e:	90 95       	com	r25
 e60:	80 95       	com	r24
 e62:	70 95       	com	r23
 e64:	61 95       	neg	r22
 e66:	7f 4f       	sbci	r23, 0xFF	; 255
 e68:	8f 4f       	sbci	r24, 0xFF	; 255
 e6a:	9f 4f       	sbci	r25, 0xFF	; 255
 e6c:	08 95       	ret

00000e6e <__muluhisi3>:
 e6e:	0f d0       	rcall	.+30     	; 0xe8e <__umulhisi3>
 e70:	a5 9f       	mul	r26, r21
 e72:	90 0d       	add	r25, r0
 e74:	b4 9f       	mul	r27, r20
 e76:	90 0d       	add	r25, r0
 e78:	a4 9f       	mul	r26, r20
 e7a:	80 0d       	add	r24, r0
 e7c:	91 1d       	adc	r25, r1
 e7e:	11 24       	eor	r1, r1
 e80:	08 95       	ret

00000e82 <__mulshisi3>:
 e82:	b7 ff       	sbrs	r27, 7
 e84:	f4 cf       	rjmp	.-24     	; 0xe6e <__muluhisi3>

00000e86 <__mulohisi3>:
 e86:	f3 df       	rcall	.-26     	; 0xe6e <__muluhisi3>
 e88:	82 1b       	sub	r24, r18
 e8a:	93 0b       	sbc	r25, r19
 e8c:	08 95       	ret

00000e8e <__umulhisi3>:
 e8e:	a2 9f       	mul	r26, r18
 e90:	b0 01       	movw	r22, r0
 e92:	b3 9f       	mul	r27, r19
 e94:	c0 01       	movw	r24, r0
 e96:	a3 9f       	mul	r26, r19
 e98:	70 0d       	add	r23, r0
 e9a:	81 1d       	adc	r24, r1
 e9c:	11 24       	eor	r1, r1
 e9e:	91 1d       	adc	r25, r1
 ea0:	b2 9f       	mul	r27, r18
 ea2:	70 0d       	add	r23, r0
 ea4:	81 1d       	adc	r24, r1
 ea6:	11 24       	eor	r1, r1
 ea8:	91 1d       	adc	r25, r1
 eaa:	08 95       	ret

00000eac <_exit>:
 eac:	f8 94       	cli

00000eae <__stop_program>:
 eae:	ff cf       	rjmp	.-2      	; 0xeae <__stop_program>
