
CustomProject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000074  00800100  000006e2  00000776  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000006e2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000003e  00800174  00800174  000007ea  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000007ea  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000081c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e8  00000000  00000000  0000085c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001224  00000000  00000000  00000944  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a55  00000000  00000000  00001b68  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000095e  00000000  00000000  000025bd  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000264  00000000  00000000  00002f1c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000804  00000000  00000000  00003180  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000983  00000000  00000000  00003984  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000108  00000000  00000000  00004307  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	cc c0       	rjmp	.+408    	; 0x1ce <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e2 ee       	ldi	r30, 0xE2	; 226
  a0:	f6 e0       	ldi	r31, 0x06	; 6
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a4 37       	cpi	r26, 0x74	; 116
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a4 e7       	ldi	r26, 0x74	; 116
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a2 3b       	cpi	r26, 0xB2	; 178
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	56 d2       	rcall	.+1196   	; 0x570 <main>
  c4:	0c c3       	rjmp	.+1560   	; 0x6de <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <game_start_tick>:
		if(c==0){return b;}
		a = b;
		b = c;
	}
	return 0;
}
  c8:	cf 93       	push	r28
  ca:	df 93       	push	r29
  cc:	cd b7       	in	r28, 0x3d	; 61
  ce:	de b7       	in	r29, 0x3e	; 62
  d0:	a0 97       	sbiw	r28, 0x20	; 32
  d2:	0f b6       	in	r0, 0x3f	; 63
  d4:	f8 94       	cli
  d6:	de bf       	out	0x3e, r29	; 62
  d8:	0f be       	out	0x3f, r0	; 63
  da:	cd bf       	out	0x3d, r28	; 61
  dc:	00 97       	sbiw	r24, 0x00	; 0
  de:	21 f0       	breq	.+8      	; 0xe8 <game_start_tick+0x20>
  e0:	81 30       	cpi	r24, 0x01	; 1
  e2:	91 05       	cpc	r25, r1
  e4:	31 f0       	breq	.+12     	; 0xf2 <game_start_tick+0x2a>
  e6:	0a c0       	rjmp	.+20     	; 0xfc <game_start_tick+0x34>
  e8:	80 91 25 01 	lds	r24, 0x0125	; 0x800125 <key>
  ec:	81 34       	cpi	r24, 0x41	; 65
  ee:	61 f4       	brne	.+24     	; 0x108 <game_start_tick+0x40>
  f0:	22 c0       	rjmp	.+68     	; 0x136 <game_start_tick+0x6e>
  f2:	80 91 25 01 	lds	r24, 0x0125	; 0x800125 <key>
  f6:	84 34       	cpi	r24, 0x44	; 68
  f8:	f1 f4       	brne	.+60     	; 0x136 <game_start_tick+0x6e>
  fa:	06 c0       	rjmp	.+12     	; 0x108 <game_start_tick+0x40>
  fc:	00 97       	sbiw	r24, 0x00	; 0
  fe:	21 f0       	breq	.+8      	; 0x108 <game_start_tick+0x40>
 100:	81 30       	cpi	r24, 0x01	; 1
 102:	91 05       	cpc	r25, r1
 104:	31 f5       	brne	.+76     	; 0x152 <game_start_tick+0x8a>
 106:	17 c0       	rjmp	.+46     	; 0x136 <game_start_tick+0x6e>
 108:	10 92 ac 01 	sts	0x01AC, r1	; 0x8001ac <playFlag>
 10c:	80 e2       	ldi	r24, 0x20	; 32
 10e:	ea e2       	ldi	r30, 0x2A	; 42
 110:	f1 e0       	ldi	r31, 0x01	; 1
 112:	de 01       	movw	r26, r28
 114:	11 96       	adiw	r26, 0x01	; 1
 116:	01 90       	ld	r0, Z+
 118:	0d 92       	st	X+, r0
 11a:	8a 95       	dec	r24
 11c:	e1 f7       	brne	.-8      	; 0x116 <game_start_tick+0x4e>
 11e:	80 e2       	ldi	r24, 0x20	; 32
 120:	fe 01       	movw	r30, r28
 122:	31 96       	adiw	r30, 0x01	; 1
 124:	a0 e0       	ldi	r26, 0x00	; 0
 126:	b1 e0       	ldi	r27, 0x01	; 1
 128:	01 90       	ld	r0, Z+
 12a:	0d 92       	st	X+, r0
 12c:	8a 95       	dec	r24
 12e:	e1 f7       	brne	.-8      	; 0x128 <game_start_tick+0x60>
 130:	80 e0       	ldi	r24, 0x00	; 0
 132:	90 e0       	ldi	r25, 0x00	; 0
 134:	0e c0       	rjmp	.+28     	; 0x152 <game_start_tick+0x8a>
 136:	81 e0       	ldi	r24, 0x01	; 1
 138:	80 93 ac 01 	sts	0x01AC, r24	; 0x8001ac <playFlag>
 13c:	80 e2       	ldi	r24, 0x20	; 32
 13e:	e4 e5       	ldi	r30, 0x54	; 84
 140:	f1 e0       	ldi	r31, 0x01	; 1
 142:	a0 e0       	ldi	r26, 0x00	; 0
 144:	b1 e0       	ldi	r27, 0x01	; 1
 146:	01 90       	ld	r0, Z+
 148:	0d 92       	st	X+, r0
 14a:	8a 95       	dec	r24
 14c:	e1 f7       	brne	.-8      	; 0x146 <game_start_tick+0x7e>
 14e:	81 e0       	ldi	r24, 0x01	; 1
 150:	90 e0       	ldi	r25, 0x00	; 0
 152:	a0 96       	adiw	r28, 0x20	; 32
 154:	0f b6       	in	r0, 0x3f	; 63
 156:	f8 94       	cli
 158:	de bf       	out	0x3e, r29	; 62
 15a:	0f be       	out	0x3f, r0	; 63
 15c:	cd bf       	out	0x3d, r28	; 61
 15e:	df 91       	pop	r29
 160:	cf 91       	pop	r28
 162:	08 95       	ret

00000164 <TimerSet>:
 164:	60 93 26 01 	sts	0x0126, r22	; 0x800126 <_avr_timer_M>
 168:	70 93 27 01 	sts	0x0127, r23	; 0x800127 <_avr_timer_M+0x1>
 16c:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <_avr_timer_M+0x2>
 170:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <_avr_timer_M+0x3>
 174:	60 93 ad 01 	sts	0x01AD, r22	; 0x8001ad <_avr_timer_cntcurr>
 178:	70 93 ae 01 	sts	0x01AE, r23	; 0x8001ae <_avr_timer_cntcurr+0x1>
 17c:	80 93 af 01 	sts	0x01AF, r24	; 0x8001af <_avr_timer_cntcurr+0x2>
 180:	90 93 b0 01 	sts	0x01B0, r25	; 0x8001b0 <_avr_timer_cntcurr+0x3>
 184:	08 95       	ret

00000186 <TimerOn>:
 186:	8b e0       	ldi	r24, 0x0B	; 11
 188:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 18c:	8d e7       	ldi	r24, 0x7D	; 125
 18e:	90 e0       	ldi	r25, 0x00	; 0
 190:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 194:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 198:	82 e0       	ldi	r24, 0x02	; 2
 19a:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 19e:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 1a2:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 1a6:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <_avr_timer_M>
 1aa:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <_avr_timer_M+0x1>
 1ae:	a0 91 28 01 	lds	r26, 0x0128	; 0x800128 <_avr_timer_M+0x2>
 1b2:	b0 91 29 01 	lds	r27, 0x0129	; 0x800129 <_avr_timer_M+0x3>
 1b6:	80 93 ad 01 	sts	0x01AD, r24	; 0x8001ad <_avr_timer_cntcurr>
 1ba:	90 93 ae 01 	sts	0x01AE, r25	; 0x8001ae <_avr_timer_cntcurr+0x1>
 1be:	a0 93 af 01 	sts	0x01AF, r26	; 0x8001af <_avr_timer_cntcurr+0x2>
 1c2:	b0 93 b0 01 	sts	0x01B0, r27	; 0x8001b0 <_avr_timer_cntcurr+0x3>
 1c6:	8f b7       	in	r24, 0x3f	; 63
 1c8:	80 68       	ori	r24, 0x80	; 128
 1ca:	8f bf       	out	0x3f, r24	; 63
 1cc:	08 95       	ret

000001ce <__vector_13>:
 1ce:	1f 92       	push	r1
 1d0:	0f 92       	push	r0
 1d2:	0f b6       	in	r0, 0x3f	; 63
 1d4:	0f 92       	push	r0
 1d6:	11 24       	eor	r1, r1
 1d8:	8f 93       	push	r24
 1da:	9f 93       	push	r25
 1dc:	af 93       	push	r26
 1de:	bf 93       	push	r27
 1e0:	80 91 ad 01 	lds	r24, 0x01AD	; 0x8001ad <_avr_timer_cntcurr>
 1e4:	90 91 ae 01 	lds	r25, 0x01AE	; 0x8001ae <_avr_timer_cntcurr+0x1>
 1e8:	a0 91 af 01 	lds	r26, 0x01AF	; 0x8001af <_avr_timer_cntcurr+0x2>
 1ec:	b0 91 b0 01 	lds	r27, 0x01B0	; 0x8001b0 <_avr_timer_cntcurr+0x3>
 1f0:	01 97       	sbiw	r24, 0x01	; 1
 1f2:	a1 09       	sbc	r26, r1
 1f4:	b1 09       	sbc	r27, r1
 1f6:	80 93 ad 01 	sts	0x01AD, r24	; 0x8001ad <_avr_timer_cntcurr>
 1fa:	90 93 ae 01 	sts	0x01AE, r25	; 0x8001ae <_avr_timer_cntcurr+0x1>
 1fe:	a0 93 af 01 	sts	0x01AF, r26	; 0x8001af <_avr_timer_cntcurr+0x2>
 202:	b0 93 b0 01 	sts	0x01B0, r27	; 0x8001b0 <_avr_timer_cntcurr+0x3>
 206:	89 2b       	or	r24, r25
 208:	8a 2b       	or	r24, r26
 20a:	8b 2b       	or	r24, r27
 20c:	99 f4       	brne	.+38     	; 0x234 <__vector_13+0x66>
 20e:	81 e0       	ldi	r24, 0x01	; 1
 210:	80 93 b1 01 	sts	0x01B1, r24	; 0x8001b1 <TimerFlag>
 214:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <_avr_timer_M>
 218:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <_avr_timer_M+0x1>
 21c:	a0 91 28 01 	lds	r26, 0x0128	; 0x800128 <_avr_timer_M+0x2>
 220:	b0 91 29 01 	lds	r27, 0x0129	; 0x800129 <_avr_timer_M+0x3>
 224:	80 93 ad 01 	sts	0x01AD, r24	; 0x8001ad <_avr_timer_cntcurr>
 228:	90 93 ae 01 	sts	0x01AE, r25	; 0x8001ae <_avr_timer_cntcurr+0x1>
 22c:	a0 93 af 01 	sts	0x01AF, r26	; 0x8001af <_avr_timer_cntcurr+0x2>
 230:	b0 93 b0 01 	sts	0x01B0, r27	; 0x8001b0 <_avr_timer_cntcurr+0x3>
 234:	bf 91       	pop	r27
 236:	af 91       	pop	r26
 238:	9f 91       	pop	r25
 23a:	8f 91       	pop	r24
 23c:	0f 90       	pop	r0
 23e:	0f be       	out	0x3f, r0	; 63
 240:	0f 90       	pop	r0
 242:	1f 90       	pop	r1
 244:	18 95       	reti

00000246 <delay_ms>:
 246:	18 16       	cp	r1, r24
 248:	19 06       	cpc	r1, r25
 24a:	5c f0       	brlt	.+22     	; 0x262 <delay_ms+0x1c>
 24c:	08 95       	ret
 24e:	00 00       	nop
 250:	21 50       	subi	r18, 0x01	; 1
 252:	31 09       	sbc	r19, r1
 254:	e1 f7       	brne	.-8      	; 0x24e <delay_ms+0x8>
 256:	4f 5f       	subi	r20, 0xFF	; 255
 258:	5f 4f       	sbci	r21, 0xFF	; 255
 25a:	84 17       	cp	r24, r20
 25c:	95 07       	cpc	r25, r21
 25e:	19 f4       	brne	.+6      	; 0x266 <delay_ms+0x20>
 260:	08 95       	ret
 262:	40 e0       	ldi	r20, 0x00	; 0
 264:	50 e0       	ldi	r21, 0x00	; 0
 266:	27 e0       	ldi	r18, 0x07	; 7
 268:	33 e0       	ldi	r19, 0x03	; 3
 26a:	f1 cf       	rjmp	.-30     	; 0x24e <delay_ms+0x8>

0000026c <LCD_WriteCommand>:
 26c:	10 98       	cbi	0x02, 0	; 2
 26e:	8b b9       	out	0x0b, r24	; 11
 270:	11 9a       	sbi	0x02, 1	; 2
 272:	00 00       	nop
 274:	11 98       	cbi	0x02, 1	; 2
 276:	82 e0       	ldi	r24, 0x02	; 2
 278:	90 e0       	ldi	r25, 0x00	; 0
 27a:	e5 cf       	rjmp	.-54     	; 0x246 <delay_ms>
 27c:	08 95       	ret

0000027e <LCD_ClearScreen>:
 27e:	81 e0       	ldi	r24, 0x01	; 1
 280:	f5 cf       	rjmp	.-22     	; 0x26c <LCD_WriteCommand>
 282:	08 95       	ret

00000284 <LCD_Cursor>:
 284:	81 31       	cpi	r24, 0x11	; 17
 286:	18 f4       	brcc	.+6      	; 0x28e <LCD_Cursor+0xa>
 288:	81 58       	subi	r24, 0x81	; 129
 28a:	f0 cf       	rjmp	.-32     	; 0x26c <LCD_WriteCommand>
 28c:	08 95       	ret
 28e:	81 55       	subi	r24, 0x51	; 81
 290:	ed cf       	rjmp	.-38     	; 0x26c <LCD_WriteCommand>
 292:	08 95       	ret

00000294 <LCD_init>:
 294:	84 e6       	ldi	r24, 0x64	; 100
 296:	90 e0       	ldi	r25, 0x00	; 0
 298:	d6 df       	rcall	.-84     	; 0x246 <delay_ms>
 29a:	88 e3       	ldi	r24, 0x38	; 56
 29c:	e7 df       	rcall	.-50     	; 0x26c <LCD_WriteCommand>
 29e:	86 e0       	ldi	r24, 0x06	; 6
 2a0:	e5 df       	rcall	.-54     	; 0x26c <LCD_WriteCommand>
 2a2:	8f e0       	ldi	r24, 0x0F	; 15
 2a4:	e3 df       	rcall	.-58     	; 0x26c <LCD_WriteCommand>
 2a6:	81 e0       	ldi	r24, 0x01	; 1
 2a8:	e1 df       	rcall	.-62     	; 0x26c <LCD_WriteCommand>
 2aa:	8a e0       	ldi	r24, 0x0A	; 10
 2ac:	90 e0       	ldi	r25, 0x00	; 0
 2ae:	cb cf       	rjmp	.-106    	; 0x246 <delay_ms>
 2b0:	08 95       	ret

000002b2 <LCD_WriteData>:
 2b2:	10 9a       	sbi	0x02, 0	; 2
 2b4:	8b b9       	out	0x0b, r24	; 11
 2b6:	11 9a       	sbi	0x02, 1	; 2
 2b8:	00 00       	nop
 2ba:	11 98       	cbi	0x02, 1	; 2
 2bc:	81 e0       	ldi	r24, 0x01	; 1
 2be:	90 e0       	ldi	r25, 0x00	; 0
 2c0:	c2 cf       	rjmp	.-124    	; 0x246 <delay_ms>
 2c2:	08 95       	ret

000002c4 <LCD_DisplayString>:
 2c4:	0f 93       	push	r16
 2c6:	1f 93       	push	r17
 2c8:	cf 93       	push	r28
 2ca:	df 93       	push	r29
 2cc:	18 2f       	mov	r17, r24
 2ce:	eb 01       	movw	r28, r22
 2d0:	d6 df       	rcall	.-84     	; 0x27e <LCD_ClearScreen>
 2d2:	88 81       	ld	r24, Y
 2d4:	88 23       	and	r24, r24
 2d6:	51 f0       	breq	.+20     	; 0x2ec <LCD_DisplayString+0x28>
 2d8:	01 e0       	ldi	r16, 0x01	; 1
 2da:	01 0f       	add	r16, r17
 2dc:	81 2f       	mov	r24, r17
 2de:	d2 df       	rcall	.-92     	; 0x284 <LCD_Cursor>
 2e0:	89 91       	ld	r24, Y+
 2e2:	e7 df       	rcall	.-50     	; 0x2b2 <LCD_WriteData>
 2e4:	10 2f       	mov	r17, r16
 2e6:	88 81       	ld	r24, Y
 2e8:	81 11       	cpse	r24, r1
 2ea:	f6 cf       	rjmp	.-20     	; 0x2d8 <LCD_DisplayString+0x14>
 2ec:	df 91       	pop	r29
 2ee:	cf 91       	pop	r28
 2f0:	1f 91       	pop	r17
 2f2:	0f 91       	pop	r16
 2f4:	08 95       	ret

000002f6 <display_tick>:
 2f6:	cf 93       	push	r28
 2f8:	df 93       	push	r29
 2fa:	ec 01       	movw	r28, r24
 2fc:	60 e0       	ldi	r22, 0x00	; 0
 2fe:	71 e0       	ldi	r23, 0x01	; 1
 300:	81 e0       	ldi	r24, 0x01	; 1
 302:	e0 df       	rcall	.-64     	; 0x2c4 <LCD_DisplayString>
 304:	ce 01       	movw	r24, r28
 306:	df 91       	pop	r29
 308:	cf 91       	pop	r28
 30a:	08 95       	ret

0000030c <GetKeypadKey>:
 30c:	8f ee       	ldi	r24, 0xEF	; 239
 30e:	88 b9       	out	0x08, r24	; 8
 310:	00 00       	nop
 312:	30 9b       	sbis	0x06, 0	; 6
 314:	29 c0       	rjmp	.+82     	; 0x368 <GetKeypadKey+0x5c>
 316:	31 9b       	sbis	0x06, 1	; 6
 318:	29 c0       	rjmp	.+82     	; 0x36c <GetKeypadKey+0x60>
 31a:	32 9b       	sbis	0x06, 2	; 6
 31c:	29 c0       	rjmp	.+82     	; 0x370 <GetKeypadKey+0x64>
 31e:	33 9b       	sbis	0x06, 3	; 6
 320:	29 c0       	rjmp	.+82     	; 0x374 <GetKeypadKey+0x68>
 322:	8f ed       	ldi	r24, 0xDF	; 223
 324:	88 b9       	out	0x08, r24	; 8
 326:	00 00       	nop
 328:	30 9b       	sbis	0x06, 0	; 6
 32a:	26 c0       	rjmp	.+76     	; 0x378 <GetKeypadKey+0x6c>
 32c:	31 9b       	sbis	0x06, 1	; 6
 32e:	26 c0       	rjmp	.+76     	; 0x37c <GetKeypadKey+0x70>
 330:	32 9b       	sbis	0x06, 2	; 6
 332:	26 c0       	rjmp	.+76     	; 0x380 <GetKeypadKey+0x74>
 334:	33 9b       	sbis	0x06, 3	; 6
 336:	26 c0       	rjmp	.+76     	; 0x384 <GetKeypadKey+0x78>
 338:	8f eb       	ldi	r24, 0xBF	; 191
 33a:	88 b9       	out	0x08, r24	; 8
 33c:	00 00       	nop
 33e:	30 9b       	sbis	0x06, 0	; 6
 340:	23 c0       	rjmp	.+70     	; 0x388 <GetKeypadKey+0x7c>
 342:	31 9b       	sbis	0x06, 1	; 6
 344:	23 c0       	rjmp	.+70     	; 0x38c <GetKeypadKey+0x80>
 346:	32 9b       	sbis	0x06, 2	; 6
 348:	23 c0       	rjmp	.+70     	; 0x390 <GetKeypadKey+0x84>
 34a:	33 9b       	sbis	0x06, 3	; 6
 34c:	23 c0       	rjmp	.+70     	; 0x394 <GetKeypadKey+0x88>
 34e:	8f e7       	ldi	r24, 0x7F	; 127
 350:	88 b9       	out	0x08, r24	; 8
 352:	00 00       	nop
 354:	30 9b       	sbis	0x06, 0	; 6
 356:	20 c0       	rjmp	.+64     	; 0x398 <GetKeypadKey+0x8c>
 358:	31 9b       	sbis	0x06, 1	; 6
 35a:	20 c0       	rjmp	.+64     	; 0x39c <GetKeypadKey+0x90>
 35c:	32 9b       	sbis	0x06, 2	; 6
 35e:	20 c0       	rjmp	.+64     	; 0x3a0 <GetKeypadKey+0x94>
 360:	33 9b       	sbis	0x06, 3	; 6
 362:	20 c0       	rjmp	.+64     	; 0x3a4 <GetKeypadKey+0x98>
 364:	80 e0       	ldi	r24, 0x00	; 0
 366:	08 95       	ret
 368:	80 e2       	ldi	r24, 0x20	; 32
 36a:	08 95       	ret
 36c:	84 e3       	ldi	r24, 0x34	; 52
 36e:	08 95       	ret
 370:	87 e3       	ldi	r24, 0x37	; 55
 372:	08 95       	ret
 374:	8a e2       	ldi	r24, 0x2A	; 42
 376:	08 95       	ret
 378:	82 e3       	ldi	r24, 0x32	; 50
 37a:	08 95       	ret
 37c:	85 e3       	ldi	r24, 0x35	; 53
 37e:	08 95       	ret
 380:	88 e3       	ldi	r24, 0x38	; 56
 382:	08 95       	ret
 384:	80 e3       	ldi	r24, 0x30	; 48
 386:	08 95       	ret
 388:	83 e3       	ldi	r24, 0x33	; 51
 38a:	08 95       	ret
 38c:	86 e3       	ldi	r24, 0x36	; 54
 38e:	08 95       	ret
 390:	89 e3       	ldi	r24, 0x39	; 57
 392:	08 95       	ret
 394:	83 e2       	ldi	r24, 0x23	; 35
 396:	08 95       	ret
 398:	81 e4       	ldi	r24, 0x41	; 65
 39a:	08 95       	ret
 39c:	82 e4       	ldi	r24, 0x42	; 66
 39e:	08 95       	ret
 3a0:	83 e4       	ldi	r24, 0x43	; 67
 3a2:	08 95       	ret
 3a4:	84 e4       	ldi	r24, 0x44	; 68
 3a6:	08 95       	ret

000003a8 <key_tick>:
 3a8:	cf 93       	push	r28
 3aa:	df 93       	push	r29
 3ac:	ec 01       	movw	r28, r24
 3ae:	ae df       	rcall	.-164    	; 0x30c <GetKeypadKey>
 3b0:	80 93 25 01 	sts	0x0125, r24	; 0x800125 <key>
 3b4:	ce 01       	movw	r24, r28
 3b6:	df 91       	pop	r29
 3b8:	cf 91       	pop	r28
 3ba:	08 95       	ret

000003bc <moveLeft>:
 3bc:	98 2f       	mov	r25, r24
 3be:	9f 7e       	andi	r25, 0xEF	; 239
 3c0:	91 50       	subi	r25, 0x01	; 1
 3c2:	9f 30       	cpi	r25, 0x0F	; 15
 3c4:	08 f4       	brcc	.+2      	; 0x3c8 <moveLeft+0xc>
 3c6:	81 50       	subi	r24, 0x01	; 1
 3c8:	08 95       	ret

000003ca <moveRight>:
 3ca:	8f 30       	cpi	r24, 0x0F	; 15
 3cc:	10 f4       	brcc	.+4      	; 0x3d2 <moveRight+0x8>
 3ce:	8f 5f       	subi	r24, 0xFF	; 255
 3d0:	08 95       	ret
 3d2:	90 ef       	ldi	r25, 0xF0	; 240
 3d4:	98 0f       	add	r25, r24
 3d6:	9f 30       	cpi	r25, 0x0F	; 15
 3d8:	08 f4       	brcc	.+2      	; 0x3dc <moveRight+0x12>
 3da:	8f 5f       	subi	r24, 0xFF	; 255
 3dc:	08 95       	ret

000003de <player_one_tick>:
 3de:	00 97       	sbiw	r24, 0x00	; 0
 3e0:	21 f0       	breq	.+8      	; 0x3ea <player_one_tick+0xc>
 3e2:	81 30       	cpi	r24, 0x01	; 1
 3e4:	91 05       	cpc	r25, r1
 3e6:	31 f0       	breq	.+12     	; 0x3f4 <player_one_tick+0x16>
 3e8:	0a c0       	rjmp	.+20     	; 0x3fe <player_one_tick+0x20>
 3ea:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <playFlag>
 3ee:	81 30       	cpi	r24, 0x01	; 1
 3f0:	61 f4       	brne	.+24     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3f2:	10 c0       	rjmp	.+32     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 3f4:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <playFlag>
 3f8:	88 23       	and	r24, r24
 3fa:	39 f0       	breq	.+14     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3fc:	0b c0       	rjmp	.+22     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 3fe:	00 97       	sbiw	r24, 0x00	; 0
 400:	21 f0       	breq	.+8      	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 402:	81 30       	cpi	r24, 0x01	; 1
 404:	91 05       	cpc	r25, r1
 406:	b1 f5       	brne	.+108    	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 408:	05 c0       	rjmp	.+10     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 40a:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <player_one_location>
 40e:	80 e0       	ldi	r24, 0x00	; 0
 410:	90 e0       	ldi	r25, 0x00	; 0
 412:	08 95       	ret
 414:	80 91 25 01 	lds	r24, 0x0125	; 0x800125 <key>
 418:	82 33       	cpi	r24, 0x32	; 50
 41a:	51 f4       	brne	.+20     	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 41c:	90 91 ab 01 	lds	r25, 0x01AB	; 0x8001ab <player_one_location>
 420:	80 ef       	ldi	r24, 0xF0	; 240
 422:	89 0f       	add	r24, r25
 424:	80 31       	cpi	r24, 0x10	; 16
 426:	08 f0       	brcs	.+2      	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 428:	89 2f       	mov	r24, r25
 42a:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <player_one_location>
 42e:	19 c0       	rjmp	.+50     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 430:	88 33       	cpi	r24, 0x38	; 56
 432:	41 f4       	brne	.+16     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 434:	80 91 ab 01 	lds	r24, 0x01AB	; 0x8001ab <player_one_location>
 438:	80 31       	cpi	r24, 0x10	; 16
 43a:	08 f4       	brcc	.+2      	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 43c:	80 5f       	subi	r24, 0xF0	; 240
 43e:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <player_one_location>
 442:	0f c0       	rjmp	.+30     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 444:	84 33       	cpi	r24, 0x34	; 52
 446:	31 f4       	brne	.+12     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 448:	80 91 ab 01 	lds	r24, 0x01AB	; 0x8001ab <player_one_location>
 44c:	b7 df       	rcall	.-146    	; 0x3bc <moveLeft>
 44e:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <player_one_location>
 452:	07 c0       	rjmp	.+14     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 454:	86 33       	cpi	r24, 0x36	; 54
 456:	29 f4       	brne	.+10     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 458:	80 91 ab 01 	lds	r24, 0x01AB	; 0x8001ab <player_one_location>
 45c:	b6 df       	rcall	.-148    	; 0x3ca <moveRight>
 45e:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <player_one_location>
 462:	e0 91 ab 01 	lds	r30, 0x01AB	; 0x8001ab <player_one_location>
 466:	f0 e0       	ldi	r31, 0x00	; 0
 468:	e0 50       	subi	r30, 0x00	; 0
 46a:	ff 4f       	sbci	r31, 0xFF	; 255
 46c:	8e e3       	ldi	r24, 0x3E	; 62
 46e:	80 83       	st	Z, r24
 470:	81 e0       	ldi	r24, 0x01	; 1
 472:	90 e0       	ldi	r25, 0x00	; 0
 474:	08 95       	ret

00000476 <player_one_projectile_tick>:
 476:	bf 92       	push	r11
 478:	cf 92       	push	r12
 47a:	df 92       	push	r13
 47c:	ef 92       	push	r14
 47e:	ff 92       	push	r15
 480:	0f 93       	push	r16
 482:	1f 93       	push	r17
 484:	cf 93       	push	r28
 486:	df 93       	push	r29
 488:	00 97       	sbiw	r24, 0x00	; 0
 48a:	21 f0       	breq	.+8      	; 0x494 <player_one_projectile_tick+0x1e>
 48c:	81 30       	cpi	r24, 0x01	; 1
 48e:	91 05       	cpc	r25, r1
 490:	31 f0       	breq	.+12     	; 0x49e <player_one_projectile_tick+0x28>
 492:	0a c0       	rjmp	.+20     	; 0x4a8 <player_one_projectile_tick+0x32>
 494:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <playFlag>
 498:	81 30       	cpi	r24, 0x01	; 1
 49a:	69 f4       	brne	.+26     	; 0x4b6 <player_one_projectile_tick+0x40>
 49c:	17 c0       	rjmp	.+46     	; 0x4cc <player_one_projectile_tick+0x56>
 49e:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <playFlag>
 4a2:	88 23       	and	r24, r24
 4a4:	41 f0       	breq	.+16     	; 0x4b6 <player_one_projectile_tick+0x40>
 4a6:	12 c0       	rjmp	.+36     	; 0x4cc <player_one_projectile_tick+0x56>
 4a8:	00 97       	sbiw	r24, 0x00	; 0
 4aa:	29 f0       	breq	.+10     	; 0x4b6 <player_one_projectile_tick+0x40>
 4ac:	81 30       	cpi	r24, 0x01	; 1
 4ae:	91 05       	cpc	r25, r1
 4b0:	09 f0       	breq	.+2      	; 0x4b4 <player_one_projectile_tick+0x3e>
 4b2:	54 c0       	rjmp	.+168    	; 0x55c <player_one_projectile_tick+0xe6>
 4b4:	0b c0       	rjmp	.+22     	; 0x4cc <player_one_projectile_tick+0x56>
 4b6:	e0 e2       	ldi	r30, 0x20	; 32
 4b8:	f1 e0       	ldi	r31, 0x01	; 1
 4ba:	8f ef       	ldi	r24, 0xFF	; 255
 4bc:	80 83       	st	Z, r24
 4be:	81 83       	std	Z+1, r24	; 0x01
 4c0:	82 83       	std	Z+2, r24	; 0x02
 4c2:	83 83       	std	Z+3, r24	; 0x03
 4c4:	84 83       	std	Z+4, r24	; 0x04
 4c6:	80 e0       	ldi	r24, 0x00	; 0
 4c8:	90 e0       	ldi	r25, 0x00	; 0
 4ca:	48 c0       	rjmp	.+144    	; 0x55c <player_one_projectile_tick+0xe6>
 4cc:	80 91 25 01 	lds	r24, 0x0125	; 0x800125 <key>
 4d0:	85 33       	cpi	r24, 0x35	; 53
 4d2:	c1 f5       	brne	.+112    	; 0x544 <player_one_projectile_tick+0xce>
 4d4:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <player_one_projectile_location>
 4d8:	8f 3f       	cpi	r24, 0xFF	; 255
 4da:	49 f0       	breq	.+18     	; 0x4ee <player_one_projectile_tick+0x78>
 4dc:	e1 e2       	ldi	r30, 0x21	; 33
 4de:	f1 e0       	ldi	r31, 0x01	; 1
 4e0:	81 e0       	ldi	r24, 0x01	; 1
 4e2:	90 e0       	ldi	r25, 0x00	; 0
 4e4:	ac 01       	movw	r20, r24
 4e6:	21 91       	ld	r18, Z+
 4e8:	2f 3f       	cpi	r18, 0xFF	; 255
 4ea:	51 f4       	brne	.+20     	; 0x500 <player_one_projectile_tick+0x8a>
 4ec:	02 c0       	rjmp	.+4      	; 0x4f2 <player_one_projectile_tick+0x7c>
 4ee:	40 e0       	ldi	r20, 0x00	; 0
 4f0:	50 e0       	ldi	r21, 0x00	; 0
 4f2:	fa 01       	movw	r30, r20
 4f4:	e0 5e       	subi	r30, 0xE0	; 224
 4f6:	fe 4f       	sbci	r31, 0xFE	; 254
 4f8:	80 91 ab 01 	lds	r24, 0x01AB	; 0x8001ab <player_one_location>
 4fc:	80 83       	st	Z, r24
 4fe:	22 c0       	rjmp	.+68     	; 0x544 <player_one_projectile_tick+0xce>
 500:	01 96       	adiw	r24, 0x01	; 1
 502:	85 30       	cpi	r24, 0x05	; 5
 504:	91 05       	cpc	r25, r1
 506:	71 f7       	brne	.-36     	; 0x4e4 <player_one_projectile_tick+0x6e>
 508:	1d c0       	rjmp	.+58     	; 0x544 <player_one_projectile_tick+0xce>
 50a:	88 81       	ld	r24, Y
 50c:	8f 3f       	cpi	r24, 0xFF	; 255
 50e:	41 f0       	breq	.+16     	; 0x520 <player_one_projectile_tick+0xaa>
 510:	98 2f       	mov	r25, r24
 512:	9f 7e       	andi	r25, 0xEF	; 239
 514:	9f 30       	cpi	r25, 0x0F	; 15
 516:	11 f4       	brne	.+4      	; 0x51c <player_one_projectile_tick+0xa6>
 518:	b8 82       	st	Y, r11
 51a:	02 c0       	rjmp	.+4      	; 0x520 <player_one_projectile_tick+0xaa>
 51c:	56 df       	rcall	.-340    	; 0x3ca <moveRight>
 51e:	88 83       	st	Y, r24
 520:	21 96       	adiw	r28, 0x01	; 1
 522:	ce 15       	cp	r28, r14
 524:	df 05       	cpc	r29, r15
 526:	89 f7       	brne	.-30     	; 0x50a <player_one_projectile_tick+0x94>
 528:	8d e2       	ldi	r24, 0x2D	; 45
 52a:	d8 01       	movw	r26, r16
 52c:	ed 91       	ld	r30, X+
 52e:	8d 01       	movw	r16, r26
 530:	f0 e0       	ldi	r31, 0x00	; 0
 532:	e0 50       	subi	r30, 0x00	; 0
 534:	ff 4f       	sbci	r31, 0xFF	; 255
 536:	80 83       	st	Z, r24
 538:	ae 15       	cp	r26, r14
 53a:	bf 05       	cpc	r27, r15
 53c:	b1 f7       	brne	.-20     	; 0x52a <player_one_projectile_tick+0xb4>
 53e:	81 e0       	ldi	r24, 0x01	; 1
 540:	90 e0       	ldi	r25, 0x00	; 0
 542:	0c c0       	rjmp	.+24     	; 0x55c <player_one_projectile_tick+0xe6>
 544:	00 e2       	ldi	r16, 0x20	; 32
 546:	11 e0       	ldi	r17, 0x01	; 1
 548:	0f 2e       	mov	r0, r31
 54a:	f5 e2       	ldi	r31, 0x25	; 37
 54c:	ef 2e       	mov	r14, r31
 54e:	f1 e0       	ldi	r31, 0x01	; 1
 550:	ff 2e       	mov	r15, r31
 552:	f0 2d       	mov	r31, r0
 554:	e8 01       	movw	r28, r16
 556:	bb 24       	eor	r11, r11
 558:	ba 94       	dec	r11
 55a:	d7 cf       	rjmp	.-82     	; 0x50a <player_one_projectile_tick+0x94>
 55c:	df 91       	pop	r29
 55e:	cf 91       	pop	r28
 560:	1f 91       	pop	r17
 562:	0f 91       	pop	r16
 564:	ff 90       	pop	r15
 566:	ef 90       	pop	r14
 568:	df 90       	pop	r13
 56a:	cf 90       	pop	r12
 56c:	bf 90       	pop	r11
 56e:	08 95       	ret

00000570 <main>:

// --------END User defined FSMs-----------------------------------------------

// Implement scheduler code from PES.
int main()
{
 570:	cf 93       	push	r28
 572:	df 93       	push	r29
 574:	cd b7       	in	r28, 0x3d	; 61
 576:	de b7       	in	r29, 0x3e	; 62
 578:	2a 97       	sbiw	r28, 0x0a	; 10
 57a:	0f b6       	in	r0, 0x3f	; 63
 57c:	f8 94       	cli
 57e:	de bf       	out	0x3e, r29	; 62
 580:	0f be       	out	0x3f, r0	; 63
 582:	cd bf       	out	0x3d, r28	; 61
// Set Data Direction Registers
// Buttons PORTA[0-7], set AVR PORTA to pull down logic
DDRA = 0xFF; PORTA = 0x00; //output
 584:	8f ef       	ldi	r24, 0xFF	; 255
 586:	81 b9       	out	0x01, r24	; 1
 588:	12 b8       	out	0x02, r1	; 2
DDRB = 0xFF; PORTB = 0x00; //output
 58a:	84 b9       	out	0x04, r24	; 4
 58c:	15 b8       	out	0x05, r1	; 5
DDRC = 0xF0; PORTC = 0x0F; // PC7..4 outputs init 0s, PC3..0 inputs init 1
 58e:	90 ef       	ldi	r25, 0xF0	; 240
 590:	97 b9       	out	0x07, r25	; 7
 592:	9f e0       	ldi	r25, 0x0F	; 15
 594:	98 b9       	out	0x08, r25	; 8
DDRD = 0xFF; PORTD = 0x00; //output
 596:	8a b9       	out	0x0a, r24	; 10
 598:	1b b8       	out	0x0b, r1	; 11

LCD_init();
 59a:	7c de       	rcall	.-776    	; 0x294 <LCD_init>
unsigned long int player_one_tick_period = player_one_tick_calc/GCD;
unsigned long int player_one_projectile_tick_period = player_one_projectile_tick_calc/GCD;

//Declare an array of tasks 
static task task1, task2, task3, task4, task5;
task *tasks[] = { &task1, &task2, &task3, &task4, &task5};
 59c:	8a e0       	ldi	r24, 0x0A	; 10
 59e:	ea e4       	ldi	r30, 0x4A	; 74
 5a0:	f1 e0       	ldi	r31, 0x01	; 1
 5a2:	de 01       	movw	r26, r28
 5a4:	11 96       	adiw	r26, 0x01	; 1
 5a6:	01 90       	ld	r0, Z+
 5a8:	0d 92       	st	X+, r0
 5aa:	8a 95       	dec	r24
 5ac:	e1 f7       	brne	.-8      	; 0x5a6 <main+0x36>
const unsigned short numTasks = sizeof(tasks)/sizeof(task*);

// Task 1
task1.state = FETCHKEY;//Task initial state.
 5ae:	e0 ea       	ldi	r30, 0xA0	; 160
 5b0:	f1 e0       	ldi	r31, 0x01	; 1
 5b2:	10 82       	st	Z, r1
task1.period = key_tick_period;//Task Period.
 5b4:	81 e0       	ldi	r24, 0x01	; 1
 5b6:	90 e0       	ldi	r25, 0x00	; 0
 5b8:	a0 e0       	ldi	r26, 0x00	; 0
 5ba:	b0 e0       	ldi	r27, 0x00	; 0
 5bc:	81 83       	std	Z+1, r24	; 0x01
 5be:	92 83       	std	Z+2, r25	; 0x02
 5c0:	a3 83       	std	Z+3, r26	; 0x03
 5c2:	b4 83       	std	Z+4, r27	; 0x04
task1.elapsedTime = 0;//Task current elapsed time.
 5c4:	15 82       	std	Z+5, r1	; 0x05
 5c6:	16 82       	std	Z+6, r1	; 0x06
 5c8:	17 82       	std	Z+7, r1	; 0x07
 5ca:	10 86       	std	Z+8, r1	; 0x08
task1.TickFct = &key_tick;//Function pointer for the tick.
 5cc:	24 ed       	ldi	r18, 0xD4	; 212
 5ce:	31 e0       	ldi	r19, 0x01	; 1
 5d0:	32 87       	std	Z+10, r19	; 0x0a
 5d2:	21 87       	std	Z+9, r18	; 0x09

// Task 2
task2.state = DISPLAY;//Task initial state.
 5d4:	e5 e9       	ldi	r30, 0x95	; 149
 5d6:	f1 e0       	ldi	r31, 0x01	; 1
 5d8:	10 82       	st	Z, r1
task2.period = display_tick_period;//Task Period.
 5da:	81 83       	std	Z+1, r24	; 0x01
 5dc:	92 83       	std	Z+2, r25	; 0x02
 5de:	a3 83       	std	Z+3, r26	; 0x03
 5e0:	b4 83       	std	Z+4, r27	; 0x04
task2.elapsedTime = 0;//Task current elapsed time.
 5e2:	15 82       	std	Z+5, r1	; 0x05
 5e4:	16 82       	std	Z+6, r1	; 0x06
 5e6:	17 82       	std	Z+7, r1	; 0x07
 5e8:	10 86       	std	Z+8, r1	; 0x08
task2.TickFct = &display_tick;//Function pointer for the tick.
 5ea:	2b e7       	ldi	r18, 0x7B	; 123
 5ec:	31 e0       	ldi	r19, 0x01	; 1
 5ee:	32 87       	std	Z+10, r19	; 0x0a
 5f0:	21 87       	std	Z+9, r18	; 0x09

// Task 3
task3.state = GAME_INIT;//Task initial state.
 5f2:	ea e8       	ldi	r30, 0x8A	; 138
 5f4:	f1 e0       	ldi	r31, 0x01	; 1
 5f6:	10 82       	st	Z, r1
task3.period = game_start_tick_period;//Task Period.
 5f8:	81 83       	std	Z+1, r24	; 0x01
 5fa:	92 83       	std	Z+2, r25	; 0x02
 5fc:	a3 83       	std	Z+3, r26	; 0x03
 5fe:	b4 83       	std	Z+4, r27	; 0x04
task3.elapsedTime = 0;//Task current elapsed time.
 600:	15 82       	std	Z+5, r1	; 0x05
 602:	16 82       	std	Z+6, r1	; 0x06
 604:	17 82       	std	Z+7, r1	; 0x07
 606:	10 86       	std	Z+8, r1	; 0x08
task3.TickFct = &game_start_tick;//Function pointer for the tick.
 608:	24 e6       	ldi	r18, 0x64	; 100
 60a:	30 e0       	ldi	r19, 0x00	; 0
 60c:	32 87       	std	Z+10, r19	; 0x0a
 60e:	21 87       	std	Z+9, r18	; 0x09

// Task 4
task4.state = PLAYER_ONE_INIT;//Task initial state.
 610:	ef e7       	ldi	r30, 0x7F	; 127
 612:	f1 e0       	ldi	r31, 0x01	; 1
 614:	10 82       	st	Z, r1
task4.period = player_one_tick_period;//Task Period.
 616:	81 83       	std	Z+1, r24	; 0x01
 618:	92 83       	std	Z+2, r25	; 0x02
 61a:	a3 83       	std	Z+3, r26	; 0x03
 61c:	b4 83       	std	Z+4, r27	; 0x04
task4.elapsedTime = 0;//Task current elapsed time.
 61e:	15 82       	std	Z+5, r1	; 0x05
 620:	16 82       	std	Z+6, r1	; 0x06
 622:	17 82       	std	Z+7, r1	; 0x07
 624:	10 86       	std	Z+8, r1	; 0x08
task4.TickFct = &player_one_tick;//Function pointer for the tick.
 626:	2f ee       	ldi	r18, 0xEF	; 239
 628:	31 e0       	ldi	r19, 0x01	; 1
 62a:	32 87       	std	Z+10, r19	; 0x0a
 62c:	21 87       	std	Z+9, r18	; 0x09

// Task 5
task5.state = PLAYER_ONE_PROJECTILE_INIT;//Task initial state.
 62e:	e4 e7       	ldi	r30, 0x74	; 116
 630:	f1 e0       	ldi	r31, 0x01	; 1
 632:	10 82       	st	Z, r1
task5.period = player_one_projectile_tick_period;//Task Period.
 634:	81 83       	std	Z+1, r24	; 0x01
 636:	92 83       	std	Z+2, r25	; 0x02
 638:	a3 83       	std	Z+3, r26	; 0x03
 63a:	b4 83       	std	Z+4, r27	; 0x04
task5.elapsedTime = 0;//Task current elapsed time.
 63c:	15 82       	std	Z+5, r1	; 0x05
 63e:	16 82       	std	Z+6, r1	; 0x06
 640:	17 82       	std	Z+7, r1	; 0x07
 642:	10 86       	std	Z+8, r1	; 0x08
task5.TickFct = &player_one_projectile_tick;//Function pointer for the tick.
 644:	8b e3       	ldi	r24, 0x3B	; 59
 646:	92 e0       	ldi	r25, 0x02	; 2
 648:	92 87       	std	Z+10, r25	; 0x0a
 64a:	81 87       	std	Z+9, r24	; 0x09

// Set the timer and turn it on
TimerSet(GCD);
 64c:	68 ec       	ldi	r22, 0xC8	; 200
 64e:	70 e0       	ldi	r23, 0x00	; 0
 650:	80 e0       	ldi	r24, 0x00	; 0
 652:	90 e0       	ldi	r25, 0x00	; 0
TimerOn();
 654:	87 dd       	rcall	.-1266   	; 0x164 <TimerSet>
 656:	97 dd       	rcall	.-1234   	; 0x186 <TimerOn>
 658:	7e 01       	movw	r14, r28
 65a:	8b e0       	ldi	r24, 0x0B	; 11
 65c:	e8 0e       	add	r14, r24
 65e:	f1 1c       	adc	r15, r1
 660:	de 01       	movw	r26, r28
 662:	11 96       	adiw	r26, 0x01	; 1
 664:	6d 01       	movw	r12, r26
unsigned short i; // Scheduler for-loop iterator
while(1) {
	// Scheduler code
	for ( i = 0; i < numTasks; i++ ) {
		// Task is ready to tick
		if ( tasks[i]->elapsedTime == tasks[i]->period ) {
 666:	f6 01       	movw	r30, r12
 668:	01 91       	ld	r16, Z+
 66a:	11 91       	ld	r17, Z+
 66c:	6f 01       	movw	r12, r30
 66e:	d8 01       	movw	r26, r16
 670:	15 96       	adiw	r26, 0x05	; 5
 672:	4d 91       	ld	r20, X+
 674:	5d 91       	ld	r21, X+
 676:	6d 91       	ld	r22, X+
 678:	7c 91       	ld	r23, X
 67a:	18 97       	sbiw	r26, 0x08	; 8
 67c:	11 96       	adiw	r26, 0x01	; 1
 67e:	8d 91       	ld	r24, X+
 680:	9d 91       	ld	r25, X+
 682:	0d 90       	ld	r0, X+
 684:	bc 91       	ld	r27, X
 686:	a0 2d       	mov	r26, r0
 688:	48 17       	cp	r20, r24
 68a:	59 07       	cpc	r21, r25
 68c:	6a 07       	cpc	r22, r26
 68e:	7b 07       	cpc	r23, r27
 690:	81 f4       	brne	.+32     	; 0x6b2 <main+0x142>
			// Setting next state for task
			tasks[i]->state = tasks[i]->TickFct(tasks[i]->state);
 692:	f8 01       	movw	r30, r16
 694:	80 81       	ld	r24, Z
 696:	01 84       	ldd	r0, Z+9	; 0x09
 698:	f2 85       	ldd	r31, Z+10	; 0x0a
 69a:	e0 2d       	mov	r30, r0
 69c:	08 2e       	mov	r0, r24
 69e:	00 0c       	add	r0, r0
 6a0:	99 0b       	sbc	r25, r25
 6a2:	09 95       	icall
 6a4:	d8 01       	movw	r26, r16
 6a6:	8c 93       	st	X, r24
			// Reset the elapsed time for next tick.
			tasks[i]->elapsedTime = 0;
 6a8:	f8 01       	movw	r30, r16
 6aa:	15 82       	std	Z+5, r1	; 0x05
 6ac:	16 82       	std	Z+6, r1	; 0x06
 6ae:	17 82       	std	Z+7, r1	; 0x07
 6b0:	10 86       	std	Z+8, r1	; 0x08
		}
		tasks[i]->elapsedTime += 1;
 6b2:	f8 01       	movw	r30, r16
 6b4:	85 81       	ldd	r24, Z+5	; 0x05
 6b6:	96 81       	ldd	r25, Z+6	; 0x06
 6b8:	a7 81       	ldd	r26, Z+7	; 0x07
 6ba:	b0 85       	ldd	r27, Z+8	; 0x08
 6bc:	01 96       	adiw	r24, 0x01	; 1
 6be:	a1 1d       	adc	r26, r1
 6c0:	b1 1d       	adc	r27, r1
 6c2:	85 83       	std	Z+5, r24	; 0x05
 6c4:	96 83       	std	Z+6, r25	; 0x06
 6c6:	a7 83       	std	Z+7, r26	; 0x07
 6c8:	b0 87       	std	Z+8, r27	; 0x08
TimerOn();

unsigned short i; // Scheduler for-loop iterator
while(1) {
	// Scheduler code
	for ( i = 0; i < numTasks; i++ ) {
 6ca:	ec 14       	cp	r14, r12
 6cc:	fd 04       	cpc	r15, r13
 6ce:	59 f6       	brne	.-106    	; 0x666 <main+0xf6>
			// Reset the elapsed time for next tick.
			tasks[i]->elapsedTime = 0;
		}
		tasks[i]->elapsedTime += 1;
	}
	while(!TimerFlag);
 6d0:	80 91 b1 01 	lds	r24, 0x01B1	; 0x8001b1 <TimerFlag>
 6d4:	88 23       	and	r24, r24
 6d6:	e1 f3       	breq	.-8      	; 0x6d0 <main+0x160>
	TimerFlag = 0;
 6d8:	10 92 b1 01 	sts	0x01B1, r1	; 0x8001b1 <TimerFlag>
}
 6dc:	c1 cf       	rjmp	.-126    	; 0x660 <main+0xf0>

000006de <_exit>:
 6de:	f8 94       	cli

000006e0 <__stop_program>:
 6e0:	ff cf       	rjmp	.-2      	; 0x6e0 <__stop_program>
